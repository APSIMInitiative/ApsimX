{
  "$type": "Models.Core.Simulations, Models",
  "ExplorerWidth": 282,
  "Version": 94,
  "ApsimVersion": "0.0.0.0",
  "Name": "Simulations",
  "Children": [
    {
      "$type": "Models.Storage.DataStore, Models",
      "useFirebird": false,
      "CustomFileName": null,
      "Name": "DataStore",
      "Children": [],
      "IncludeInDocumentation": true,
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Memo, Models",
      "Text": "This set of examples has one simulation and three experiments where factorial simulations are presented. Each simulation has examples of managers and report components to tailor the analysis and outputs to user's needs.\n\n**AgPastureExample**\n\nThis is an example of a simple rotation that is cut/grazed, fertilised and irrigated according to the managers provided.\n>*CutRotation* is the manager used to set the cut/grazing regime. It allows to set up cuts at fixed days interval or according to a target amount of DM and also to set the type of DM being targeted (residual or to be removed - DM produced).\n\n>*FertiliseFixedDates* gives options to apply fertiliser on determined dates, which can be year specific or not, use soil mineral N to prevent applications over a determined value of N at a certain depth and to provide details about the fertiliser application.\n\n>*AutomaticIrrigation* allows the user to turn irrigation on or off. Once on, irrigation will occur during a determined period, with a determined amount allocated for the period chosen, and will start and end depending on PAWC values set by the user. The user also has the option to set the minimum amount of days that it takes for an irrigation event to happen again, the maximum amount of water that can be applied at each event and the depth to which PAWC is calculated.\n\n>*ReportExample and Report* components show options on how to tailor the outputs as it best suits the user needs. More details are given in the components.\n\n**PastureByWaterAndNitrogen**\n\nThis is an example of a factorial experiment with a simple rotational cut/grazing. The experiment is set as a permutation between the factors Nitrogen, with doses from 0 up to 30 kgN/ha scaled by 5kgN/ha steps, and Water, which allows irrigated and dryland simulations. It has a base simulation that has the same managers from the previous simulation plus a report manager and another option of report component for outputs.\n\n>*ReportHelper* is a manager that improves the options of dates when outputs are generated. It gives the option to report outputs on particular days that are the same every year, report on absolute dates (that are not the same every year) or to delay the start of reporting (for example, skip the first 2-3 years of the simulation).\n\n>*ReportAnnual* is a component that shows how the total annual production is outputed.\n\n**CO2xBaseTemperature**\n\nThis is an example of sensibility analysis to changes in atmospheric CO2 levels and minimum growth temperature (base temperature) via two managers. It is a factorial with the permutation between two CO2 levels (350 and 700 ppm) and five base temperatures (0,2,5,10,15). The *CO2Parameters* and *TemperatureParameters* managers also have the function of providing an example of how to change parameters via a manager script. A list of public parameters is provided in the [science documentation of AgPasture](http://apsimdev.apsim.info/Portals/0/Documentation/ApsimX/AgPastureScience.pdf).\n\n>*CO2Parameters* manager allows to change the atmospheric CO2 value. When not specified, APSIM will use the default value of 350 ppm. This manager also provides the option of changing the default values of parameters that are used to calculate the effect of CO2 on photosynthesis. These parameters are species specific and should be changed if the user wants to test the sensibility to these parameters or has detailed information on these parameters for a certain species/cultivar. Note that this manager is species specific, except for the atmospheric level of CO2. Therefore, if the parameters need to be changed for another species at the same time (for example pasture mixes), the user will need one manager for each species.\n\n>*TemperatureParameters* manager allows to change parameters that affect the plant photosynthesis response to temperature. Again, this is useful to test the sensibility to the parameters and to introduce more detailed information about a certain species/cultivar. This manager is species speficic and, therefore, a manager per species is needed. \n\n**CO2xHeatOnset**\nThis is an example of sensibility analysis to changes in atmospheric CO2 levels and the 'HeatOnsetTemperature' parameter similar to the *CO2xBaseTemperature* simulation. The 'HeatOnsetTemperature' is the onset temperature for heat effects on photosynthesis. This simulation presents a different way of changing parameters directly via the factor component (instead of introducing a manager). In this case, a different factor component would be needed to change the parameter for another species, when necessary in mixed species simulations.  \n\n\n\n \n\n",
      "Name": "Memo",
      "Children": [],
      "IncludeInDocumentation": true,
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Core.Simulation, Models",
      "Name": "AgPastureExample",
      "Children": [
        {
          "$type": "Models.Clock, Models",
          "Start": "1980-07-01T00:00:00",
          "End": "1985-06-30T00:00:00",
          "Name": "Clock",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Weather, Models",
          "FileName": "%root%/Examples/WeatherFiles/lincoln.met",
          "ExcelWorkSheetName": null,
          "Name": "Weather",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
          "Name": "SoilArbitrator",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Summary, Models",
          "CaptureErrors": true,
          "CaptureWarnings": true,
          "CaptureSummaryText": true,
          "Name": "Summary",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Zone, Models",
          "Area": 1.0,
          "Slope": 0.0,
          "AspectAngle": 0.0,
          "Altitude": 50.0,
          "Name": "Field",
          "Children": [
            {
              "$type": "Models.AgPasture.SimpleGrazing, Models",
              "GrazingRotationType": 0,
              "SimpleGrazingFrequencyString": "21",
              "SimpleMinGrazable": 0.0,
              "SimpleGrazingResidual": 1500.0,
              "PreGrazeDMArray": [
                1000.0,
                1000.0,
                1000.0,
                1000.0,
                1000.0,
                1000.0,
                1000.0,
                1000.0,
                1000.0,
                1000.0,
                1000.0,
                1000.0
              ],
              "PostGrazeDMArray": [
                2000.0,
                2000.0,
                2000.0,
                2000.0,
                2000.0,
                2000.0,
                2000.0,
                2000.0,
                2000.0,
                2000.0,
                2000.0,
                2000.0
              ],
              "FlexibleExpressionForTimingOfGrazing": null,
              "FlexibleGrazePostDM": 0.0,
              "MaximumRotationLengthArray": null,
              "MinimumRotationLengthArray": null,
              "NoGrazingStartString": null,
              "NoGrazingEndString": null,
              "FractionDefoliatedNToSoil": 0.7,
              "FractionExcretedNToDung": [
                0.45
              ],
              "CNRatioDung": "NaN",
              "DepthUrineIsAdded": 250.0,
              "FractionPopulationDecline": 0.0,
              "TramplingOn": false,
              "MaximumPropLitterMovedToSoil": 0.1,
              "PastureConsumedAtMaximumRateOfLitterRemoval": 1200.0,
              "Name": "SimpleGrazing",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using System.Linq;\r\nusing APSIM.Shared.Utilities;\r\nusing Models.PMF;\r\nusing Models.Soils.Nutrients;\r\nusing Models.Soils;\r\nusing Models.Core;\r\nusing System;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        [Link] Clock clock;\r\n        [Link] Fertiliser fertiliser;\r\n        [Link] ISummary summary;\r\n        [Link] Soil soil;\r\n\r\n        private Nutrient nutrient;\r\n        private SoilNitrogen soilN;\r\n\r\n        [Separator(\"Fertiliser will be applied on the date(s) below\")]\r\n        [Description(\"Apply fertiliser on the same day(s) each year? If no, then must include the year of appliaction below\")]\r\n        public bool EachYear { get; set; }\r\n\r\n        [Description(\"Dates for one or more fertiliser applications (dd-mmm or dd-mmm-yyyy) as a list with a comma between dates\")]\r\n        public string[] Dates { get; set; }\r\n\r\n        [Separator(\"Test for the mineral N in the soil and don't apply the fertiliser if greater than X kgN/ha is stored in the soil above a depth of Y mm\")]\r\n        [Description(\"Use a critical soil mineral N to prevent application above a threshold?\")]\r\n        public bool UseCritNThreshold { get; set; }\r\n\r\n        [Description(\"Don't add fertiliser if N in the soil to the depth below exceeds (kg/ha)\")]\r\n        public double CritNThreshold { get; set; }\r\n\r\n        [Description(\"Depth to which the amount of N in the soil should be calculated (mm)\")]\r\n        public double CritNDepth { get; set; }\r\n\r\n        [Separator(\"Fertiliser application details\")]\r\n        [Description(\"Depth at which to apply the fertiliser (mm)\")]\r\n        public double Depth { get; set; }\r\n\r\n        [Description(\"Amount of fertiliser to apply (kg N /ha) per application\")]\r\n        public double Amount { get; set; }\r\n\r\n        [Description(\"Fertiliser type - select from the list\")]\r\n        public Fertiliser.Types FertiliserType { get; set; }\r\n\r\n\r\n        [EventSubscribe(\"StartOfSimulation\")]\r\n        private void FindSoilNOrNutrient(object sender, EventArgs e)\r\n        {\r\n            nutrient = Apsim.Find(this, typeof(Nutrient)) as Nutrient;\r\n            soilN = Apsim.Find(this, typeof(SoilNitrogen)) as SoilNitrogen;\r\n\r\n            if (nutrient == null && soilN == null)\r\n                throw new Exception(string.Format(\"Error in script {0}: Unable to find nutrient or soilN.\", Name));\r\n        }\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            if (OnApplicationDate())\r\n            {\r\n                if (NContentBelowThreshold())\r\n                    fertiliser.Apply(Amount, FertiliserType, Depth);\r\n                else\r\n                    summary.WriteMessage(this, \"Skipping fertiliser application due to soil mineral N content being above critical threshold.\");\r\n            }\r\n        }\r\n\r\n        /// <summary>Checks if today's date is one of the specified fertiliser application dates.</summary>\r\n        private bool OnApplicationDate()\r\n        {\r\n            if (EachYear)\r\n                return Dates.Any(d => DateUtilities.DatesEqual(d, clock.Today));\r\n            \r\n            DateTime[] dates = Dates.Select(d => DateTime.ParseExact(d, \"d-MMM-yyyy\", null)).ToArray();\r\n            return dates.Any(d => SameDate(d, clock.Today));\r\n        }\r\n\r\n        /// <summary>Checks if N content in soil is below critical threshold.</summary>\r\n        private bool NContentBelowThreshold()\r\n        {\r\n            if (!UseCritNThreshold)\r\n                return true;\r\n            \r\n            double[] weights = GetLayerWeights();\r\n            double cumSoilN = 0;\r\n\r\n            for (int i = 0; i < soil.Thickness.Length; i++)\r\n            {\r\n                if (nutrient != null)\r\n                    cumSoilN += weights[i] * nutrient.MineralN[i];\r\n                else if (soilN != null)\r\n                    cumSoilN += weights[i] * soilN.mineral_n[i];\r\n            }\r\n\r\n            return cumSoilN <= CritNThreshold;\r\n        }\r\n\r\n        private double[] GetLayerWeights()\r\n        {\r\n            double[] weights = new double[soil.Thickness.Length];\r\n            double cumDepth = 0;\r\n\r\n            for (int i = 0; i < soil.Thickness.Length; i++)\r\n            {\r\n                cumDepth += soil.Thickness[i];\r\n                if (cumDepth < CritNDepth)\r\n                    weights[i] = 1;\r\n                else if (cumDepth - soil.Thickness[i] <= CritNDepth)\r\n                    weights[i] = (CritNDepth - (cumDepth - soil.Thickness[i])) / soil.Thickness[i];\r\n                else\r\n                    weights[i] = 0;\r\n            }\r\n\r\n            return weights;\r\n        }\r\n\r\n        private bool SameDate(DateTime d1, DateTime d2)\r\n        {\r\n            return d1.Year == d2.Year && d1.DayOfYear == d2.DayOfYear;\r\n        }\r\n    }\r\n}\r\n",
              "Parameters": [
                {
                  "Key": "EachYear",
                  "Value": "True"
                },
                {
                  "Key": "Dates",
                  "Value": "5-jan,5-feb,5-mar,5-apr,5-aug,5-sep,5-oct,5-nov,5-dec"
                },
                {
                  "Key": "UseCritNThreshold",
                  "Value": "False"
                },
                {
                  "Key": "CritNThreshold",
                  "Value": "50"
                },
                {
                  "Key": "CritNDepth",
                  "Value": "75"
                },
                {
                  "Key": "Depth",
                  "Value": "50"
                },
                {
                  "Key": "Amount",
                  "Value": "15"
                },
                {
                  "Key": "FertiliserType",
                  "Value": "UreaN"
                }
              ],
              "Name": "FertiliseFixedDates",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using APSIM.Shared.Utilities;\r\nusing System.Xml.Serialization;\r\nusing Models.Soils;\r\nusing Models.PMF;\r\nusing Models.Core;\r\nusing System;\r\nusing System.Linq;\r\n\r\n\r\n        \r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    [System.Xml.Serialization.XmlInclude(typeof(Model))]\r\n    public class Script : Model\r\n    {\r\n        //Communication to other modules\r\n        [Link] ISummary summary = null;\r\n        [Link] Irrigation Irrigation;\r\n        [Link] Clock Clock;\r\n        [Link] Soil Soil;\r\n        [Link(IsOptional = true)] IPlant existingCrop;\r\n       \r\n        //User inputs from properties tab\r\n        [Description(\"Turn irrigation on?\")]\r\n        public bool allowIrrigation { get; set; }\r\n        [Description(\"Start of irrigation season (dd-MMM)\")]\r\n        public string seasonStart { get; set; }\r\n        [Description(\"End of irrigation season (dd-MMM)\")]\r\n        public string seasonEnd { get; set; }\r\n        [Description(\"Season allocation (mm)\")]\r\n        public double seasonsAllocation { get; set; }\r\n        [Description(\"Deficit to trigger irrigation (% PAWC)\")]\r\n        public double triggerDeficit { get; set; }\r\n        [Description(\"Deficit to stop irrigaton (% PAWC)\")]\r\n        public double targetDeficit { get; set; }\r\n        [Description(\"Minimum days for irrigation to return\")]\r\n        public double returndays { get; set; }\r\n        [Description(\"Maximum irrigation application (mm/day)\")]\r\n        public double maximumAmount { get; set; }\r\n        [Description(\"Depth to calculate PAWC (mm)\")]\r\n        public double depthPAWC { get; set; }\r\n\r\n        //Class members\r\n        [XmlIgnore] public double TopSWdeficit { get; set; }\r\n        [XmlIgnore] public double TopSWC { get; set; }\r\n        [XmlIgnore] public double DaysSinceIrrigation { get; set; }\r\n        [XmlIgnore] public double AmountToApply { get; set; }\r\n        [XmlIgnore] public double SeasonAppliedAmount { get; set; }\r\n        \r\n        private bool IrrigationIsAllowed { get; set; }\r\n        private bool SeasonIsOpen { get; set; }\r\n        private bool CropIsActive { get; set; }\r\n        private bool IrrigatorIsAvailable { get; set; }\r\n        private bool SoilIsDry { get; set; }\r\n\r\n        private DateTime StartDate;\r\n        private DateTime EndDate;\r\n        private double TopDUL;\r\n        private double TopLL;\r\n        private int nLayers;\r\n    \r\n        //Calculate static soil variables\r\n        [EventSubscribe(\"StartOfSimulation\")]\r\n        private void OnStartOfSimulation(object sender, EventArgs e)\r\n        {   \r\n            //Set the season dates\r\n            StartDate = DateTime.Parse(seasonStart + \"-\" + Clock.Today.Year.ToString());\r\n            EndDate = DateTime.Parse(seasonEnd + \"-\" + Clock.Today.Year.ToString());\r\n            \r\n            //Can we irrigate at all?\r\n            IrrigationIsAllowed = false; \r\n            if (allowIrrigation)\r\n                IrrigationIsAllowed = true; \r\n\r\n            //Calculate soil water variables\r\n            double depthFromSurface = 0.0;\r\n            double fracLayer = 0.0;\r\n            nLayers = Soil.Thickness.Length;\r\n            for (int layer = 0; layer < nLayers; layer++)\r\n            {\r\n                fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.Thickness[layer]);\r\n                TopLL += Soil.LL15mm[layer] * fracLayer;\r\n                TopDUL += Soil.DULmm[layer] * fracLayer;\r\n                depthFromSurface += Soil.Thickness[layer];\r\n                if (depthFromSurface >= depthPAWC)\r\n                    layer = nLayers;\r\n            }\r\n        }\r\n             \r\n        //Determine daily requirement for irrigation\r\n        [EventSubscribe(\"StartOfDay\")]\r\n        private void OnStartOfDay(object sender, EventArgs e)\r\n        {\r\n            //Can we irrigate today?          \r\n            SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);\r\n            if (!SeasonIsOpen)\r\n                SeasonAppliedAmount = 0;\r\n\r\n            //Is there a crop in the ground that needs irrigation?\r\n            CropIsActive = false;\r\n            if ((existingCrop != null) && (existingCrop.IsAlive))\r\n                CropIsActive = true;\r\n            //if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))\r\n          \r\n            //Is the irrigator available?\r\n            IrrigatorIsAvailable = false;\r\n            DaysSinceIrrigation += 1;\r\n            if (DaysSinceIrrigation >= returndays)\r\n                IrrigatorIsAvailable = true;\r\n          \r\n            //Is the soil dry enough to require irrigation?\r\n            SoilIsDry = false;\r\n            double depthFromSurface = 0.0;\r\n            double fracLayer = 0.0;\r\n            TopSWC = 0.0;\r\n            for (int layer = 0; layer < nLayers; layer++)\r\n            //for (int layer = 0; depthFromSurface < depthPAWC + Soil.Thickness[layer]; layer++)\r\n            {\r\n                fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.Thickness[layer]);\r\n                TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;\r\n                depthFromSurface += Soil.Thickness[layer];\r\n                if (depthFromSurface >= depthPAWC)\r\n                    layer = nLayers;\r\n            }\r\n            \r\n            TopSWdeficit = TopSWC - TopDUL;\r\n            if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)\r\n                SoilIsDry = true;\r\n                \r\n            //Are all the conditions ratifying irrigation\r\n            if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)\r\n            {\r\n                //Lets bloody well irrigate then!!!!\r\n                AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;\r\n                AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));\r\n                Irrigation.Apply(AmountToApply);\r\n                DaysSinceIrrigation = 0;\r\n                SeasonAppliedAmount += AmountToApply;\r\n            }\r\n        }\r\n        \r\n        ///Checks whether theDate is between iniDate and endDate (non-year specific)\r\n        private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)\r\n        {\r\n            bool result = false;\r\n            if (iniDate.DayOfYear < endDate.DayOfYear)\r\n            {\r\n                // period is within one year, ex: summer in the northern hemisphere\r\n                if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))\r\n                    result = true;\r\n            }\r\n            else\r\n            {\r\n                // period goes over the end of the year, ex: summer in the southern hemisphere\r\n                if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))\r\n                    result = true;\r\n            }\r\n            \r\n            return result;\r\n        }\r\n    }\r\n}\r\n",
              "Parameters": [
                {
                  "Key": "allowIrrigation",
                  "Value": "True"
                },
                {
                  "Key": "seasonStart",
                  "Value": "1-sep"
                },
                {
                  "Key": "seasonEnd",
                  "Value": "30-apr"
                },
                {
                  "Key": "seasonsAllocation",
                  "Value": "10000"
                },
                {
                  "Key": "triggerDeficit",
                  "Value": "75"
                },
                {
                  "Key": "targetDeficit",
                  "Value": "95"
                },
                {
                  "Key": "returndays",
                  "Value": "3"
                },
                {
                  "Key": "maximumAmount",
                  "Value": "30"
                },
                {
                  "Key": "depthPAWC",
                  "Value": "300"
                }
              ],
              "Name": "AutomaticIrrigation",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.MicroClimate, Models",
              "a_interception": 0.0,
              "b_interception": 1.0,
              "c_interception": 0.0,
              "d_interception": 0.0,
              "soil_albedo": 0.23,
              "SoilHeatFluxFraction": 0.4,
              "MinimumHeightDiffForNewLayer": 0.0,
              "NightInterceptionFraction": 0.5,
              "ReferenceHeight": 2.0,
              "Name": "MicroClimate",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Irrigation, Models",
              "Name": "Irrigation",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Fertiliser, Models",
              "Name": "Fertiliser",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Surface.SurfaceOrganicMatter, Models",
              "InitialResidueName": "Sward",
              "InitialResidueType": "grass",
              "InitialResidueMass": 1000.0,
              "InitialStandingFraction": 0.0,
              "InitialCPR": 0.0,
              "InitialCNR": 15.0,
              "ResourceName": "SurfaceOrganicMatter",
              "Name": "SurfaceOrganicMatter",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Soils.Soil, Models",
              "RecordNumber": 0,
              "ASCOrder": null,
              "ASCSubOrder": null,
              "SoilType": "NZ_Sedimentary",
              "LocalName": "Lismore",
              "Site": "Winchmore",
              "NearestTown": "Ashburton",
              "Region": "Canterbury",
              "State": null,
              "Country": "New Zealand",
              "NaturalVegetation": null,
              "ApsoilNumber": null,
              "Latitude": -48.48,
              "Longitude": 0.0,
              "LocationAccuracy": null,
              "DataSource": null,
              "Comments": null,
              "Name": "Soil",
              "Children": [
                {
                  "$type": "Models.Soils.Chemical, Models",
                  "Depth": [
                    "0-15",
                    "15-30",
                    "30-50",
                    "50-65",
                    "65-90",
                    "90-120",
                    "120-150"
                  ],
                  "Thickness": [
                    150.0,
                    150.0,
                    200.0,
                    150.0,
                    250.0,
                    300.0,
                    300.0
                  ],
                  "NO3N": [
                    5.0,
                    2.5,
                    1.0,
                    0.75,
                    0.5,
                    0.5,
                    0.5
                  ],
                  "NH4N": [
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1
                  ],
                  "PH": [
                    6.0,
                    6.0,
                    6.0,
                    6.0,
                    6.0,
                    6.0,
                    6.0
                  ],
                  "CL": null,
                  "EC": null,
                  "ESP": null,
                  "Name": "Chemical",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Physical, Models",
                  "Depth": [
                    "0-15",
                    "15-30",
                    "30-50",
                    "50-65",
                    "65-90",
                    "90-120",
                    "120-150"
                  ],
                  "Thickness": [
                    150.0,
                    150.0,
                    200.0,
                    150.0,
                    250.0,
                    300.0,
                    300.0
                  ],
                  "ParticleSizeClay": [
                    20.0,
                    15.0,
                    12.0,
                    8.0,
                    6.0,
                    5.0,
                    5.0
                  ],
                  "ParticleSizeSand": null,
                  "ParticleSizeSilt": null,
                  "BD": [
                    1.3,
                    1.35,
                    1.0,
                    0.53,
                    0.31,
                    0.3,
                    0.3
                  ],
                  "AirDry": [
                    0.05,
                    0.12,
                    0.055,
                    0.015,
                    0.01,
                    0.01,
                    0.01
                  ],
                  "LL15": [
                    0.15,
                    0.14,
                    0.055,
                    0.015,
                    0.01,
                    0.01,
                    0.01
                  ],
                  "DUL": [
                    0.36,
                    0.34,
                    0.19,
                    0.065,
                    0.04,
                    0.03,
                    0.03
                  ],
                  "SAT": [
                    0.45,
                    0.43,
                    0.25,
                    0.15,
                    0.11,
                    0.11,
                    0.11
                  ],
                  "KS": [
                    5000.0,
                    2500.0,
                    3000.0,
                    10000.0,
                    17500.0,
                    20000.0,
                    20000.0
                  ],
                  "BDMetadata": null,
                  "AirDryMetadata": null,
                  "LL15Metadata": null,
                  "DULMetadata": null,
                  "SATMetadata": null,
                  "KSMetadata": null,
                  "Name": "Physical",
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.15,
                        0.14,
                        0.06,
                        0.02,
                        0.01,
                        0.01,
                        0.01
                      ],
                      "KL": [
                        0.1,
                        0.1,
                        0.08,
                        0.04,
                        0.01,
                        0.0,
                        0.0
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        0.0,
                        0.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "AGPRyegrassSoil",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.15,
                        0.14,
                        0.06,
                        0.02,
                        0.01,
                        0.01,
                        0.01
                      ],
                      "KL": [
                        0.1,
                        0.1,
                        0.08,
                        0.04,
                        0.01,
                        0.0,
                        0.0
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        0.0,
                        0.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "AGPWhiteCloverSoil",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.WaterModel.WaterBalance, Models",
                  "SummerDate": "1-Nov",
                  "SummerU": 6.0,
                  "SummerCona": 3.5,
                  "WinterDate": "1-apr",
                  "WinterU": 2.0,
                  "WinterCona": 2.0,
                  "DiffusConst": 88.0,
                  "DiffusSlope": 35.0,
                  "Salb": 0.13,
                  "CN2Bare": 73.0,
                  "CNRed": 20.0,
                  "CNCov": 0.8,
                  "Slope": 0.0,
                  "DischargeWidth": 0.0,
                  "CatchmentArea": 0.0,
                  "Thickness": [
                    150.0,
                    150.0,
                    200.0,
                    150.0,
                    250.0,
                    300.0,
                    300.0
                  ],
                  "SWCON": [
                    0.5,
                    0.52,
                    0.55,
                    0.6,
                    0.65,
                    0.65,
                    0.65
                  ],
                  "KLAT": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "ResourceName": "WaterBalance",
                  "Name": "SoilWater",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Organic, Models",
                  "Depth": [
                    "0-15",
                    "15-30",
                    "30-50",
                    "50-65",
                    "65-90",
                    "90-120",
                    "120-150"
                  ],
                  "FOMCNRatio": 40.0,
                  "Thickness": [
                    150.0,
                    150.0,
                    200.0,
                    150.0,
                    250.0,
                    300.0,
                    300.0
                  ],
                  "Carbon": [
                    3.0,
                    1.0,
                    0.6,
                    0.4,
                    0.25,
                    0.15,
                    0.1
                  ],
                  "SoilCNRatio": [
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0
                  ],
                  "FBiom": [
                    0.04,
                    0.02,
                    0.02,
                    0.01,
                    0.01,
                    0.0,
                    0.0
                  ],
                  "FInert": [
                    0.5,
                    0.7,
                    0.83,
                    0.9,
                    0.95,
                    0.99,
                    0.99
                  ],
                  "FOM": [
                    331.337020409173,
                    245.46050190550559,
                    164.53709493722965,
                    121.89207790753734,
                    73.931282427002344,
                    40.574348067292682,
                    22.267674346259405
                  ],
                  "Name": "Organic",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.InitialWater, Models",
                  "PercentMethod": 1,
                  "FractionFull": 0.95,
                  "DepthWetSoil": "NaN",
                  "RelativeTo": null,
                  "Name": "Initial water",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Sample, Models",
                  "Depth": [
                    "0-15",
                    "15-30",
                    "30-50",
                    "50-65",
                    "65-90",
                    "90-120",
                    "120-150"
                  ],
                  "Thickness": [
                    150.0,
                    150.0,
                    200.0,
                    150.0,
                    250.0,
                    300.0,
                    300.0
                  ],
                  "NO3N": null,
                  "NH4N": null,
                  "SW": null,
                  "OC": null,
                  "EC": null,
                  "CL": null,
                  "ESP": null,
                  "PH": null,
                  "SWUnits": 0,
                  "OCUnits": 0,
                  "PHUnits": 0,
                  "Name": "Initial nitrogen",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.CERESSoilTemperature, Models",
                  "Name": "CERESSoilTemperature",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Nutrients.Nutrient, Models",
                  "ResourceName": "Nutrient",
                  "Name": "Nutrient",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.AgPasture.PastureSpecies, Models",
              "InitialShootDM": 1500.0,
              "InitialRootDM": 450.0,
              "InitialRootDepth": 750.0,
              "ResourceName": "AGPRyegrass",
              "Name": "AGPRyegrass",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.AgPasture.PastureSpecies, Models",
              "InitialShootDM": 500.0,
              "InitialRootDM": 150.0,
              "InitialRootDepth": 350.0,
              "ResourceName": "AGPWhiteClover",
              "Name": "AGPWhiteClover",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Report, Models",
              "VariableNames": [
                "[Clock].Today as Date",
                "// These examples are set up for Ryegrass and WhiteClover so add in any other species as needed for your simulation",
                "// The format of AggregationType (variable) from [Report].DayAfterLastOutput to [Clock].Today is used so that when the reporting frequency is changed the outputs are still sensible",
                "// If the name of the Report component (\"ReportExample\") here is changed in the simulation tree then all the references to that name in the outputs below also need to be changed",
                "",
                "// If all you want is harvested pasture or net herbage growth and/or standing biomass ....",
                "Sum of ([AGPRyegrass].HarvestedWt + [AGPWhiteClover].HarvestedWt) from [ReportExample].DayAfterLastOutput to [Clock].Today as HarvestedWt   //the amount harvested (kg DM /ha)",
                "Sum of ([AGPRyegrass].NetGrowthWt + [AGPWhiteClover].NetGrowthWt) from [ReportExample].DayAfterLastOutput to [Clock].Today as NetGrowthWt   //the amount harvested (kg DM /ha)",
                "Mean of ([AGPRyegrass].AboveGroundWt + [AGPWhiteClover].AboveGroundWt) from [ReportExample].DayAfterLastOutput to [Clock].Today as StandingBiomass   //pasture biomass (could also be reported as Last rather than Mean) (kg DM /ha)",
                "",
                "// outputs that are used more frequently than others",
                "Sum of ([AGPRyegrass].WaterDemand + [AGPWhiteClover].WaterDemand) from [ReportExample].DayAfterLastOutput to [Clock].Today as WaterDemand   //how much soil water the pasture could use (mm)",
                "Sum of (sum([AGPRyegrass].WaterUptake) + Sum([AGPWhiteClover].WaterUptake)) from [ReportExample].DayAfterLastOutput to [Clock].Today as WaterUptake    //the amount of water actuially taken up from the soil (mm)",
                "Sum of ([AGPRyegrass].SoilDemandN + [AGPWhiteClover].SoilDemandN) from [ReportExample].DayAfterLastOutput to [Clock].Today as NDemand                   //N demand (kg N /ha)",
                "Sum of ([AGPRyegrass].SoilUptakeN + [AGPWhiteClover].SoilUptakeN) from [ReportExample].DayAfterLastOutput to [Clock].Today as NitrogenUptake       //N uptake from the soil (kg N /ha)",
                "Sum of [AGPWhiteClover].FixedN from [ReportExample].DayAfterLastOutput to [Clock].Today as NitrogenFixed       //N uptake from the soil (kg N /ha)",
                "Mean of ([AGPRyegrass].AboveGroundWt + [AGPWhiteClover].AboveGroundWt) from [ReportExample].DayAfterLastOutput to [Clock].Today as HerbageMass",
                "Mean of ([AGPRyegrass].LAIGreen + [AGPWhiteClover].LAIGreen) from [ReportExample].DayAfterLastOutput to [Clock].Today as LAIGreen",
                "Mean of ([AGPRyegrass].LAIDead + [AGPWhiteClover].LAIDead + [AGPRyegrass].LAIGreen + [AGPWhiteClover].LAIGreen) from [ReportExample].DayAfterLastOutput to [Clock].Today as LAITotal",
                "",
                "// outputs that indicate what conditions are limiting growth - each growth-limiting factor is 0 (full stress) to 1 (no stress) but there are two components and the values are added so 2 indicates no stress",
                "Mean of ([AGPRyegrass].GlfTemperature + [AGPWhiteClover].GlfTemperature) from [ReportExample].DayAfterLastOutput to [Clock].Today as GlfTemp       //stress from non-optimal temperature",
                "Mean of ([AGPRyegrass].GlfWaterSupply + [AGPWhiteClover].GlfWaterSupply) from [ReportExample].DayAfterLastOutput to [Clock].Today as GlfWater       //stress from water limitation",
                "Mean of ([AGPRyegrass].GlfNSupply + [AGPWhiteClover].GlfNSupply) from [ReportExample].DayAfterLastOutput to [Clock].Today as GlfNitrogen       //stress from N limitation",
                "",
                "// photsynthesis-related outputs - all these are in units of C not DM",
                "Sum of ([AGPRyegrass].GPP +[AGPWhiteClover].GPP) from [ReportExample].DayAfterLastOutput to [Clock].Today as GrossPrimaryProduction       //GPP (kg C /ha) ",
                "Sum of ([AGPRyegrass].NPP +[AGPWhiteClover].NPP) from [ReportExample].DayAfterLastOutput to [Clock].Today as NettPrimaryProduction        //NPP (kg C /ha)",
                "",
                "// examples of more detailed tissue-based information - see the list of outputs for many more options"
              ],
              "EventNames": [
                "[Clock].EndOfDay"
              ],
              "GroupByVariableName": null,
              "Name": "ReportExample",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Report, Models",
              "VariableNames": [
                "[Clock].Today as Date",
                "// These examples are set up for Ryegrass and WhiteClover so add in any other species as needed for your simulation",
                "// The format of AggregationType (variable) from [Report].DayAfterLastOutput to [Clock].Today is used so that when the reporting frequency is changed the outputs are still sensible",
                "// If the name of the Report component (\"Report\") here is changed in the simulation tree then all the references to that name in the outputs below also need to be changed",
                "",
                "// If all you want is an annual pattern of harvested pasture based on the production year (July to June)  ....",
                "Sum of ([AGPRyegrass].HarvestedWt + [AGPWhiteClover].HarvestedWt) from 1-Jul to [Clock].Today as HarvestedWt   //the amount harvested (kg DM /ha)"
              ],
              "EventNames": [
                "[Clock].EndOfDay"
              ],
              "GroupByVariableName": null,
              "Name": "Report",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "IncludeInDocumentation": true,
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Graph, Models",
      "Caption": null,
      "Axis": [
        {
          "$type": "Models.Axis, Models",
          "Type": 3,
          "Title": null,
          "Inverted": false,
          "Minimum": "NaN",
          "Maximum": "NaN",
          "Interval": "NaN",
          "DateTimeAxis": true,
          "CrossesAtZero": false
        },
        {
          "$type": "Models.Axis, Models",
          "Type": 0,
          "Title": null,
          "Inverted": false,
          "Minimum": "NaN",
          "Maximum": "NaN",
          "Interval": "NaN",
          "DateTimeAxis": false,
          "CrossesAtZero": false
        }
      ],
      "LegendPosition": 0,
      "LegendOrientation": 0,
      "DisabledSeries": [],
      "LegendOutsideGraph": false,
      "Name": "Harvested Pasture by Production Year",
      "Children": [
        {
          "$type": "Models.Series, Models",
          "Type": 1,
          "XAxis": 3,
          "YAxis": 0,
          "ColourArgb": 0,
          "FactorToVaryColours": "SimulationName",
          "FactorToVaryMarkers": null,
          "FactorToVaryLines": null,
          "Marker": 11,
          "MarkerSize": 0,
          "Line": 0,
          "LineThickness": 0,
          "TableName": "Report",
          "XFieldName": "Date",
          "YFieldName": "HarvestedWt",
          "X2FieldName": "",
          "Y2FieldName": "",
          "ShowInLegend": false,
          "IncludeSeriesNameInLegend": false,
          "Cumulative": false,
          "CumulativeX": false,
          "Filter": null,
          "Name": "Series",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "IncludeInDocumentation": true,
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Factorial.Experiment, Models",
      "DisabledSimNames": null,
      "Name": "PastureByWaterAndNitrogen",
      "Children": [
        {
          "$type": "Models.Factorial.Factors, Models",
          "Name": "Factors",
          "Children": [
            {
              "$type": "Models.Factorial.Permutation, Models",
              "Name": "Permutation",
              "Children": [
                {
                  "$type": "Models.Factorial.Factor, Models",
                  "Specification": "[FertiliseFixedDates].Script.Amount=0 to 30 step 5",
                  "Name": "Nitrogen",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Factorial.Factor, Models",
                  "Specification": "[AutomaticIrrigation].Script.allowIrrigation=false,true",
                  "Name": "Water",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Simulation, Models",
          "Name": "Base",
          "Children": [
            {
              "$type": "Models.Clock, Models",
              "Start": "1980-07-01T00:00:00",
              "End": "1989-06-30T00:00:00",
              "Name": "Clock",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Weather, Models",
              "FileName": "%root%/Examples/WeatherFiles/lincoln.met",
              "ExcelWorkSheetName": null,
              "Name": "Weather",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
              "Name": "SoilArbitrator",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Summary, Models",
              "CaptureErrors": true,
              "CaptureWarnings": true,
              "CaptureSummaryText": true,
              "Name": "Summary",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Core.Zone, Models",
              "Area": 1.0,
              "Slope": 0.0,
              "AspectAngle": 0.0,
              "Altitude": 50.0,
              "Name": "Field",
              "Children": [
                {
                  "$type": "Models.AgPasture.SimpleGrazing, Models",
                  "GrazingRotationType": 0,
                  "SimpleGrazingFrequencyString": "21",
                  "SimpleMinGrazable": 0.0,
                  "SimpleGrazingResidual": 1500.0,
                  "PreGrazeDMArray": [
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0
                  ],
                  "PostGrazeDMArray": [
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0
                  ],
                  "FlexibleExpressionForTimingOfGrazing": null,
                  "FlexibleGrazePostDM": 0.0,
                  "MaximumRotationLengthArray": null,
                  "MinimumRotationLengthArray": null,
                  "NoGrazingStartString": null,
                  "NoGrazingEndString": null,
                  "FractionDefoliatedNToSoil": 0.7,
                  "FractionExcretedNToDung": [
                    0.45
                  ],
                  "CNRatioDung": "NaN",
                  "DepthUrineIsAdded": 250.0,
                  "FractionPopulationDecline": 0.0,
                  "TramplingOn": false,
                  "MaximumPropLitterMovedToSoil": 0.1,
                  "PastureConsumedAtMaximumRateOfLitterRemoval": 1200.0,
                  "Name": "SimpleGrazing",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "Code": "using System.Linq;\r\nusing APSIM.Shared.Utilities;\r\nusing Models.PMF;\r\nusing Models.Soils.Nutrients;\r\nusing Models.Soils;\r\nusing Models.Core;\r\nusing System;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        [Link] Clock clock;\r\n        [Link] Fertiliser fertiliser;\r\n        [Link] ISummary summary;\r\n        [Link] Soil soil;\r\n\r\n        private Nutrient nutrient;\r\n        private SoilNitrogen soilN;\r\n\r\n        [Separator(\"Fertiliser will be applied on the date(s) below\")]\r\n        [Description(\"Apply fertiliser on the same day(s) each year? If no, then must include the year of appliaction below\")]\r\n        public bool EachYear { get; set; }\r\n\r\n        [Description(\"Dates for one or more fertiliser applications (dd-mmm or dd-mmm-yyyy) as a list with a comma between dates\")]\r\n        public string[] Dates { get; set; }\r\n\r\n        [Separator(\"Test for the mineral N in the soil and don't apply the fertiliser if greater than X kgN/ha is stored in the soil above a depth of Y mm\")]\r\n        [Description(\"Use a critical soil mineral N to prevent application above a threshold?\")]\r\n        public bool UseCritNThreshold { get; set; }\r\n\r\n        [Description(\"Don't add fertiliser if N in the soil to the depth below exceeds (kg/ha)\")]\r\n        public double CritNThreshold { get; set; }\r\n\r\n        [Description(\"Depth to which the amount of N in the soil should be calculated (mm)\")]\r\n        public double CritNDepth { get; set; }\r\n\r\n        [Separator(\"Fertiliser application details\")]\r\n        [Description(\"Depth at which to apply the fertiliser (mm)\")]\r\n        public double Depth { get; set; }\r\n\r\n        [Description(\"Amount of fertiliser to apply (kg N /ha) per application\")]\r\n        public double Amount { get; set; }\r\n\r\n        [Description(\"Fertiliser type - select from the list\")]\r\n        public Fertiliser.Types FertiliserType { get; set; }\r\n\r\n\r\n        [EventSubscribe(\"StartOfSimulation\")]\r\n        private void FindSoilNOrNutrient(object sender, EventArgs e)\r\n        {\r\n            nutrient = Apsim.Find(this, typeof(Nutrient)) as Nutrient;\r\n            soilN = Apsim.Find(this, typeof(SoilNitrogen)) as SoilNitrogen;\r\n\r\n            if (nutrient == null && soilN == null)\r\n                throw new Exception(string.Format(\"Error in script {0}: Unable to find nutrient or soilN.\", Name));\r\n        }\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            if (OnApplicationDate())\r\n            {\r\n                if (NContentBelowThreshold())\r\n                    fertiliser.Apply(Amount, FertiliserType, Depth);\r\n                else\r\n                    summary.WriteMessage(this, \"Skipping fertiliser application due to soil mineral N content being above critical threshold.\");\r\n            }\r\n        }\r\n\r\n        /// <summary>Checks if today's date is one of the specified fertiliser application dates.</summary>\r\n        private bool OnApplicationDate()\r\n        {\r\n            if (EachYear)\r\n                return Dates.Any(d => DateUtilities.DatesEqual(d, clock.Today));\r\n            \r\n            DateTime[] dates = Dates.Select(d => DateTime.ParseExact(d, \"d-MMM-yyyy\", null)).ToArray();\r\n            return dates.Any(d => SameDate(d, clock.Today));\r\n        }\r\n\r\n        /// <summary>Checks if N content in soil is below critical threshold.</summary>\r\n        private bool NContentBelowThreshold()\r\n        {\r\n            if (!UseCritNThreshold)\r\n                return true;\r\n            \r\n            double[] weights = GetLayerWeights();\r\n            double cumSoilN = 0;\r\n\r\n            for (int i = 0; i < soil.Thickness.Length; i++)\r\n            {\r\n                if (nutrient != null)\r\n                    cumSoilN += weights[i] * nutrient.MineralN[i];\r\n                else if (soilN != null)\r\n                    cumSoilN += weights[i] * soilN.mineral_n[i];\r\n            }\r\n\r\n            return cumSoilN <= CritNThreshold;\r\n        }\r\n\r\n        private double[] GetLayerWeights()\r\n        {\r\n            double[] weights = new double[soil.Thickness.Length];\r\n            double cumDepth = 0;\r\n\r\n            for (int i = 0; i < soil.Thickness.Length; i++)\r\n            {\r\n                cumDepth += soil.Thickness[i];\r\n                if (cumDepth < CritNDepth)\r\n                    weights[i] = 1;\r\n                else if (cumDepth - soil.Thickness[i] <= CritNDepth)\r\n                    weights[i] = (CritNDepth - (cumDepth - soil.Thickness[i])) / soil.Thickness[i];\r\n                else\r\n                    weights[i] = 0;\r\n            }\r\n\r\n            return weights;\r\n        }\r\n\r\n        private bool SameDate(DateTime d1, DateTime d2)\r\n        {\r\n            return d1.Year == d2.Year && d1.DayOfYear == d2.DayOfYear;\r\n        }\r\n    }\r\n}\r\n",
                  "Parameters": [
                    {
                      "Key": "EachYear",
                      "Value": "True"
                    },
                    {
                      "Key": "Dates",
                      "Value": "5-jan,5-feb,5-mar,5-apr,5-aug,5-sep,5-oct,5-nov,5-dec"
                    },
                    {
                      "Key": "UseCritNThreshold",
                      "Value": "False"
                    },
                    {
                      "Key": "CritNThreshold",
                      "Value": "50"
                    },
                    {
                      "Key": "CritNDepth",
                      "Value": "75"
                    },
                    {
                      "Key": "Depth",
                      "Value": "50"
                    },
                    {
                      "Key": "Amount",
                      "Value": "15"
                    },
                    {
                      "Key": "FertiliserType",
                      "Value": "UreaN"
                    }
                  ],
                  "Name": "FertiliseFixedDates",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "Code": "using APSIM.Shared.Utilities;\r\nusing System.Xml.Serialization;\r\nusing Models.Soils;\r\nusing Models.PMF;\r\nusing Models.Core;\r\nusing System;\r\nusing System.Linq;\r\n\r\n\r\n        \r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    [System.Xml.Serialization.XmlInclude(typeof(Model))]\r\n    public class Script : Model\r\n    {\r\n        //Communication to other modules\r\n        [Link] ISummary summary = null;\r\n        [Link] Irrigation Irrigation;\r\n        [Link] Clock Clock;\r\n        [Link] Soil Soil;\r\n        [Link(IsOptional = true)] IPlant existingCrop;\r\n       \r\n        //User inputs from properties tab\r\n        [Description(\"Turn irrigation on?\")]\r\n        public bool allowIrrigation { get; set; }\r\n        [Description(\"Start of irrigation season (dd-MMM)\")]\r\n        public string seasonStart { get; set; }\r\n        [Description(\"End of irrigation season (dd-MMM)\")]\r\n        public string seasonEnd { get; set; }\r\n        [Description(\"Season allocation (mm)\")]\r\n        public double seasonsAllocation { get; set; }\r\n        [Description(\"Deficit to trigger irrigation (% PAWC)\")]\r\n        public double triggerDeficit { get; set; }\r\n        [Description(\"Deficit to stop irrigaton (% PAWC)\")]\r\n        public double targetDeficit { get; set; }\r\n        [Description(\"Minimum days for irrigation to return\")]\r\n        public double returndays { get; set; }\r\n        [Description(\"Maximum irrigation application (mm/day)\")]\r\n        public double maximumAmount { get; set; }\r\n        [Description(\"Depth to calculate PAWC (mm)\")]\r\n        public double depthPAWC { get; set; }\r\n\r\n        //Class members\r\n        [XmlIgnore] public double TopSWdeficit { get; set; }\r\n        [XmlIgnore] public double TopSWC { get; set; }\r\n        [XmlIgnore] public double DaysSinceIrrigation { get; set; }\r\n        [XmlIgnore] public double AmountToApply { get; set; }\r\n        [XmlIgnore] public double SeasonAppliedAmount { get; set; }\r\n        \r\n        private bool IrrigationIsAllowed { get; set; }\r\n        private bool SeasonIsOpen { get; set; }\r\n        private bool CropIsActive { get; set; }\r\n        private bool IrrigatorIsAvailable { get; set; }\r\n        private bool SoilIsDry { get; set; }\r\n\r\n        private DateTime StartDate;\r\n        private DateTime EndDate;\r\n        private double TopDUL;\r\n        private double TopLL;\r\n        private int nLayers;\r\n    \r\n        //Calculate static soil variables\r\n        [EventSubscribe(\"StartOfSimulation\")]\r\n        private void OnStartOfSimulation(object sender, EventArgs e)\r\n        {   \r\n            //Set the season dates\r\n            StartDate = DateTime.Parse(seasonStart + \"-\" + Clock.Today.Year.ToString());\r\n            EndDate = DateTime.Parse(seasonEnd + \"-\" + Clock.Today.Year.ToString());\r\n            \r\n            //Can we irrigate at all?\r\n            IrrigationIsAllowed = false; \r\n            if (allowIrrigation)\r\n                IrrigationIsAllowed = true; \r\n\r\n            //Calculate soil water variables\r\n            double depthFromSurface = 0.0;\r\n            double fracLayer = 0.0;\r\n            nLayers = Soil.Thickness.Length;\r\n            for (int layer = 0; layer < nLayers; layer++)\r\n            {\r\n                fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.Thickness[layer]);\r\n                TopLL += Soil.LL15mm[layer] * fracLayer;\r\n                TopDUL += Soil.DULmm[layer] * fracLayer;\r\n                depthFromSurface += Soil.Thickness[layer];\r\n                if (depthFromSurface >= depthPAWC)\r\n                    layer = nLayers;\r\n            }\r\n        }\r\n             \r\n        //Determine daily requirement for irrigation\r\n        [EventSubscribe(\"StartOfDay\")]\r\n        private void OnStartOfDay(object sender, EventArgs e)\r\n        {\r\n            //Can we irrigate today?          \r\n            SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);\r\n            if (!SeasonIsOpen)\r\n                SeasonAppliedAmount = 0;\r\n\r\n            //Is there a crop in the ground that needs irrigation?\r\n            CropIsActive = false;\r\n            if ((existingCrop != null) && (existingCrop.IsAlive))\r\n                CropIsActive = true;\r\n            //if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))\r\n          \r\n            //Is the irrigator available?\r\n            IrrigatorIsAvailable = false;\r\n            DaysSinceIrrigation += 1;\r\n            if (DaysSinceIrrigation >= returndays)\r\n                IrrigatorIsAvailable = true;\r\n          \r\n            //Is the soil dry enough to require irrigation?\r\n            SoilIsDry = false;\r\n            double depthFromSurface = 0.0;\r\n            double fracLayer = 0.0;\r\n            TopSWC = 0.0;\r\n            for (int layer = 0; layer < nLayers; layer++)\r\n            //for (int layer = 0; depthFromSurface < depthPAWC + Soil.Thickness[layer]; layer++)\r\n            {\r\n                fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.Thickness[layer]);\r\n                TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;\r\n                depthFromSurface += Soil.Thickness[layer];\r\n                if (depthFromSurface >= depthPAWC)\r\n                    layer = nLayers;\r\n            }\r\n            \r\n            TopSWdeficit = TopSWC - TopDUL;\r\n            if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)\r\n                SoilIsDry = true;\r\n                \r\n            //Are all the conditions ratifying irrigation\r\n            if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)\r\n            {\r\n                //Lets bloody well irrigate then!!!!\r\n                AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;\r\n                AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));\r\n                Irrigation.Apply(AmountToApply);\r\n                DaysSinceIrrigation = 0;\r\n                SeasonAppliedAmount += AmountToApply;\r\n            }\r\n        }\r\n        \r\n        ///Checks whether theDate is between iniDate and endDate (non-year specific)\r\n        private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)\r\n        {\r\n            bool result = false;\r\n            if (iniDate.DayOfYear < endDate.DayOfYear)\r\n            {\r\n                // period is within one year, ex: summer in the northern hemisphere\r\n                if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))\r\n                    result = true;\r\n            }\r\n            else\r\n            {\r\n                // period goes over the end of the year, ex: summer in the southern hemisphere\r\n                if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))\r\n                    result = true;\r\n            }\r\n            \r\n            return result;\r\n        }\r\n    }\r\n}\r\n",
                  "Parameters": [
                    {
                      "Key": "allowIrrigation",
                      "Value": "True"
                    },
                    {
                      "Key": "seasonStart",
                      "Value": "1-sep"
                    },
                    {
                      "Key": "seasonEnd",
                      "Value": "30-apr"
                    },
                    {
                      "Key": "seasonsAllocation",
                      "Value": "10000"
                    },
                    {
                      "Key": "triggerDeficit",
                      "Value": "75"
                    },
                    {
                      "Key": "targetDeficit",
                      "Value": "95"
                    },
                    {
                      "Key": "returndays",
                      "Value": "3"
                    },
                    {
                      "Key": "maximumAmount",
                      "Value": "30"
                    },
                    {
                      "Key": "depthPAWC",
                      "Value": "300"
                    }
                  ],
                  "Name": "AutomaticIrrigation",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "Code": "using APSIM.Shared.Utilities;\r\nusing System.Xml.Serialization;\r\nusing Models;\r\nusing Models.PMF;\r\nusing Models.Soils;\r\nusing System.Text;\r\nusing System.Collections.Generic;\r\nusing Models.Core;\r\nusing System;\r\nusing System.Linq;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        [Link] Clock clock;\r\n        [Link] Zone zone;\r\n        [Link] Summary summary;\r\n\r\n        [Separator(\"NOTE - all dates or date strings are entered with comma-separation and no spaces\")]\r\n        [Separator(\"NOTE - this component should be at the bottom of the list of Managers\")]\r\n        [Separator(\"   \")]\r\n        [Separator(\"Reporting in particular days but the same days every year\")]\r\n\r\n        //ReportOnSpecificDaysEveryYear\r\n        [Description(\"Name of the Report model for reporting on below dates every year: \")] \r\n        [Display(Type=DisplayType.Model, ModelType = typeof(Report))]\r\n        public Report ReportEveryYear_Name { get; set; } \r\n\r\n        [Description(\"Enter one or more dates (as dd-mmm) for reporting : \")] \r\n        public string[] ReportEveryYear_Dates { get; set; } \r\n\r\n        [Separator(\"Reporting on absolute dates\")]\r\n\r\n        [Description(\"Name of the Report model for reporting on completely specified dates: \")] \r\n        [Display(Type=DisplayType.Model, ModelType = typeof(Report))]\r\n        public Report ReportSpecificDates_Name { get; set; } \r\n\r\n        [Description(\"Enter one or more dates (as dd-mmm-yyyy) for reporting : \")] \r\n        public DateTime[] ReportSpecificDates_Dates { get; set; } \r\n\r\n        [Separator(\"Delay the start of reporting\")]\r\n\r\n        [Description(\"Number of years from the start of the simulation to delay reporting : \")] \r\n        public int NumYearsToDelay { get; set; } \r\n\r\n        private double YearCount = 0; // to do the delay in reporting\r\n\r\n        [EventSubscribe(\"StartOfSimulation\")]\r\n        private void OnStartOfSimulation(object sender, EventArgs e)\r\n        {\r\n            YearCount = 0.0;\r\n        }\r\n\r\n        [EventSubscribe(\"DoManagementCalculations\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            if ((clock.Today.Year - clock.StartDate.Year) >= NumYearsToDelay)\r\n            {\r\n                // example for reporting on irregular dates but the same dates every year\r\n                if (ReportEveryYear_Dates != null)\r\n                    foreach (string ddMMM in ReportEveryYear_Dates)\r\n                        if (DateUtilities.DatesEqual(ddMMM, clock.Today))\r\n                            ReportEveryYear_Name.DoOutput();\r\n\r\n                // example for reporting on fully-specified dates that are not necessarily the same dates every year\r\n                if (ReportSpecificDates_Dates != null)\r\n                    foreach (DateTime ddMMMyy in ReportSpecificDates_Dates)\r\n                        if (DateUtilities.Equals(ddMMMyy, clock.Today))\r\n                            ReportSpecificDates_Name.DoOutput();\r\n            }\r\n\r\n        }\r\n        \r\n    }\r\n}\r\n",
                  "Parameters": [
                    {
                      "Key": "ReportEveryYear_Name",
                      "Value": "[ReportAnnual]"
                    },
                    {
                      "Key": "ReportEveryYear_Dates",
                      "Value": "30-jun"
                    },
                    {
                      "Key": "ReportSpecificDates_Name",
                      "Value": ""
                    },
                    {
                      "Key": "ReportSpecificDates_Dates",
                      "Value": ""
                    },
                    {
                      "Key": "NumYearsToDelay",
                      "Value": "2"
                    }
                  ],
                  "Name": "ReportHelper",
                  "IncludeInDocumentation": false,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.MicroClimate, Models",
                  "a_interception": 0.0,
                  "b_interception": 1.0,
                  "c_interception": 0.0,
                  "d_interception": 0.0,
                  "soil_albedo": 0.23,
                  "SoilHeatFluxFraction": 0.4,
                  "MinimumHeightDiffForNewLayer": 0.0,
                  "NightInterceptionFraction": 0.5,
                  "ReferenceHeight": 2.0,
                  "Name": "MicroClimate",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Irrigation, Models",
                  "Name": "Irrigation",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Fertiliser, Models",
                  "Name": "Fertiliser",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Surface.SurfaceOrganicMatter, Models",
                  "InitialResidueName": "Sward",
                  "InitialResidueType": "grass",
                  "InitialResidueMass": 1000.0,
                  "InitialStandingFraction": 0.0,
                  "InitialCPR": 0.0,
                  "InitialCNR": 15.0,
                  "ResourceName": "SurfaceOrganicMatter",
                  "Name": "SurfaceOrganicMatter",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Soil, Models",
                  "RecordNumber": 0,
                  "ASCOrder": null,
                  "ASCSubOrder": null,
                  "SoilType": "NZ_Sedimentary",
                  "LocalName": "Lismore",
                  "Site": "Winchmore",
                  "NearestTown": "Ashburton",
                  "Region": "Canterbury",
                  "State": null,
                  "Country": "New Zealand",
                  "NaturalVegetation": null,
                  "ApsoilNumber": null,
                  "Latitude": -48.48,
                  "Longitude": 0.0,
                  "LocationAccuracy": null,
                  "DataSource": null,
                  "Comments": null,
                  "Name": "Soil",
                  "Children": [
                    {
                      "$type": "Models.Soils.Chemical, Models",
                      "Depth": [
                        "0-15",
                        "15-30",
                        "30-50",
                        "50-65",
                        "65-90",
                        "90-120",
                        "120-150"
                      ],
                      "Thickness": [
                        150.0,
                        150.0,
                        200.0,
                        150.0,
                        250.0,
                        300.0,
                        300.0
                      ],
                      "NO3N": [
                        5.0,
                        2.5,
                        1.0,
                        0.75,
                        0.5,
                        0.5,
                        0.5
                      ],
                      "NH4N": [
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1
                      ],
                      "PH": [
                        6.0,
                        6.0,
                        6.0,
                        6.0,
                        6.0,
                        6.0,
                        6.0
                      ],
                      "CL": null,
                      "EC": null,
                      "ESP": null,
                      "Name": "Chemical",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.Physical, Models",
                      "Depth": [
                        "0-15",
                        "15-30",
                        "30-50",
                        "50-65",
                        "65-90",
                        "90-120",
                        "120-150"
                      ],
                      "Thickness": [
                        150.0,
                        150.0,
                        200.0,
                        150.0,
                        250.0,
                        300.0,
                        300.0
                      ],
                      "ParticleSizeClay": [
                        20.0,
                        15.0,
                        12.0,
                        8.0,
                        6.0,
                        5.0,
                        5.0
                      ],
                      "ParticleSizeSand": null,
                      "ParticleSizeSilt": null,
                      "BD": [
                        1.3,
                        1.35,
                        1.0,
                        0.53,
                        0.31,
                        0.3,
                        0.3
                      ],
                      "AirDry": [
                        0.05,
                        0.12,
                        0.055,
                        0.015,
                        0.01,
                        0.01,
                        0.01
                      ],
                      "LL15": [
                        0.15,
                        0.14,
                        0.055,
                        0.015,
                        0.01,
                        0.01,
                        0.01
                      ],
                      "DUL": [
                        0.36,
                        0.34,
                        0.19,
                        0.065,
                        0.04,
                        0.03,
                        0.03
                      ],
                      "SAT": [
                        0.45,
                        0.43,
                        0.25,
                        0.15,
                        0.11,
                        0.11,
                        0.11
                      ],
                      "KS": [
                        5000.0,
                        2500.0,
                        3000.0,
                        10000.0,
                        17500.0,
                        20000.0,
                        20000.0
                      ],
                      "BDMetadata": null,
                      "AirDryMetadata": null,
                      "LL15Metadata": null,
                      "DULMetadata": null,
                      "SATMetadata": null,
                      "KSMetadata": null,
                      "Name": "Physical",
                      "Children": [
                        {
                          "$type": "Models.Soils.SoilCrop, Models",
                          "LL": [
                            0.15,
                            0.14,
                            0.06,
                            0.02,
                            0.01,
                            0.01,
                            0.01
                          ],
                          "KL": [
                            0.1,
                            0.1,
                            0.08,
                            0.04,
                            0.01,
                            0.0,
                            0.0
                          ],
                          "XF": [
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            0.0,
                            0.0
                          ],
                          "LLMetadata": null,
                          "KLMetadata": null,
                          "XFMetadata": null,
                          "Name": "AGPRyegrassSoil",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Soils.SoilCrop, Models",
                          "LL": [
                            0.15,
                            0.14,
                            0.06,
                            0.02,
                            0.01,
                            0.01,
                            0.01
                          ],
                          "KL": [
                            0.1,
                            0.1,
                            0.08,
                            0.04,
                            0.01,
                            0.0,
                            0.0
                          ],
                          "XF": [
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            0.0,
                            0.0
                          ],
                          "LLMetadata": null,
                          "KLMetadata": null,
                          "XFMetadata": null,
                          "Name": "AGPWhiteCloverSoil",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.WaterModel.WaterBalance, Models",
                      "SummerDate": "1-Nov",
                      "SummerU": 6.0,
                      "SummerCona": 3.5,
                      "WinterDate": "1-apr",
                      "WinterU": 2.0,
                      "WinterCona": 2.0,
                      "DiffusConst": 88.0,
                      "DiffusSlope": 35.0,
                      "Salb": 0.13,
                      "CN2Bare": 73.0,
                      "CNRed": 20.0,
                      "CNCov": 0.8,
                      "Slope": 0.0,
                      "DischargeWidth": 0.0,
                      "CatchmentArea": 0.0,
                      "Thickness": [
                        150.0,
                        150.0,
                        200.0,
                        150.0,
                        250.0,
                        300.0,
                        300.0
                      ],
                      "SWCON": [
                        0.5,
                        0.52,
                        0.55,
                        0.6,
                        0.65,
                        0.65,
                        0.65
                      ],
                      "KLAT": [
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0
                      ],
                      "ResourceName": "WaterBalance",
                      "Name": "SoilWater",
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.Organic, Models",
                      "Depth": [
                        "0-15",
                        "15-30",
                        "30-50",
                        "50-65",
                        "65-90",
                        "90-120",
                        "120-150"
                      ],
                      "FOMCNRatio": 40.0,
                      "Thickness": [
                        150.0,
                        150.0,
                        200.0,
                        150.0,
                        250.0,
                        300.0,
                        300.0
                      ],
                      "Carbon": [
                        3.0,
                        1.0,
                        0.6,
                        0.4,
                        0.25,
                        0.15,
                        0.1
                      ],
                      "SoilCNRatio": [
                        12.0,
                        12.0,
                        12.0,
                        12.0,
                        12.0,
                        12.0,
                        12.0
                      ],
                      "FBiom": [
                        0.04,
                        0.02,
                        0.02,
                        0.01,
                        0.01,
                        0.0,
                        0.0
                      ],
                      "FInert": [
                        0.5,
                        0.7,
                        0.83,
                        0.9,
                        0.95,
                        0.99,
                        0.99
                      ],
                      "FOM": [
                        331.337020409173,
                        245.46050190550559,
                        164.53709493722965,
                        121.89207790753734,
                        73.931282427002344,
                        40.574348067292682,
                        22.267674346259405
                      ],
                      "Name": "Organic",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.InitialWater, Models",
                      "PercentMethod": 1,
                      "FractionFull": 0.95,
                      "DepthWetSoil": "NaN",
                      "RelativeTo": null,
                      "Name": "Initial water",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.Sample, Models",
                      "Depth": [
                        "0-15",
                        "15-30",
                        "30-50",
                        "50-65",
                        "65-90",
                        "90-120",
                        "120-150"
                      ],
                      "Thickness": [
                        150.0,
                        150.0,
                        200.0,
                        150.0,
                        250.0,
                        300.0,
                        300.0
                      ],
                      "NO3N": null,
                      "NH4N": null,
                      "SW": null,
                      "OC": null,
                      "EC": null,
                      "CL": null,
                      "ESP": null,
                      "PH": null,
                      "SWUnits": 0,
                      "OCUnits": 0,
                      "PHUnits": 0,
                      "Name": "Initial nitrogen",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.CERESSoilTemperature, Models",
                      "Name": "CERESSoilTemperature",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.Nutrients.Nutrient, Models",
                      "ResourceName": "Nutrient",
                      "Name": "Nutrient",
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.AgPasture.PastureSpecies, Models",
                  "InitialShootDM": 1500.0,
                  "InitialRootDM": 450.0,
                  "InitialRootDepth": 750.0,
                  "ResourceName": "AGPRyegrass",
                  "Name": "AGPRyegrass",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.AgPasture.PastureSpecies, Models",
                  "InitialShootDM": 500.0,
                  "InitialRootDM": 150.0,
                  "InitialRootDepth": 350.0,
                  "ResourceName": "AGPWhiteClover",
                  "Name": "AGPWhiteClover",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Report, Models",
                  "VariableNames": [
                    "[Clock].Today as Date",
                    "[Clock].Today.Year as Year",
                    "",
                    "Sum of [FertiliseFixedDates].Script.Amount from 1-Jul to [Clock].Today as FertiliserNApplied_kgN_ha   // fertiliser applied",
                    "Sum of [Fertiliser].NitrogenApplied from 1-Jul to [Clock].Today as FertiliserNApplied_kgN_ha   // fertiliser applied",
                    "Sum of ([AGPRyegrass].HarvestedWt + [AGPWhiteClover].HarvestedWt) / 1000.0 from 1-Jul to [Clock].Today as HarvestedWt_t_ha   //the amount harvested (kg DM /ha)"
                  ],
                  "EventNames": [
                    "//[Clock].EndOfMonth"
                  ],
                  "GroupByVariableName": null,
                  "Name": "ReportAnnual",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "Models.Axis, Models",
              "Type": 3,
              "Title": null,
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            },
            {
              "$type": "Models.Axis, Models",
              "Type": 0,
              "Title": null,
              "Inverted": false,
              "Minimum": 0.0,
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Harvested Pasture by N and Water",
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 4,
              "MarkerSize": 0,
              "Line": 4,
              "LineThickness": 0,
              "TableName": "ReportAnnual",
              "XFieldName": "FertiliserNApplied_kgN_ha",
              "YFieldName": "HarvestedWt_t_ha",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": "[SimulationName] LIKE 'PastureByWaterAndNitrogenNitrogen%WaterFalse'",
              "Name": "Dryland",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 0,
              "MarkerSize": 0,
              "Line": 4,
              "LineThickness": 0,
              "TableName": "ReportAnnual",
              "XFieldName": "FertiliserNApplied_kgN_ha",
              "YFieldName": "HarvestedWt_t_ha",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": "[SimulationName] LIKE 'PastureByWaterAndNitrogenNitrogen%WaterTrue'",
              "Name": "Irrigated",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "IncludeInDocumentation": true,
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Factorial.Experiment, Models",
      "DisabledSimNames": null,
      "Name": "CO2xBaseTemperature",
      "Children": [
        {
          "$type": "Models.Factorial.Factors, Models",
          "Name": "Factors",
          "Children": [
            {
              "$type": "Models.Factorial.Permutation, Models",
              "Name": "Permutation",
              "Children": [
                {
                  "$type": "Models.Factorial.Factor, Models",
                  "Specification": "[CO2Parameters].Script.CO2=350,700",
                  "Name": "CO2Level",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Factorial.Factor, Models",
                  "Specification": "[TemperatureParameters].Script.GrowthTminimum=0,2,5,10,15",
                  "Name": "Tb",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Simulation, Models",
          "Name": "CO2xTb",
          "Children": [
            {
              "$type": "Models.Clock, Models",
              "Start": "1980-07-01T00:00:00",
              "End": "1985-06-30T00:00:00",
              "Name": "Clock",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Weather, Models",
              "FileName": "%root%/Examples/WeatherFiles/lincoln.met",
              "ExcelWorkSheetName": null,
              "Name": "Weather",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
              "Name": "SoilArbitrator",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Summary, Models",
              "CaptureErrors": true,
              "CaptureWarnings": true,
              "CaptureSummaryText": true,
              "Name": "Summary",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Core.Zone, Models",
              "Area": 1.0,
              "Slope": 0.0,
              "AspectAngle": 0.0,
              "Altitude": 50.0,
              "Name": "Field",
              "Children": [
                {
                  "$type": "Models.AgPasture.SimpleGrazing, Models",
                  "GrazingRotationType": 0,
                  "SimpleGrazingFrequencyString": "21",
                  "SimpleMinGrazable": 0.0,
                  "SimpleGrazingResidual": 1500.0,
                  "PreGrazeDMArray": [
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0
                  ],
                  "PostGrazeDMArray": [
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0
                  ],
                  "FlexibleExpressionForTimingOfGrazing": null,
                  "FlexibleGrazePostDM": 0.0,
                  "MaximumRotationLengthArray": null,
                  "MinimumRotationLengthArray": null,
                  "NoGrazingStartString": null,
                  "NoGrazingEndString": null,
                  "FractionDefoliatedNToSoil": 0.7,
                  "FractionExcretedNToDung": [
                    0.45
                  ],
                  "CNRatioDung": "NaN",
                  "DepthUrineIsAdded": 250.0,
                  "FractionPopulationDecline": 0.0,
                  "TramplingOn": false,
                  "MaximumPropLitterMovedToSoil": 0.1,
                  "PastureConsumedAtMaximumRateOfLitterRemoval": 1200.0,
                  "Name": "SimpleGrazing",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "Code": "// An example to show to change parameters.  \r\n// Parameters presented are used to calculate CO2 and temperature effects on photosynthesis and, therefore, can be used in sensibility analysis. \r\n\r\nusing Models.Interfaces;\r\nusing APSIM.Shared.Utilities;\r\nusing Models.Soils;\r\nusing Models.PMF;\r\nusing Models.Core;\r\nusing System.Xml.Serialization;\r\nusing System.Collections.Generic;\r\nusing System;\r\nusing System.Linq;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        // - Links to APSIM models\r\n        [Link] Zone myZone;\r\n        [Link] Clock Clock;\r\n        [Link] Weather Weather;\r\n        [Link] ISummary summary = null;\r\n\r\n        [Separator(\"Species subjected to this manager\")]\r\n        [Description(\"Species\")]\r\n        [Display(Type=DisplayType.Model, ModelType = typeof(AgPasture.PastureSpecies))]\r\n        public IModel Pasture {get; set;}\r\n\r\n        [Separator(\"Parameters for the effect of CO2 on photosynthesis and N demand under high CO2\")]\r\n        [Description(\"Atmospheric CO2\")]\r\n        public double CO2 { get; set; }\r\n        [Description(\"Reference CO2 concentration for photosynthesis(ppm)\")]\r\n        public double ReferenceCO2 { get; set; }\r\n        [Description(\"Scaling parameter for the CO2 effect on photosynthesis\")]\r\n        public double CO2EffectScaleFactor { get; set ; }\r\n        [Description(\"Scaling parameter for CO2 effects on N requirements (ppm)\")]\r\n        public double CO2EffectOffsetFactor { get; set; }\r\n        [Description(\"Exponent controlling CO2 effect on N requirements\")]\r\n        public double CO2EffectExponent { get; set; }\r\n       \r\n        \r\n\r\n\r\n        [EventSubscribe(\"StartOfSimulation\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\r\n           (Weather).CO2 = CO2;\r\n           (Pasture as AgPasture.PastureSpecies).ReferenceCO2 = ReferenceCO2;\r\n           (Pasture as AgPasture.PastureSpecies).CO2EffectScaleFactor = CO2EffectScaleFactor;\r\n           (Pasture as AgPasture.PastureSpecies).CO2EffectOffsetFactor = CO2EffectOffsetFactor;\r\n           (Pasture as AgPasture.PastureSpecies).CO2EffectExponent = CO2EffectExponent;\r\n\r\n        }\r\n        \r\n           }\r\n}\r\n",
                  "Parameters": [
                    {
                      "Key": "Pasture",
                      "Value": "[AGPRyegrass]"
                    },
                    {
                      "Key": "CO2",
                      "Value": "350"
                    },
                    {
                      "Key": "ReferenceCO2",
                      "Value": "380"
                    },
                    {
                      "Key": "CO2EffectScaleFactor",
                      "Value": "700"
                    },
                    {
                      "Key": "CO2EffectOffsetFactor",
                      "Value": "600"
                    },
                    {
                      "Key": "CO2EffectExponent",
                      "Value": "2"
                    }
                  ],
                  "Name": "CO2Parameters",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "Code": "// An example to show to change parameters.  \r\n// Parameters presented are used to calculate CO2 and temperature effects on photosynthesis and, therefore, can be used in sensibility analysis. \r\n\r\nusing Models.Interfaces;\r\nusing APSIM.Shared.Utilities;\r\nusing Models.Soils;\r\nusing Models.PMF;\r\nusing Models.Core;\r\nusing System.Xml.Serialization;\r\nusing System.Collections.Generic;\r\nusing System;\r\nusing System.Linq;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        // - Links to APSIM models\r\n        [Link] Zone myZone;\r\n        [Link] Clock Clock;\r\n        [Link] ISummary summary = null;\r\n\r\n        [Separator(\"Species subjected to this manager\")]\r\n        [Description(\"Species\")]\r\n        [Display(Type=DisplayType.Model, ModelType = typeof(AgPasture.PastureSpecies))]\r\n        public IModel Pasture {get; set;}\r\n\r\n\r\n       \r\n        [Separator(\"Temperature parameters for photosynthesis\")]\r\n        [Description(\"Minimum temperature for growth (oC)\")]\r\n        public double GrowthTminimum { get; set; }\r\n        [Description(\"Optimum temperature for growth\")]\r\n        public double GrowthToptimum { get; set; }\r\n        [Description(\"Onset temperature for heat damage on photosynthesis\")]\r\n        public double HeatOnsetTemperature { get; set; }\r\n        [Description(\"Temperature for full heat damage effect on photosynthesis\")]\r\n        public double HeatFullTemperature { get; set; }\r\n        [Description(\"Onset temperature for cold damage on photosynthesis\")]\r\n        public double ColdOnsetTemperature { get; set; }\r\n        [Description(\"Temperature for full cold damage on photosynthesis\")]\r\n        public double ColdFullTemperature { get; set; }\r\n\r\n\r\n        [EventSubscribe(\"StartOfSimulation\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\r\n           \r\n           (Pasture as AgPasture.PastureSpecies).GrowthTminimum = GrowthTminimum;\r\n           (Pasture as AgPasture.PastureSpecies).GrowthToptimum = GrowthToptimum;\r\n           (Pasture as AgPasture.PastureSpecies).HeatOnsetTemperature = HeatOnsetTemperature;\r\n           (Pasture as AgPasture.PastureSpecies).HeatFullTemperature = HeatFullTemperature;\r\n           (Pasture as AgPasture.PastureSpecies).ColdOnsetTemperature = ColdOnsetTemperature;\r\n           (Pasture as AgPasture.PastureSpecies).ColdFullTemperature = ColdFullTemperature;\r\n        }\r\n        \r\n           }\r\n}\r\n",
                  "Parameters": [
                    {
                      "Key": "Pasture",
                      "Value": "[AGPRyegrass]"
                    },
                    {
                      "Key": "GrowthTminimum",
                      "Value": "1"
                    },
                    {
                      "Key": "GrowthToptimum",
                      "Value": "20"
                    },
                    {
                      "Key": "HeatOnsetTemperature",
                      "Value": "28"
                    },
                    {
                      "Key": "HeatFullTemperature",
                      "Value": "35"
                    },
                    {
                      "Key": "ColdOnsetTemperature",
                      "Value": "1"
                    },
                    {
                      "Key": "ColdFullTemperature",
                      "Value": "-5"
                    }
                  ],
                  "Name": "TemperatureParameters",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.MicroClimate, Models",
                  "a_interception": 0.0,
                  "b_interception": 1.0,
                  "c_interception": 0.0,
                  "d_interception": 0.0,
                  "soil_albedo": 0.23,
                  "SoilHeatFluxFraction": 0.4,
                  "MinimumHeightDiffForNewLayer": 0.0,
                  "NightInterceptionFraction": 0.5,
                  "ReferenceHeight": 2.0,
                  "Name": "MicroClimate",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Irrigation, Models",
                  "Name": "Irrigation",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Fertiliser, Models",
                  "Name": "Fertiliser",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Surface.SurfaceOrganicMatter, Models",
                  "InitialResidueName": "Sward",
                  "InitialResidueType": "grass",
                  "InitialResidueMass": 1000.0,
                  "InitialStandingFraction": 0.0,
                  "InitialCPR": 0.0,
                  "InitialCNR": 15.0,
                  "ResourceName": "SurfaceOrganicMatter",
                  "Name": "SurfaceOrganicMatter",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Soil, Models",
                  "RecordNumber": 0,
                  "ASCOrder": null,
                  "ASCSubOrder": null,
                  "SoilType": "NZ_Sedimentary",
                  "LocalName": "Lismore",
                  "Site": "Winchmore",
                  "NearestTown": "Ashburton",
                  "Region": "Canterbury",
                  "State": null,
                  "Country": "New Zealand",
                  "NaturalVegetation": null,
                  "ApsoilNumber": null,
                  "Latitude": -48.48,
                  "Longitude": 0.0,
                  "LocationAccuracy": null,
                  "DataSource": null,
                  "Comments": null,
                  "Name": "Soil",
                  "Children": [
                    {
                      "$type": "Models.Soils.Chemical, Models",
                      "Depth": [
                        "0-15",
                        "15-30",
                        "30-50",
                        "50-65",
                        "65-90",
                        "90-120",
                        "120-150"
                      ],
                      "Thickness": [
                        150.0,
                        150.0,
                        200.0,
                        150.0,
                        250.0,
                        300.0,
                        300.0
                      ],
                      "NO3N": [
                        5.0,
                        2.5,
                        1.0,
                        0.75,
                        0.5,
                        0.5,
                        0.5
                      ],
                      "NH4N": [
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1
                      ],
                      "PH": [
                        6.0,
                        6.0,
                        6.0,
                        6.0,
                        6.0,
                        6.0,
                        6.0
                      ],
                      "CL": null,
                      "EC": null,
                      "ESP": null,
                      "Name": "Chemical",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.Physical, Models",
                      "Depth": [
                        "0-15",
                        "15-30",
                        "30-50",
                        "50-65",
                        "65-90",
                        "90-120",
                        "120-150"
                      ],
                      "Thickness": [
                        150.0,
                        150.0,
                        200.0,
                        150.0,
                        250.0,
                        300.0,
                        300.0
                      ],
                      "ParticleSizeClay": [
                        20.0,
                        15.0,
                        12.0,
                        8.0,
                        6.0,
                        5.0,
                        5.0
                      ],
                      "ParticleSizeSand": null,
                      "ParticleSizeSilt": null,
                      "BD": [
                        1.3,
                        1.35,
                        1.0,
                        0.53,
                        0.31,
                        0.3,
                        0.3
                      ],
                      "AirDry": [
                        0.05,
                        0.12,
                        0.055,
                        0.015,
                        0.01,
                        0.01,
                        0.01
                      ],
                      "LL15": [
                        0.15,
                        0.14,
                        0.055,
                        0.015,
                        0.01,
                        0.01,
                        0.01
                      ],
                      "DUL": [
                        0.36,
                        0.34,
                        0.19,
                        0.065,
                        0.04,
                        0.03,
                        0.03
                      ],
                      "SAT": [
                        0.45,
                        0.43,
                        0.25,
                        0.15,
                        0.11,
                        0.11,
                        0.11
                      ],
                      "KS": [
                        5000.0,
                        2500.0,
                        3000.0,
                        10000.0,
                        17500.0,
                        20000.0,
                        20000.0
                      ],
                      "BDMetadata": null,
                      "AirDryMetadata": null,
                      "LL15Metadata": null,
                      "DULMetadata": null,
                      "SATMetadata": null,
                      "KSMetadata": null,
                      "Name": "Physical",
                      "Children": [
                        {
                          "$type": "Models.Soils.SoilCrop, Models",
                          "LL": [
                            0.15,
                            0.14,
                            0.06,
                            0.02,
                            0.01,
                            0.01,
                            0.01
                          ],
                          "KL": [
                            0.1,
                            0.1,
                            0.08,
                            0.04,
                            0.01,
                            0.0,
                            0.0
                          ],
                          "XF": [
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            0.0,
                            0.0
                          ],
                          "LLMetadata": null,
                          "KLMetadata": null,
                          "XFMetadata": null,
                          "Name": "AGPRyegrassSoil",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Soils.SoilCrop, Models",
                          "LL": [
                            0.15,
                            0.14,
                            0.06,
                            0.02,
                            0.01,
                            0.01,
                            0.01
                          ],
                          "KL": [
                            0.1,
                            0.1,
                            0.08,
                            0.04,
                            0.01,
                            0.0,
                            0.0
                          ],
                          "XF": [
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            0.0,
                            0.0
                          ],
                          "LLMetadata": null,
                          "KLMetadata": null,
                          "XFMetadata": null,
                          "Name": "AGPWhiteCloverSoil",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.WaterModel.WaterBalance, Models",
                      "SummerDate": "1-Nov",
                      "SummerU": 6.0,
                      "SummerCona": 3.5,
                      "WinterDate": "1-apr",
                      "WinterU": 2.0,
                      "WinterCona": 2.0,
                      "DiffusConst": 88.0,
                      "DiffusSlope": 35.0,
                      "Salb": 0.13,
                      "CN2Bare": 73.0,
                      "CNRed": 20.0,
                      "CNCov": 0.8,
                      "Slope": 0.0,
                      "DischargeWidth": 0.0,
                      "CatchmentArea": 0.0,
                      "Thickness": [
                        150.0,
                        150.0,
                        200.0,
                        150.0,
                        250.0,
                        300.0,
                        300.0
                      ],
                      "SWCON": [
                        0.5,
                        0.52,
                        0.55,
                        0.6,
                        0.65,
                        0.65,
                        0.65
                      ],
                      "KLAT": [
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0
                      ],
                      "ResourceName": "WaterBalance",
                      "Name": "SoilWater",
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.Organic, Models",
                      "Depth": [
                        "0-15",
                        "15-30",
                        "30-50",
                        "50-65",
                        "65-90",
                        "90-120",
                        "120-150"
                      ],
                      "FOMCNRatio": 40.0,
                      "Thickness": [
                        150.0,
                        150.0,
                        200.0,
                        150.0,
                        250.0,
                        300.0,
                        300.0
                      ],
                      "Carbon": [
                        3.0,
                        1.0,
                        0.6,
                        0.4,
                        0.25,
                        0.15,
                        0.1
                      ],
                      "SoilCNRatio": [
                        12.0,
                        12.0,
                        12.0,
                        12.0,
                        12.0,
                        12.0,
                        12.0
                      ],
                      "FBiom": [
                        0.04,
                        0.02,
                        0.02,
                        0.01,
                        0.01,
                        0.0,
                        0.0
                      ],
                      "FInert": [
                        0.5,
                        0.7,
                        0.83,
                        0.9,
                        0.95,
                        0.99,
                        0.99
                      ],
                      "FOM": [
                        331.337020409173,
                        245.46050190550559,
                        164.53709493722965,
                        121.89207790753734,
                        73.931282427002344,
                        40.574348067292682,
                        22.267674346259405
                      ],
                      "Name": "Organic",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.InitialWater, Models",
                      "PercentMethod": 1,
                      "FractionFull": 0.95,
                      "DepthWetSoil": "NaN",
                      "RelativeTo": null,
                      "Name": "Initial water",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.Sample, Models",
                      "Depth": [
                        "0-15",
                        "15-30",
                        "30-50",
                        "50-65",
                        "65-90",
                        "90-120",
                        "120-150"
                      ],
                      "Thickness": [
                        150.0,
                        150.0,
                        200.0,
                        150.0,
                        250.0,
                        300.0,
                        300.0
                      ],
                      "NO3N": null,
                      "NH4N": null,
                      "SW": null,
                      "OC": null,
                      "EC": null,
                      "CL": null,
                      "ESP": null,
                      "PH": null,
                      "SWUnits": 0,
                      "OCUnits": 0,
                      "PHUnits": 0,
                      "Name": "Initial nitrogen",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.CERESSoilTemperature, Models",
                      "Name": "CERESSoilTemperature",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.Nutrients.Nutrient, Models",
                      "ResourceName": "Nutrient",
                      "Name": "Nutrient",
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.AgPasture.PastureSpecies, Models",
                  "InitialShootDM": 1500.0,
                  "InitialRootDM": 450.0,
                  "InitialRootDepth": 750.0,
                  "ResourceName": "AGPRyegrass",
                  "Name": "AGPRyegrass",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.AgPasture.PastureSpecies, Models",
                  "InitialShootDM": 500.0,
                  "InitialRootDM": 150.0,
                  "InitialRootDepth": 350.0,
                  "ResourceName": "AGPWhiteClover",
                  "Name": "AGPWhiteClover",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Report, Models",
                  "VariableNames": [
                    "[Clock].Today as Date",
                    "// These examples are set up for Ryegrass and WhiteClover so add in any other species as needed for your simulation",
                    "// The format of AggregationType (variable) from [Report].DayAfterLastOutput to [Clock].Today is used so that when the reporting frequency is changed the outputs are still sensible",
                    "// If the name of the Report component (\"Report\") here is changed in the simulation tree then all the references to that name in the outputs below also need to be changed",
                    "",
                    "// If all you want is an annual pattern of harvested pasture based on the production year (July to June)  ....",
                    "Sum of ([AGPRyegrass].HarvestedWt + [AGPWhiteClover].HarvestedWt) from 1-Jul to [Clock].Today as HarvestedWt   //the amount harvested (kg DM /ha)",
                    "Sum of [AGPRyegrass].HarvestedWt from 1-Jul to [Clock].Today as RGHarvestedWt",
                    "Sum of [AGPWhiteClover].HarvestedWt from 1-Jul to [Clock].Today as WCHarvestedWt",
                    "[Weather].CO2 as CO2"
                  ],
                  "EventNames": [
                    "[Clock].EndOfDay"
                  ],
                  "GroupByVariableName": null,
                  "Name": "Report",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "Models.Axis, Models",
              "Type": 3,
              "Title": null,
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": true,
              "CrossesAtZero": false
            },
            {
              "$type": "Models.Axis, Models",
              "Type": 0,
              "Title": null,
              "Inverted": false,
              "Minimum": 0.0,
              "Maximum": 15000.0,
              "Interval": 2500.0,
              "DateTimeAxis": false,
              "CrossesAtZero": false
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "AnnualDM",
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": 0,
              "FactorToVaryColours": "SimulationName",
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "HarvestedWt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": "",
              "Name": "AnnualDM",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "IncludeInDocumentation": true,
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Factorial.Experiment, Models",
      "DisabledSimNames": null,
      "Name": "CO2xHeatOnset",
      "Children": [
        {
          "$type": "Models.Factorial.Factors, Models",
          "Name": "Factors",
          "Children": [
            {
              "$type": "Models.Factorial.Permutation, Models",
              "Name": "Permutation",
              "Children": [
                {
                  "$type": "Models.Factorial.Factor, Models",
                  "Specification": "[AGPRyegrass].HeatOnsetTemperature=15 to 35 step 10",
                  "Name": "HeatOnset",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Factorial.Factor, Models",
                  "Specification": "[Weather].CO2=350,700",
                  "Name": "CO2",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Simulation, Models",
          "Name": "CO2xHeat",
          "Children": [
            {
              "$type": "Models.Clock, Models",
              "Start": "1980-07-01T00:00:00",
              "End": "1985-06-30T00:00:00",
              "Name": "Clock",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Weather, Models",
              "FileName": "%root%/Examples/WeatherFiles/lincoln.met",
              "ExcelWorkSheetName": null,
              "Name": "Weather",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
              "Name": "SoilArbitrator",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Summary, Models",
              "CaptureErrors": true,
              "CaptureWarnings": true,
              "CaptureSummaryText": true,
              "Name": "Summary",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Core.Zone, Models",
              "Area": 1.0,
              "Slope": 0.0,
              "AspectAngle": 0.0,
              "Altitude": 50.0,
              "Name": "Field",
              "Children": [
                {
                  "$type": "Models.AgPasture.SimpleGrazing, Models",
                  "GrazingRotationType": 0,
                  "SimpleGrazingFrequencyString": "21",
                  "SimpleMinGrazable": 0.0,
                  "SimpleGrazingResidual": 1500.0,
                  "PreGrazeDMArray": [
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0,
                    1000.0
                  ],
                  "PostGrazeDMArray": [
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0,
                    2000.0
                  ],
                  "FlexibleExpressionForTimingOfGrazing": null,
                  "FlexibleGrazePostDM": 0.0,
                  "MaximumRotationLengthArray": null,
                  "MinimumRotationLengthArray": null,
                  "NoGrazingStartString": null,
                  "NoGrazingEndString": null,
                  "FractionDefoliatedNToSoil": 0.7,
                  "FractionExcretedNToDung": [
                    0.45
                  ],
                  "CNRatioDung": "NaN",
                  "DepthUrineIsAdded": 250.0,
                  "FractionPopulationDecline": 0.0,
                  "TramplingOn": false,
                  "MaximumPropLitterMovedToSoil": 0.1,
                  "PastureConsumedAtMaximumRateOfLitterRemoval": 1200.0,
                  "Name": "SimpleGrazing",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "Code": "using System.Linq;\r\nusing APSIM.Shared.Utilities;\r\nusing Models.PMF;\r\nusing Models.Soils.Nutrients;\r\nusing Models.Soils;\r\nusing Models.Core;\r\nusing System;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        [Link] Clock clock;\r\n        [Link] Fertiliser fertiliser;\r\n        [Link] ISummary summary;\r\n        [Link] Soil soil;\r\n\r\n        private Nutrient nutrient;\r\n        private SoilNitrogen soilN;\r\n\r\n        [Separator(\"Fertiliser will be applied on the date(s) below\")]\r\n        [Description(\"Apply fertiliser on the same day(s) each year? If no, then must include the year of appliaction below\")]\r\n        public bool EachYear { get; set; }\r\n\r\n        [Description(\"Dates for one or more fertiliser applications (dd-mmm or dd-mmm-yyyy) as a list with a comma between dates\")]\r\n        public string[] Dates { get; set; }\r\n\r\n        [Separator(\"Test for the mineral N in the soil and don't apply the fertiliser if greater than X kgN/ha is stored in the soil above a depth of Y mm\")]\r\n        [Description(\"Use a critical soil mineral N to prevent application above a threshold?\")]\r\n        public bool UseCritNThreshold { get; set; }\r\n\r\n        [Description(\"Don't add fertiliser if N in the soil to the depth below exceeds (kg/ha)\")]\r\n        public double CritNThreshold { get; set; }\r\n\r\n        [Description(\"Depth to which the amount of N in the soil should be calculated (mm)\")]\r\n        public double CritNDepth { get; set; }\r\n\r\n        [Separator(\"Fertiliser application details\")]\r\n        [Description(\"Depth at which to apply the fertiliser (mm)\")]\r\n        public double Depth { get; set; }\r\n\r\n        [Description(\"Amount of fertiliser to apply (kg N /ha) per application\")]\r\n        public double Amount { get; set; }\r\n\r\n        [Description(\"Fertiliser type - select from the list\")]\r\n        public Fertiliser.Types FertiliserType { get; set; }\r\n\r\n\r\n        [EventSubscribe(\"StartOfSimulation\")]\r\n        private void FindSoilNOrNutrient(object sender, EventArgs e)\r\n        {\r\n            nutrient = Apsim.Find(this, typeof(Nutrient)) as Nutrient;\r\n            soilN = Apsim.Find(this, typeof(SoilNitrogen)) as SoilNitrogen;\r\n\r\n            if (nutrient == null && soilN == null)\r\n                throw new Exception(string.Format(\"Error in script {0}: Unable to find nutrient or soilN.\", Name));\r\n        }\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            if (OnApplicationDate())\r\n            {\r\n                if (NContentBelowThreshold())\r\n                    fertiliser.Apply(Amount, FertiliserType, Depth);\r\n                else\r\n                    summary.WriteMessage(this, \"Skipping fertiliser application due to soil mineral N content being above critical threshold.\");\r\n            }\r\n        }\r\n\r\n        /// <summary>Checks if today's date is one of the specified fertiliser application dates.</summary>\r\n        private bool OnApplicationDate()\r\n        {\r\n            if (EachYear)\r\n                return Dates.Any(d => DateUtilities.DatesEqual(d, clock.Today));\r\n            \r\n            DateTime[] dates = Dates.Select(d => DateTime.ParseExact(d, \"d-MMM-yyyy\", null)).ToArray();\r\n            return dates.Any(d => SameDate(d, clock.Today));\r\n        }\r\n\r\n        /// <summary>Checks if N content in soil is below critical threshold.</summary>\r\n        private bool NContentBelowThreshold()\r\n        {\r\n            if (!UseCritNThreshold)\r\n                return true;\r\n            \r\n            double[] weights = GetLayerWeights();\r\n            double cumSoilN = 0;\r\n\r\n            for (int i = 0; i < soil.Thickness.Length; i++)\r\n            {\r\n                if (nutrient != null)\r\n                    cumSoilN += weights[i] * nutrient.MineralN[i];\r\n                else if (soilN != null)\r\n                    cumSoilN += weights[i] * soilN.mineral_n[i];\r\n            }\r\n\r\n            return cumSoilN <= CritNThreshold;\r\n        }\r\n\r\n        private double[] GetLayerWeights()\r\n        {\r\n            double[] weights = new double[soil.Thickness.Length];\r\n            double cumDepth = 0;\r\n\r\n            for (int i = 0; i < soil.Thickness.Length; i++)\r\n            {\r\n                cumDepth += soil.Thickness[i];\r\n                if (cumDepth < CritNDepth)\r\n                    weights[i] = 1;\r\n                else if (cumDepth - soil.Thickness[i] <= CritNDepth)\r\n                    weights[i] = (CritNDepth - (cumDepth - soil.Thickness[i])) / soil.Thickness[i];\r\n                else\r\n                    weights[i] = 0;\r\n            }\r\n\r\n            return weights;\r\n        }\r\n\r\n        private bool SameDate(DateTime d1, DateTime d2)\r\n        {\r\n            return d1.Year == d2.Year && d1.DayOfYear == d2.DayOfYear;\r\n        }\r\n    }\r\n}\r\n",
                  "Parameters": [
                    {
                      "Key": "EachYear",
                      "Value": "True"
                    },
                    {
                      "Key": "Dates",
                      "Value": "1-aug,1-sep,1-oct,1-nov,1-dec,1-jan,1-feb,1-mar,1-apr,1-may"
                    },
                    {
                      "Key": "UseCritNThreshold",
                      "Value": "False"
                    },
                    {
                      "Key": "CritNThreshold",
                      "Value": "50"
                    },
                    {
                      "Key": "CritNDepth",
                      "Value": "75"
                    },
                    {
                      "Key": "Depth",
                      "Value": "50"
                    },
                    {
                      "Key": "Amount",
                      "Value": "50"
                    },
                    {
                      "Key": "FertiliserType",
                      "Value": "UreaN"
                    }
                  ],
                  "Name": "Fertilise on fixed dates (advanced version)",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.MicroClimate, Models",
                  "a_interception": 0.0,
                  "b_interception": 1.0,
                  "c_interception": 0.0,
                  "d_interception": 0.0,
                  "soil_albedo": 0.23,
                  "SoilHeatFluxFraction": 0.4,
                  "MinimumHeightDiffForNewLayer": 0.0,
                  "NightInterceptionFraction": 0.5,
                  "ReferenceHeight": 2.0,
                  "Name": "MicroClimate",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Irrigation, Models",
                  "Name": "Irrigation",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Fertiliser, Models",
                  "Name": "Fertiliser",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Surface.SurfaceOrganicMatter, Models",
                  "InitialResidueName": "Sward",
                  "InitialResidueType": "grass",
                  "InitialResidueMass": 1000.0,
                  "InitialStandingFraction": 0.0,
                  "InitialCPR": 0.0,
                  "InitialCNR": 15.0,
                  "ResourceName": "SurfaceOrganicMatter",
                  "Name": "SurfaceOrganicMatter",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Soil, Models",
                  "RecordNumber": 0,
                  "ASCOrder": null,
                  "ASCSubOrder": null,
                  "SoilType": "NZ_Sedimentary",
                  "LocalName": "Lismore",
                  "Site": "Winchmore",
                  "NearestTown": "Ashburton",
                  "Region": "Canterbury",
                  "State": null,
                  "Country": "New Zealand",
                  "NaturalVegetation": null,
                  "ApsoilNumber": null,
                  "Latitude": -48.48,
                  "Longitude": 0.0,
                  "LocationAccuracy": null,
                  "DataSource": null,
                  "Comments": null,
                  "Name": "Soil",
                  "Children": [
                    {
                      "$type": "Models.Soils.Chemical, Models",
                      "Depth": [
                        "0-15",
                        "15-30",
                        "30-50",
                        "50-65",
                        "65-90",
                        "90-120",
                        "120-150"
                      ],
                      "Thickness": [
                        150.0,
                        150.0,
                        200.0,
                        150.0,
                        250.0,
                        300.0,
                        300.0
                      ],
                      "NO3N": [
                        5.0,
                        2.5,
                        1.0,
                        0.75,
                        0.5,
                        0.5,
                        0.5
                      ],
                      "NH4N": [
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1
                      ],
                      "PH": [
                        6.0,
                        6.0,
                        6.0,
                        6.0,
                        6.0,
                        6.0,
                        6.0
                      ],
                      "CL": null,
                      "EC": null,
                      "ESP": null,
                      "Name": "Chemical",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.Physical, Models",
                      "Depth": [
                        "0-15",
                        "15-30",
                        "30-50",
                        "50-65",
                        "65-90",
                        "90-120",
                        "120-150"
                      ],
                      "Thickness": [
                        150.0,
                        150.0,
                        200.0,
                        150.0,
                        250.0,
                        300.0,
                        300.0
                      ],
                      "ParticleSizeClay": [
                        20.0,
                        15.0,
                        12.0,
                        8.0,
                        6.0,
                        5.0,
                        5.0
                      ],
                      "ParticleSizeSand": null,
                      "ParticleSizeSilt": null,
                      "BD": [
                        1.3,
                        1.35,
                        1.0,
                        0.53,
                        0.31,
                        0.3,
                        0.3
                      ],
                      "AirDry": [
                        0.05,
                        0.12,
                        0.055,
                        0.015,
                        0.01,
                        0.01,
                        0.01
                      ],
                      "LL15": [
                        0.15,
                        0.14,
                        0.055,
                        0.015,
                        0.01,
                        0.01,
                        0.01
                      ],
                      "DUL": [
                        0.36,
                        0.34,
                        0.19,
                        0.065,
                        0.04,
                        0.03,
                        0.03
                      ],
                      "SAT": [
                        0.45,
                        0.43,
                        0.25,
                        0.15,
                        0.11,
                        0.11,
                        0.11
                      ],
                      "KS": [
                        5000.0,
                        2500.0,
                        3000.0,
                        10000.0,
                        17500.0,
                        20000.0,
                        20000.0
                      ],
                      "BDMetadata": null,
                      "AirDryMetadata": null,
                      "LL15Metadata": null,
                      "DULMetadata": null,
                      "SATMetadata": null,
                      "KSMetadata": null,
                      "Name": "Physical",
                      "Children": [
                        {
                          "$type": "Models.Soils.SoilCrop, Models",
                          "LL": [
                            0.15,
                            0.14,
                            0.06,
                            0.02,
                            0.01,
                            0.01,
                            0.01
                          ],
                          "KL": [
                            0.1,
                            0.1,
                            0.08,
                            0.04,
                            0.01,
                            0.0,
                            0.0
                          ],
                          "XF": [
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            0.0,
                            0.0
                          ],
                          "LLMetadata": null,
                          "KLMetadata": null,
                          "XFMetadata": null,
                          "Name": "AGPRyegrassSoil",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Soils.SoilCrop, Models",
                          "LL": [
                            0.15,
                            0.14,
                            0.06,
                            0.02,
                            0.01,
                            0.01,
                            0.01
                          ],
                          "KL": [
                            0.1,
                            0.1,
                            0.08,
                            0.04,
                            0.01,
                            0.0,
                            0.0
                          ],
                          "XF": [
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            0.0,
                            0.0
                          ],
                          "LLMetadata": null,
                          "KLMetadata": null,
                          "XFMetadata": null,
                          "Name": "AGPWhiteCloverSoil",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.WaterModel.WaterBalance, Models",
                      "SummerDate": "1-Nov",
                      "SummerU": 6.0,
                      "SummerCona": 3.5,
                      "WinterDate": "1-apr",
                      "WinterU": 2.0,
                      "WinterCona": 2.0,
                      "DiffusConst": 88.0,
                      "DiffusSlope": 35.0,
                      "Salb": 0.13,
                      "CN2Bare": 73.0,
                      "CNRed": 20.0,
                      "CNCov": 0.8,
                      "Slope": 0.0,
                      "DischargeWidth": 0.0,
                      "CatchmentArea": 0.0,
                      "Thickness": [
                        150.0,
                        150.0,
                        200.0,
                        150.0,
                        250.0,
                        300.0,
                        300.0
                      ],
                      "SWCON": [
                        0.5,
                        0.52,
                        0.55,
                        0.6,
                        0.65,
                        0.65,
                        0.65
                      ],
                      "KLAT": [
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                        0.0
                      ],
                      "ResourceName": "WaterBalance",
                      "Name": "SoilWater",
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.Organic, Models",
                      "Depth": [
                        "0-15",
                        "15-30",
                        "30-50",
                        "50-65",
                        "65-90",
                        "90-120",
                        "120-150"
                      ],
                      "FOMCNRatio": 40.0,
                      "Thickness": [
                        150.0,
                        150.0,
                        200.0,
                        150.0,
                        250.0,
                        300.0,
                        300.0
                      ],
                      "Carbon": [
                        3.0,
                        1.0,
                        0.6,
                        0.4,
                        0.25,
                        0.15,
                        0.1
                      ],
                      "SoilCNRatio": [
                        12.0,
                        12.0,
                        12.0,
                        12.0,
                        12.0,
                        12.0,
                        12.0
                      ],
                      "FBiom": [
                        0.04,
                        0.02,
                        0.02,
                        0.01,
                        0.01,
                        0.0,
                        0.0
                      ],
                      "FInert": [
                        0.5,
                        0.7,
                        0.83,
                        0.9,
                        0.95,
                        0.99,
                        0.99
                      ],
                      "FOM": [
                        331.337020409173,
                        245.46050190550559,
                        164.53709493722965,
                        121.89207790753734,
                        73.931282427002344,
                        40.574348067292682,
                        22.267674346259405
                      ],
                      "Name": "Organic",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.InitialWater, Models",
                      "PercentMethod": 1,
                      "FractionFull": 0.95,
                      "DepthWetSoil": "NaN",
                      "RelativeTo": null,
                      "Name": "Initial water",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.Sample, Models",
                      "Depth": [
                        "0-15",
                        "15-30",
                        "30-50",
                        "50-65",
                        "65-90",
                        "90-120",
                        "120-150"
                      ],
                      "Thickness": [
                        150.0,
                        150.0,
                        200.0,
                        150.0,
                        250.0,
                        300.0,
                        300.0
                      ],
                      "NO3N": null,
                      "NH4N": null,
                      "SW": null,
                      "OC": null,
                      "EC": null,
                      "CL": null,
                      "ESP": null,
                      "PH": null,
                      "SWUnits": 0,
                      "OCUnits": 0,
                      "PHUnits": 0,
                      "Name": "Initial nitrogen",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.CERESSoilTemperature, Models",
                      "Name": "CERESSoilTemperature",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.Nutrients.Nutrient, Models",
                      "ResourceName": "Nutrient",
                      "Name": "Nutrient",
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.AgPasture.PastureSpecies, Models",
                  "InitialShootDM": 1500.0,
                  "InitialRootDM": 450.0,
                  "InitialRootDepth": 750.0,
                  "ResourceName": "AGPRyegrass",
                  "Name": "AGPRyegrass",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Report, Models",
                  "VariableNames": [
                    "[Clock].Today as Date",
                    "// These examples are set up for Ryegrass and WhiteClover so add in any other species as needed for your simulation",
                    "// The format of AggregationType (variable) from [Report].DayAfterLastOutput to [Clock].Today is used so that when the reporting frequency is changed the outputs are still sensible",
                    "// If the name of the Report component (\"Report\") here is changed in the simulation tree then all the references to that name in the outputs below also need to be changed",
                    "",
                    "// If all you want is an annual pattern of harvested pasture based on the production year (July to June)  ....",
                    "sum of [AGPRyegrass].HarvestedWt from 1-Jul to [Clock].Today as HarvestedWt   //the amount harvested (kg DM /ha)",
                    "sum of [AGPRyegrass].HarvestedWt from 1-Jul to [Clock].Today as RGHarvestedWt"
                  ],
                  "EventNames": [
                    "[Clock].EndOfDay"
                  ],
                  "GroupByVariableName": null,
                  "Name": "Report",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "Models.Axis, Models",
              "Type": 3,
              "Title": null,
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": true,
              "CrossesAtZero": false
            },
            {
              "$type": "Models.Axis, Models",
              "Type": 0,
              "Title": null,
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "AnnualDM",
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": 0,
              "FactorToVaryColours": "CO2",
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": "Tb",
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "HarvestedWt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": "",
              "Name": "AnnualDM",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "IncludeInDocumentation": true,
      "Enabled": true,
      "ReadOnly": false
    }
  ],
  "IncludeInDocumentation": true,
  "Enabled": true,
  "ReadOnly": false
}