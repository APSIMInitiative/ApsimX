{
  "$type": "Models.Core.Simulations, Models",
  "ExplorerWidth": 296,
  "Version": 80,
  "ApsimVersion": "Version 0.0.0.0, built 2020-03-06",
  "Name": "Simulations",
  "Children": [
    {
      "$type": "Models.Storage.DataStore, Models",
      "useFirebird": false,
      "CustomFileName": null,
      "Name": "DataStore",
      "Children": [],
      "IncludeInDocumentation": true,
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Core.Simulation, Models",
      "Name": "Simulation",
      "Children": [
        {
          "$type": "Models.Clock, Models",
          "Start": "2010-09-01T00:00:00",
          "End": "2012-12-31T00:00:00",
          "Name": "Clock",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Weather, Models",
          "FileName": "%root%/Examples/WeatherFiles/lincoln.met",
          "ExcelWorkSheetName": null,
          "Name": "Weather",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Summary, Models",
          "CaptureErrors": true,
          "CaptureWarnings": true,
          "CaptureSummaryText": true,
          "Name": "Summary",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
          "Name": "Soil Arbitrator",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Zone, Models",
          "Area": 1.0,
          "Slope": 0.0,
          "AspectAngle": 0.0,
          "Altitude": 50.0,
          "Name": "Field",
          "Children": [
            {
              "$type": "Models.Core.Folder, Models",
              "ShowPageOfGraphs": false,
              "Name": "Management",
              "Children": [
                {
                  "$type": "Models.Operations, Models",
                  "Operation": [
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2010-10-20",
                      "Action": " [Chicory].Sow(population: 200, cultivar: \"Choice\", depth: 10, rowSpacing: 150)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2010-10-20",
                      "Action": "[Fertiliser].Apply(Amount: 60, Type: Fertiliser.Types.UreaN, Depth: 10)",
                      "Enabled": true
                    }
                  ],
                  "Name": "Sowing",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Operations, Models",
                  "Operation": [
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2011-01-05",
                      "Action": "[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2011-02-20",
                      "Action": "[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2011-10-15",
                      "Action": "[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2011-11-15",
                      "Action": "[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2012-01-10",
                      "Action": "[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2012-02-25",
                      "Action": "[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2012-09-15",
                      "Action": "[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2012-10-25",
                      "Action": "[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)",
                      "Enabled": true
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Date": "2012-11-15",
                      "Action": "[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)",
                      "Enabled": true
                    }
                  ],
                  "Name": "FertiliserSchedule",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "Code": "using System;\r\nusing System.Linq;\r\nusing Models.Core;\r\nusing Models.PMF;\r\nusing Models.Soils;\r\nusing Models.Soils.Nutrients;\r\nusing System.Xml.Serialization;\r\nusing Models.PMF;\r\nusing APSIM.Shared.Utilities;\r\n\r\n        \r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    [System.Xml.Serialization.XmlInclude(typeof(Model))]\r\n    public class Script : Model\r\n    {\r\n        //Communication to other modules\r\n        [Link] ISummary summary = null;\r\n        [Link] Irrigation Irrigation;\r\n        [Link] Clock Clock;\r\n        [Link] Soil Soil;\r\n        [Link(IsOptional = true)] Plant existingCrop;\r\n       \r\n        //User inputs from properties tab\r\n        [Description(\"Turn irrigation on?\")]\r\n        public answerType allowIrrigation { get; set; }\r\n        [Description(\"Start of irrigation season (dd-MMM)\")]\r\n        public string seasonStart { get; set; }\r\n        [Description(\"End of irrigation season (dd-MMM)\")]\r\n        public string seasonEnd { get; set; }\r\n        [Description(\"Season allocation (mm)\")]\r\n        public double seasonsAllocation { get; set; }\r\n        [Description(\"Deficit to trigger irrigation (% PAWC)\")]\r\n        public double triggerDeficit { get; set; }\r\n        [Description(\"Deficit to stop irrigaton (% PAWC)\")]\r\n        public double targetDeficit { get; set; }\r\n        [Description(\"Minimum days for irrigation to return\")]\r\n        public double returndays { get; set; }\r\n        [Description(\"Maximum irrigation application (mm/day)\")]\r\n        public double maximumAmount { get; set; }\r\n        [Description(\"Depth to calculate PAWC (mm)\")]\r\n        public double depthPAWC { get; set; }\r\n       \r\n        public enum answerType\r\n        {\r\n            /// <summary>a positive answer</summary>\r\n            yes,\r\n            /// <summary>a negative answer</summary>\r\n            no\r\n        }\r\n\r\n        //Class members\r\n        [XmlIgnore] public double TopSWdeficit { get; set; }\r\n        [XmlIgnore] public double TopSWC { get; set; }\r\n        [XmlIgnore] public double DaysSinceIrrigation { get; set; }\r\n        [XmlIgnore] public double AmountToApply { get; set; }\r\n        [XmlIgnore] public double SeasonAppliedAmount { get; set; }\r\n        \r\n        private bool IrrigationIsAllowed { get; set; }\r\n        private bool SeasonIsOpen { get; set; }\r\n        private bool CropIsActive { get; set; }\r\n        private bool IrrigatorIsAvailable { get; set; }\r\n        private bool SoilIsDry { get; set; }\r\n\r\n        private DateTime StartDate;\r\n        private DateTime EndDate;\r\n        private double TopDUL;\r\n        private double TopLL;\r\n        private int nLayers;\r\n    \r\n        //Calculate static soil variables\r\n        [EventSubscribe(\"StartOfSimulation\")]\r\n        private void OnStartOfSimulation(object sender, EventArgs e)\r\n        {   \r\n            //Set the season dates\r\n            StartDate = DateTime.Parse(seasonStart + \"-\" + Clock.Today.Year.ToString());\r\n            EndDate = DateTime.Parse(seasonEnd + \"-\" + Clock.Today.Year.ToString());\r\n            \r\n            //Can we irrigate at all?\r\n            IrrigationIsAllowed = false; \r\n            if (allowIrrigation == answerType.yes)\r\n                IrrigationIsAllowed = true; \r\n\r\n            //Calculate soil water variables\r\n            double depthFromSurface = 0.0;\r\n            double fracLayer = 0.0;\r\n            nLayers = Soil.Thickness.Length;\r\n            for (int layer = 0; layer < nLayers; layer++)\r\n            {\r\n                fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.Thickness[layer]);\r\n                TopLL += Soil.LL15mm[layer] * fracLayer;\r\n                TopDUL += Soil.DULmm[layer] * fracLayer;\r\n                depthFromSurface += Soil.Thickness[layer];\r\n                if (depthFromSurface >= depthPAWC)\r\n                    layer = nLayers;\r\n            }\r\n        }\r\n             \r\n        //Determine daily requirement for irrigation\r\n        [EventSubscribe(\"StartOfDay\")]\r\n        private void OnStartOfDay(object sender, EventArgs e)\r\n        {\r\n            //Can we irrigate today?          \r\n            SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);\r\n\r\n            //Is there a crop in the ground that needs irrigation?\r\n            CropIsActive = false;\r\n            if ((existingCrop != null) && (existingCrop.IsAlive))\r\n                CropIsActive = true;\r\n            //if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))\r\n          \r\n            //Is the irrigator available?\r\n            IrrigatorIsAvailable = false;\r\n            DaysSinceIrrigation += 1;\r\n            if (DaysSinceIrrigation >= returndays)\r\n                IrrigatorIsAvailable = true;\r\n          \r\n            //Is the soil dry enough to require irrigation?\r\n            SoilIsDry = false;\r\n            double depthFromSurface = 0.0;\r\n            double fracLayer = 0.0;\r\n            TopSWC = 0.0;\r\n            for (int layer = 0; layer < nLayers; layer++)\r\n            {\r\n                fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.Thickness[layer]);\r\n                TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;\r\n                depthFromSurface += Soil.Thickness[layer];\r\n                if (depthFromSurface >= depthPAWC)\r\n                    layer = nLayers;\r\n            }\r\n            \r\n            TopSWdeficit = TopSWC - TopDUL;\r\n            if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)\r\n                SoilIsDry = true;\r\n                \r\n            //Are all the conditions ratifying irrigation\r\n            if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)\r\n            {\r\n                //Lets bloody well irrigate then!!!!\r\n                AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;\r\n                //AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));\r\n                AmountToApply = maximumAmount;\r\n                Irrigation.Apply(AmountToApply);\r\n                DaysSinceIrrigation = 0;\r\n                SeasonAppliedAmount += AmountToApply;\r\n            }\r\n        }\r\n        \r\n        ///Checks whether theDate is between iniDate and endDate (non-year specific)\r\n        private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)\r\n        {\r\n            bool result = false;\r\n            if (iniDate.DayOfYear < endDate.DayOfYear)\r\n            {\r\n                // period is within one year, ex: summer in the northern hemisphere\r\n                if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))\r\n                    result = true;\r\n            }\r\n            else\r\n            {\r\n                // period goes over the end of the year, ex: summer in the southern hemisphere\r\n                if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))\r\n                    result = true;\r\n            }\r\n            \r\n            return result;\r\n        }\r\n    }\r\n}\r\n",
                  "Parameters": [
                    {
                      "Key": "allowIrrigation",
                      "Value": "yes"
                    },
                    {
                      "Key": "seasonStart",
                      "Value": "15-Sep"
                    },
                    {
                      "Key": "seasonEnd",
                      "Value": "30-Apr"
                    },
                    {
                      "Key": "seasonsAllocation",
                      "Value": "10000"
                    },
                    {
                      "Key": "triggerDeficit",
                      "Value": "75"
                    },
                    {
                      "Key": "targetDeficit",
                      "Value": "95"
                    },
                    {
                      "Key": "returndays",
                      "Value": "3"
                    },
                    {
                      "Key": "maximumAmount",
                      "Value": "15"
                    },
                    {
                      "Key": "depthPAWC",
                      "Value": "500"
                    }
                  ],
                  "Name": "AutomaticIrrigation",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "Code": "// Defoliates on a regular cycle or one-off via a schedule\r\n// currently defoliates by the amount specified spread evenly over the specified period\r\n\r\nusing System;\r\nusing System.Linq;\r\nusing Models.Core;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\nusing Models;\r\nusing Models.Soils;\r\nusing Models.Soils.Nutrients;\r\nusing Models.PMF;\r\nusing System.Xml.Serialization;\r\nusing APSIM.Shared.Utilities;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        [Link] Zone zone;\r\n        [Link] Clock Clock;\r\n        [Link] Plant Chicory;\r\n        [Link] Fertiliser fertiliser;\r\n        [Link] ISummary summary = null;\r\n\r\n        [Description(\"Choose the crop to harvest:\")]\r\n        public IPlant Crop { get; set; }\r\n\r\n        [Description(\"Enter the date to start the rotation (dd/mm/yyyy):\")]\r\n        public DateTime cutPasture_StartDate { get; set; }\r\n\r\n        [Description(\"Enter the date to end the rotation (dd/mm/yyyy):\")]\r\n        public DateTime cutPasture_EndDate { get; set; }\r\n\r\n        [Description(\"Select type of defoliation:\")]\r\n        public defoliationTypes defoliateType { get; set; }\r\n\r\n        [Description(\"Enter the interval between defoliations (days):\")]\r\n        public int interval2Cut { get; set; }\r\n\r\n        [Description(\"Enter the number of days to defoliate over (days):\")]\r\n        public int durationOfCut { get; set; }\r\n\r\n        [Description(\"Choose what amount is being defined:\")]\r\n        public removeAmountTypes removeAmountType { get; set; }\r\n\r\n        [Description(\"Enter the amount to use (kgDM/ha):\")]\r\n        public double herbageAmount { get; set; }\r\n\r\n        [Description(\"Enter the fraction of DM that is removed from the field (0-1):\")]\r\n        public double fracDM2Remove { get; set; }\r\n\r\n        [Description(\"Enter the fraction of N that is removed from the field (0-1):\")]\r\n        public double fracN2Remove { get; set; }\r\n\r\n        [Description(\"Enter the depth down to which urine will applied (mm):\")]\r\n        public double urineDepth { get; set; }\r\n\r\n        [Description(\"Enter the proportion of N returned in dung (0-1):\")]\r\n        public double fracN2Dung { get; set; }\r\n\r\n        [Description(\"Enter the fraction of population decline due to defoliation (0-1):\")]\r\n        public double fracPopDecline { get; set; }\r\n\r\n        //fraction of each plant part returned as residue (0-1), wastage\r\n        private double leafResidueFrac = 0.01;\r\n        private double stemResidueFrac = 0.01;\r\n        private double flowerResidueFrac = 0.01;\r\n        private double minLeafAmount = 5.0;\r\n\r\n        //Outputs\r\n        //Pasture DM defoliated today (kg/ha)\r\n        [XmlIgnore] public double DefoliatedDM{ get; set; }\r\n        //N defoliate today\r\n        [XmlIgnore] public double DefoliatedN{ get; set; }\r\n        //Pasture DM harvested today (kg/ha)\r\n        [XmlIgnore] public double HarvestedDM{ get; set; }\r\n        //N harvested today\r\n        [XmlIgnore] public double HarvestedN{ get; set; }\r\n        //DM removed from the paddock\r\n        [XmlIgnore] public double RemovedDM{ get; set; }\r\n        //N removed from the paddock\r\n        [XmlIgnore] public double RemovedN{ get; set; }\r\n        //DM returned to the paddock\r\n        [XmlIgnore] public double ReturnedDM{ get; set; }\r\n        //N returned to the paddock\r\n        [XmlIgnore] public double ReturnedN{ get; set; }\r\n        //N returned as dung (SurfaceOM)\r\n        [XmlIgnore] public double NReturnedInDung{ get; set; }\r\n        //N returned as urine (urea)\r\n        [XmlIgnore] public double NReturnedInUrine{ get; set; }\r\n        //Number of days after last harvest\r\n        [XmlIgnore] public int DaysAfterCut{ get; set; }\r\n        //Total standing DM (Leaf + Stem/Sheath) before cut\r\n        [XmlIgnore] public double PreHarvestDM{ get; set; }\r\n        //Total standing DM (Leaf + Stem/Sheath) after cut\r\n        [XmlIgnore] public double PostHarvestDM{ get; set; }\r\n\r\n        //Pasture DM harvested this rotation (kg/ha)\r\n        [XmlIgnore] public double RotationHarvestedDM{ get; set; }\r\n        //Pasture DM to be harvested this rotation (kg/ha)\r\n        [XmlIgnore] public double RotationHarvestingDM{ get; set; }\r\n\r\n        //Internal variables\r\n        private RemovalFractions removalFractions;\r\n        //The fraction of urine to be applied in each layer\r\n        private double[] FracLayer;\r\n        // total herbage to remove in g/m2 per day\r\n        private double herbageToRemove;\r\n        // counter\r\n        private int daysCutting = 0;\r\n        // type of defoliation (Cut or Graze)\r\n        private string defoliationType;\r\n        // type of DM amount (ResidualDM or DMToRemove)\r\n        private string amountType;\r\n        // auxiliary\r\n        private bool aCutHasHappened = false;\r\n        private bool isStillCutting = false;\r\n        private double cumAmountHarvested;\r\n\r\n        // event to add residue / dung to surface OM\r\n        public event BiomassRemovedDelegate BiomassRemoved;\r\n\r\n        [EventSubscribe(\"Commencing\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\r\n            removalFractions = new RemovalFractions();\r\n            DaysAfterCut = 0;\r\n            resetVariables();\r\n            if (defoliateType == defoliationTypes.Cut)\r\n                defoliationType = \"Cut\";\r\n            else\r\n                defoliationType = \"Graze\";\r\n\r\n            if (removeAmountType == removeAmountTypes.ResidualDM)\r\n                amountType = \"ResidualDM\";\r\n            else\r\n                amountType = \"DMToRemove\";\r\n\r\n            // make sure that rotation start when startDate<simulationStartDay\r\n            if ((Clock.Today > cutPasture_StartDate) && (Clock.Today < cutPasture_EndDate))\r\n                cutPasture_StartDate = Clock.Today;\r\n        }\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            if (Clock.Today == cutPasture_StartDate)\r\n                DaysAfterCut = interval2Cut;\r\n\r\n            if ((Clock.Today >= cutPasture_StartDate) && (Clock.Today <= cutPasture_EndDate))\r\n            {\r\n                // Check whether we should start cutting\r\n                if ((Chicory.IsEmerged) && (DaysAfterCut > 0) && (DaysAfterCut == interval2Cut))\r\n                {\r\n                    Defoliate(defoliationType, herbageAmount * 0.1, amountType, durationOfCut);\r\n                }\r\n            }\r\n\r\n            // Check whether we need to continue cutting\r\n            //if ((daysCutting > 0) && (daysCutting <= durationOfCut))\r\n            if (isStillCutting)\r\n            {\r\n                // reset outputs\r\n                resetVariables();\r\n\r\n                removeDM(herbageToRemove, defoliationType);\r\n                returnExcreta();\r\n                cumAmountHarvested += HarvestedDM;\r\n                daysCutting += 1;\r\n            }\r\n\r\n            // reset outputs\r\n            if (daysCutting < 0)\r\n            {\r\n                resetVariables();\r\n                daysCutting = 0;\r\n            }\r\n        }\r\n\r\n        [EventSubscribe(\"DoManagementCalculations\")]\r\n        private void OnDoManagementCalculations(object sender, EventArgs e)\r\n        {\r\n            if ((daysCutting > 0) && (daysCutting < durationOfCut))\r\n                isStillCutting = true;\r\n\r\n            if (daysCutting == durationOfCut)\r\n            {\r\n                PostHarvestDM = (double)zone.Get(\"Chicory.AboveGround.Wt\");\r\n                RotationHarvestedDM = cumAmountHarvested;\r\n                aCutHasHappened = true;\r\n                isStillCutting = false;\r\n                daysCutting = -1;\r\n                Chicory.Population = Chicory.Population * (1.0 - fracPopDecline);\r\n            }\r\n\r\n            if (aCutHasHappened && (daysCutting == 0))\r\n                DaysAfterCut += 1;\r\n        }\r\n\r\n        public enum removeAmountTypes\r\n        {\r\n            /// <summary>Setting DM amount to remove</summary>\r\n            DMToRemove,\r\n            /// <summary>Setting residual DM amount</summary>\r\n            ResidualDM\r\n        }\r\n\r\n        public enum defoliationTypes\r\n        {\r\n            /// <summary>Cut</summary>\r\n            Cut,\r\n            /// <summary>Graze</summary>\r\n            Graze\r\n        }\r\n\r\n        // resets the values of all outputs\r\n        private void resetVariables()\r\n        {\r\n            DefoliatedDM = 0.0;\r\n            DefoliatedN = 0.0;\r\n            HarvestedDM = 0.0;\r\n            HarvestedN = 0.0;\r\n            RemovedDM = 0.0;\r\n            RemovedN = 0.0;\r\n            ReturnedDM = 0.0;\r\n            ReturnedN = 0.0;\r\n            NReturnedInDung = 0.0;\r\n            NReturnedInUrine = 0.0;\r\n            RotationHarvestedDM = 0.0;\r\n            RotationHarvestingDM = 0.0;\r\n        }\r\n\r\n        // Perform the basic calculations for defoliation\r\n        public void Defoliate(string defoliationType, double amountDM, string amountType, int duration)\r\n        {\r\n            // get the existing plant amount\r\n            PreHarvestDM = (double)zone.Get(\"Chicory.AboveGround.Wt\");\r\n\r\n            // check duration\r\n            if (duration <= 0)\r\n                throw new Exception(\"Duration of graze/cut rotation is zero or negative\");\r\n            \r\n            // check amount to remove\r\n            if ((amountType == \"DMToRemove\") && (PreHarvestDM > 0.0))\r\n            {\r\n                summary.WriteMessage(this, \"   Defoliating \" + (10.0 * amountDM).ToString(\"#0.0\") + \"kg/ha over \" + duration + \" days\");\r\n                herbageToRemove = amountDM / duration;\r\n            }\r\n            else if ((amountType == \"ResidualDM\") && (PreHarvestDM > amountDM))\r\n            {\r\n                summary.WriteMessage(this, \"   Defoliating down to approximately \" + (10.0 * amountDM).ToString(\"#0.0\") + \"kg/ha over \" + duration + \" days\");\r\n                herbageToRemove = (PreHarvestDM - amountDM) / duration;\r\n            }\r\n            else\r\n            {\r\n                herbageToRemove = 0.0;\r\n                summary.WriteMessage(this, \"   Defoliation will not happend because there is not enough plant material\");\r\n                return;\r\n            }\r\n\r\n            RotationHarvestingDM = herbageToRemove * duration;\r\n            durationOfCut = duration;\r\n            // first defoliation\r\n            removeDM(herbageToRemove, defoliationType);\r\n            returnExcreta();\r\n            cumAmountHarvested = HarvestedDM;\r\n            daysCutting = 1;\r\n            DaysAfterCut = 0;\r\n        }\r\n\r\n        private void removeDM(double removeAmount, string removeType)\r\n        {\r\n            // get the existing biomass\r\n            double leafLiveWt = (double)zone.Get(\"Chicory.Leaf.Live.Wt\");\r\n            double stemLiveWt = (double)zone.Get(\"Chicory.Stem.Live.Wt\");\r\n            double flowerLiveWt = (double)zone.Get(\"Chicory.Inflorescence.Live.Wt\");\r\n            double leafDeadWt = (double)zone.Get(\"Chicory.Leaf.Dead.Wt\");\r\n            double stemDeadWt = (double)zone.Get(\"Chicory.Stem.Dead.Wt\");\r\n            double flowerDeadWt = (double)zone.Get(\"Chicory.Inflorescence.Dead.Wt\");\r\n            double leafLiveN = (double)zone.Get(\"Chicory.Leaf.Live.N\");\r\n            double stemLiveN = (double)zone.Get(\"Chicory.Stem.Live.N\");\r\n            double flowerLiveN = (double)zone.Get(\"Chicory.Inflorescence.Live.N\");\r\n            double leafDeadN = (double)zone.Get(\"Chicory.Leaf.Dead.N\");\r\n            double stemDeadN = (double)zone.Get(\"Chicory.Stem.Dead.N\");\r\n            double flowerDeadN = (double)zone.Get(\"Chicory.Inflorescence.Dead.N\");\r\n\r\n            double existingWt = leafLiveWt + leafDeadWt + stemLiveWt + stemDeadWt + flowerLiveWt + flowerDeadWt;\r\n            double existingN = leafLiveN + leafDeadN + stemLiveN + stemDeadN + flowerLiveN + flowerDeadN;\r\n\r\n            // Can we harvest anything?\r\n            double removingWt = Math.Min(existingWt, removeAmount);\r\n            if (removingWt > 0.0)\r\n            {\r\n                // get the fractions to remove for each organ (will override the default values)\r\n                // the default is [Chicory].Leaf.BiomassRemovalDefaults.Cut.FractionRemoved, or equivalent\r\n                // >> double leafFracToRemove = removeAmount * (leafLiveWt + leafDeadWt) / existingWt / existingWt;\r\n                double fracToRemove = removingWt / existingWt;\r\n                double leafFracToRemove = 0.0;\r\n                if ((leafLiveWt + leafDeadWt) > 0.0)\r\n                {\r\n                    if (leafLiveWt < minLeafAmount)\r\n                    {\r\n                        // leafWt cannot go below a minimum\r\n                        leafFracToRemove = (removingWt + leafLiveWt - minLeafAmount) / existingWt;\r\n                    }\r\n                    else\r\n                        leafFracToRemove = fracToRemove;\r\n                }\r\n\r\n                double stemFracToRemove = ((stemLiveWt + stemDeadWt) > 0.0) ? fracToRemove : 0.0;\r\n                double flowerFracToRemove = ((flowerLiveWt + flowerDeadWt) > 0.0) ? fracToRemove : 0.0;\r\n\r\n                // get the fractions to residue (i.e. wastage - will override the default values)\r\n                // the default is [Chicory].Leaf.BiomassRemovalDefaults.Cut.FractionToResidue, or equivalent\r\n                double leafFracToResidue = leafResidueFrac * leafFracToRemove;\r\n                double stemFracToResidue = stemResidueFrac * stemFracToRemove;\r\n                double flowerFracToResidue = flowerResidueFrac * flowerFracToRemove;\r\n\r\n                // correct the values to defoliate (so our removing = remove + residue)\r\n                leafFracToRemove -= leafFracToResidue;\r\n                stemFracToRemove -= stemFracToResidue;\r\n                flowerFracToRemove -= flowerFracToResidue;\r\n\r\n                // set removal fractions (these overrides the default removals in the plant)\r\n                removalFractions.SetFractionToRemove(\"Leaf\", leafFracToRemove, \"Live\");\r\n                removalFractions.SetFractionToResidue(\"Leaf\", leafFracToResidue, \"Live\");\r\n                removalFractions.SetFractionToRemove(\"Leaf\", leafFracToRemove, \"Dead\");\r\n                removalFractions.SetFractionToResidue(\"Leaf\", leafFracToResidue, \"Dead\");\r\n                removalFractions.SetFractionToRemove(\"Stem\", stemFracToRemove, \"Live\");\r\n                removalFractions.SetFractionToResidue(\"Stem\", stemFracToResidue, \"Live\");\r\n                removalFractions.SetFractionToRemove(\"Stem\", stemFracToRemove, \"Dead\");\r\n                removalFractions.SetFractionToResidue(\"Stem\", stemFracToResidue, \"Dead\");\r\n                removalFractions.SetFractionToRemove(\"Inflorescence\", flowerFracToRemove, \"Live\");\r\n                removalFractions.SetFractionToResidue(\"Inflorescence\", flowerFracToResidue, \"Live\");\r\n                removalFractions.SetFractionToRemove(\"Inflorescence\", flowerFracToRemove, \"Dead\");\r\n                removalFractions.SetFractionToResidue(\"Inflorescence\", flowerFracToResidue, \"Dead\");\r\n\r\n                removalFractions.SetFractionToRemove(\"Root\", 0.0);\r\n                removalFractions.SetFractionToResidue(\"Root\", 0.0);\r\n                removalFractions.SetFractionToRemove(\"Taproot\", 0.0);\r\n                removalFractions.SetFractionToResidue(\"Taproot\", 0.0);\r\n\r\n                // Actually do the biomass removal\r\n                Chicory.RemoveBiomass(removeType, removalFractions);\r\n\r\n                // get the new existing plant amount\r\n                double postHarvestWt = (double)zone.Get(\"Chicory.AboveGround.Wt\");\r\n                double postHarvestN = (double)zone.Get(\"Chicory.AboveGround.N\");\r\n\r\n                // get total defoliation (total plant stuff lost)\r\n                DefoliatedDM = existingWt - postHarvestWt;\r\n                DefoliatedN = existingN - postHarvestN;\r\n\r\n                // get total harvested (plant stuff removed from plants)\r\n                HarvestedDM = (double)zone.Get(\"Chicory.Leaf.Removed.Wt\")\r\n                + (double)zone.Get(\"Chicory.Stem.Removed.Wt\")\r\n                + (double)zone.Get(\"Chicory.Inflorescence.Removed.Wt\");\r\n                HarvestedN = (double)zone.Get(\"Chicory.Leaf.Removed.N\")\r\n                + (double)zone.Get(\"Chicory.Stem.Removed.N\")\r\n                + (double)zone.Get(\"Chicory.Inflorescence.Removed.N\");\r\n\r\n                // get amounts actually removed from field and that to be returned (residue or dung/urine)\r\n                RemovedDM = HarvestedDM * fracDM2Remove;\r\n                RemovedN = HarvestedN * fracN2Remove;\r\n                ReturnedDM = HarvestedDM - RemovedDM;\r\n                ReturnedN = HarvestedN - RemovedN;\r\n                NReturnedInDung = ReturnedN * fracN2Dung;\r\n                NReturnedInUrine = ReturnedN - NReturnedInDung;\r\n            }\r\n            else\r\n            {\r\n            }\r\n        }\r\n\r\n        // Return dung and urine\r\n        private void returnExcreta()\r\n        {\r\n            if ((ReturnedDM > 0.0) || (NReturnedInDung > 0.0))\r\n            {\r\n                PMF.BiomassRemovedType BiomassDung = new PMF.BiomassRemovedType();\r\n                string[] type = new string[] { \"RuminantDung_PastureFed\" };\r\n                float[] dltdm = new float[] { (Single)ReturnedDM };\r\n                float[] dltn = new float[] { (Single)NReturnedInDung };\r\n                float[] dltp = new float[] { 0 };\r\n                float[] fraction = new float[] { 1 };     // fraction is always 1.0 here\r\n\r\n                BiomassDung.crop_type = \"RuminantDung_PastureFed\";\r\n                BiomassDung.dm_type = type;\r\n                BiomassDung.dlt_crop_dm = dltdm;\r\n                BiomassDung.dlt_dm_n = dltn;\r\n                BiomassDung.dlt_dm_p = dltp;\r\n                BiomassDung.fraction_to_residue = fraction;\r\n                BiomassRemoved.Invoke(BiomassDung);\r\n            }\r\n\r\n            if (NReturnedInUrine > 0.0)\r\n            {\r\n                fertiliser.Apply(NReturnedInUrine * 10, Fertiliser.Types.UreaN, urineDepth);\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                  "Parameters": [
                    {
                      "Key": "Crop",
                      "Value": "Chicory"
                    },
                    {
                      "Key": "cutPasture_StartDate",
                      "Value": "2011-01-01"
                    },
                    {
                      "Key": "cutPasture_EndDate",
                      "Value": "2100-12-31"
                    },
                    {
                      "Key": "defoliateType",
                      "Value": "Graze"
                    },
                    {
                      "Key": "interval2Cut",
                      "Value": "45"
                    },
                    {
                      "Key": "durationOfCut",
                      "Value": "1"
                    },
                    {
                      "Key": "removeAmountType",
                      "Value": "ResidualDM"
                    },
                    {
                      "Key": "herbageAmount",
                      "Value": "500"
                    },
                    {
                      "Key": "fracDM2Remove",
                      "Value": "0.8"
                    },
                    {
                      "Key": "fracN2Remove",
                      "Value": "0.8"
                    },
                    {
                      "Key": "urineDepth",
                      "Value": "10"
                    },
                    {
                      "Key": "fracN2Dung",
                      "Value": "0.4"
                    },
                    {
                      "Key": "fracPopDecline",
                      "Value": "0.05"
                    }
                  ],
                  "Name": "Defoliate",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.MicroClimate, Models",
              "a_interception": 0.0,
              "b_interception": 1.0,
              "c_interception": 0.0,
              "d_interception": 0.0,
              "soil_albedo": 0.23,
              "SoilHeatFluxFraction": 0.4,
              "MinimumHeightDiffForNewLayer": 0.0,
              "NightInterceptionFraction": 0.5,
              "ReferenceHeight": 2.0,
              "Name": "MicroClimate",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Irrigation, Models",
              "Name": "Irrigation",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Fertiliser, Models",
              "Name": "Fertiliser",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Surface.SurfaceOrganicMatter, Models",
              "Canopies": [],
              "InitialResidueName": "grass",
              "InitialResidueType": "grass",
              "InitialResidueMass": 500.0,
              "InitialStandingFraction": 0.0,
              "InitialCPR": 0.0,
              "InitialCNR": 40.0,
              "FractionFaecesAdded": 1.0,
              "ResourceName": "SurfaceOrganicMatter",
              "Name": "SurfaceOrganicMatter",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Soils.Soil, Models",
              "RecordNumber": 0,
              "ASCOrder": null,
              "ASCSubOrder": null,
              "SoilType": "Generic medium texture",
              "LocalName": null,
              "Site": null,
              "NearestTown": null,
              "Region": "Canterbury",
              "State": null,
              "Country": "New Zealand",
              "NaturalVegetation": null,
              "ApsoilNumber": null,
              "Latitude": 0.0,
              "Longitude": 0.0,
              "LocationAccuracy": null,
              "DataSource": null,
              "Comments": null,
              "Name": "Soil",
              "Children": [
                {
                  "$type": "Models.Soils.Chemical, Models",
                  "Depth": [
                    "0-15",
                    "15-30",
                    "30-50",
                    "50-75",
                    "75-100",
                    "100-150"
                  ],
                  "Thickness": [
                    150.0,
                    150.0,
                    200.0,
                    250.0,
                    250.0,
                    500.0
                  ],
                  "NO3N": [
                    9.433962264150944,
                    6.5929299501192782,
                    3.6820973075106305,
                    2.1917808219178077,
                    2.1917808219178077,
                    0.74074074074074092
                  ],
                  "NH4N": [
                    0.37735849056603776,
                    0.24072869225764482,
                    0.11360415682569673,
                    0.054794520547945182,
                    0.054794520547945237,
                    0.02962962962962962
                  ],
                  "PH": [
                    6.0,
                    6.0,
                    6.0,
                    6.0,
                    6.0,
                    6.0
                  ],
                  "CL": null,
                  "EC": null,
                  "ESP": null,
                  "Name": "Chemical",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Physical, Models",
                  "Depth": [
                    "0-15",
                    "15-30",
                    "30-50",
                    "50-75",
                    "75-100",
                    "100-150"
                  ],
                  "Thickness": [
                    150.0,
                    150.0,
                    200.0,
                    250.0,
                    250.0,
                    500.0
                  ],
                  "ParticleSizeClay": [
                    20.0,
                    20.0,
                    20.0,
                    15.0,
                    10.0,
                    10.0
                  ],
                  "ParticleSizeSand": [
                    15.0,
                    20.0,
                    20.0,
                    25.0,
                    35.0,
                    35.0
                  ],
                  "ParticleSizeSilt": [
                    65.0,
                    60.0,
                    60.0,
                    60.0,
                    55.0,
                    55.0
                  ],
                  "BD": [
                    1.3,
                    1.4,
                    1.5,
                    1.6,
                    1.45,
                    1.35
                  ],
                  "AirDry": [
                    0.05,
                    0.17,
                    0.19,
                    0.17,
                    0.1,
                    0.1
                  ],
                  "LL15": [
                    0.15,
                    0.17,
                    0.19,
                    0.17,
                    0.1,
                    0.1
                  ],
                  "DUL": [
                    0.36,
                    0.34,
                    0.33,
                    0.3,
                    0.2,
                    0.2
                  ],
                  "SAT": [
                    0.45,
                    0.42,
                    0.38,
                    0.36,
                    0.38,
                    0.39
                  ],
                  "KS": [
                    4500.0,
                    2500.0,
                    200.0,
                    1500.0,
                    5000.0,
                    10000.0
                  ],
                  "BDMetadata": null,
                  "AirDryMetadata": null,
                  "LL15Metadata": null,
                  "DULMetadata": null,
                  "SATMetadata": null,
                  "KSMetadata": null,
                  "Name": "Physical",
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.15,
                        0.17,
                        0.19,
                        0.17,
                        0.1,
                        0.1
                      ],
                      "KL": [
                        0.1,
                        0.08,
                        0.05,
                        0.02,
                        0.01,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        0.5
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "ChicorySoil",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.SoilWater, Models",
                  "SummerDate": "21-Sep",
                  "SummerU": 6.0,
                  "SummerCona": 3.5,
                  "WinterDate": "23-Mar",
                  "WinterU": 6.0,
                  "WinterCona": 2.5,
                  "DiffusConst": 88.0,
                  "DiffusSlope": 35.0,
                  "Salb": 0.2,
                  "CN2Bare": 0.7,
                  "CNRed": 20.0,
                  "CNCov": 0.8,
                  "slope": "NaN",
                  "discharge_width": "NaN",
                  "catchment_area": "NaN",
                  "max_pond": 0.0,
                  "Thickness": [
                    150.0,
                    150.0,
                    200.0,
                    250.0,
                    250.0,
                    500.0
                  ],
                  "Depth": [
                    "0-15",
                    "15-30",
                    "30-50",
                    "50-75",
                    "75-100",
                    "100-150"
                  ],
                  "SWCON": [
                    0.45,
                    0.35,
                    0.1,
                    0.15,
                    0.3,
                    0.2
                  ],
                  "KLAT": null,
                  "PrecipitationInterception": 0.0,
                  "Name": "SoilWater",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Organic, Models",
                  "Depth": [
                    "0-15",
                    "15-30",
                    "30-50",
                    "50-75",
                    "75-100",
                    "100-150"
                  ],
                  "FOMCNRatio": 40.0,
                  "Thickness": [
                    150.0,
                    150.0,
                    200.0,
                    250.0,
                    250.0,
                    500.0
                  ],
                  "Carbon": [
                    2.5,
                    1.25,
                    0.5,
                    0.2,
                    0.15,
                    0.1
                  ],
                  "SoilCNRatio": [
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0
                  ],
                  "FBiom": [
                    0.04,
                    0.025,
                    0.015,
                    0.01,
                    0.008,
                    0.008
                  ],
                  "FInert": [
                    0.4,
                    0.6,
                    0.8,
                    0.9,
                    0.95,
                    0.98
                  ],
                  "FOM": [
                    358.61744427798754,
                    265.67033697544377,
                    178.0841525116833,
                    108.01349850727648,
                    65.513498507487952,
                    24.101069220120792
                  ],
                  "Name": "Organic",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.InitialWater, Models",
                  "PercentMethod": 1,
                  "FractionFull": 0.9,
                  "DepthWetSoil": "NaN",
                  "RelativeTo": null,
                  "Name": "Initial water",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Sample, Models",
                  "Depth": [
                    "0-20",
                    "20-40",
                    "40-100",
                    "100-150"
                  ],
                  "Thickness": [
                    200.0,
                    200.0,
                    600.0,
                    500.0
                  ],
                  "NO3N": null,
                  "NH4N": null,
                  "SW": null,
                  "OC": null,
                  "EC": null,
                  "CL": null,
                  "ESP": null,
                  "PH": null,
                  "SWUnits": 0,
                  "OCUnits": 0,
                  "PHUnits": 0,
                  "Name": "Initial nitrogen",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.CERESSoilTemperature, Models",
                  "Name": "CERESSoilTemperature",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Nutrients.Nutrient, Models",
                  "DirectedGraphInfo": {
                    "$type": "Models.Graph.DirectedGraph, Models",
                    "Nodes": [
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "Inert",
                        "Location": "656, 254",
                        "Colour": "0, 114, 178",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "SurfaceResidue",
                        "Location": "566, 69",
                        "Colour": "0, 114, 178",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "FOMLignin",
                        "Location": "261, 69",
                        "Colour": "0, 114, 178",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "FOMCellulose",
                        "Location": "397, 70",
                        "Colour": "0, 114, 178",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "FOMCarbohydrate",
                        "Location": "123, 70",
                        "Colour": "0, 114, 178",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "Microbial",
                        "Location": "218, 299",
                        "Colour": "0, 114, 178",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "Humic",
                        "Location": "458, 293",
                        "Colour": "0, 114, 178",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "Urea",
                        "Location": "529, 419",
                        "Colour": "0, 158, 115",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "NO3",
                        "Location": "185, 435",
                        "Colour": "0, 158, 115",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "NH4",
                        "Location": "357, 422",
                        "Colour": "0, 158, 115",
                        "OutlineColour": "Black",
                        "Transparent": false
                      },
                      {
                        "$type": "Models.Graph.Node, Models",
                        "Name": "Atmosphere",
                        "Location": "48, 338",
                        "Colour": "White",
                        "OutlineColour": "White",
                        "Transparent": true
                      }
                    ],
                    "Arcs": [
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "SurfaceResidue",
                        "DestinationName": "Microbial",
                        "Location": "415, 173",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "SurfaceResidue",
                        "DestinationName": "Humic",
                        "Location": "499, 172",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "FOMLignin",
                        "DestinationName": "Microbial",
                        "Location": "259, 221",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "FOMLignin",
                        "DestinationName": "Humic",
                        "Location": "255, 105",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "FOMCellulose",
                        "DestinationName": "Microbial",
                        "Location": "370, 184",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "FOMCellulose",
                        "DestinationName": "Humic",
                        "Location": "463, 224",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "FOMCarbohydrate",
                        "DestinationName": "Microbial",
                        "Location": "141, 131",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "FOMCarbohydrate",
                        "DestinationName": "Humic",
                        "Location": "204, 215",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "Microbial",
                        "DestinationName": "Microbial",
                        "Location": "335, 301",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "Microbial",
                        "DestinationName": "Humic",
                        "Location": "319, 278",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "Humic",
                        "DestinationName": "Microbial",
                        "Location": "334, 340",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "Urea",
                        "DestinationName": "NH4",
                        "Location": "433, 416",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "NO3",
                        "DestinationName": "Atmosphere",
                        "Location": "1, 319",
                        "Colour": "Black",
                        "Text": null
                      },
                      {
                        "$type": "Models.Graph.Arc, Models",
                        "SourceName": "NH4",
                        "DestinationName": "NO3",
                        "Location": "243, 409",
                        "Colour": "Black",
                        "Text": null
                      }
                    ]
                  },
                  "ResourceName": "Nutrient",
                  "Name": "Nutrient",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "CropType": "Chicory",
              "IsAlive": false,
              "IsEnding": false,
              "DaysAfterEnding": 0,
              "ResourceName": "Chicory",
              "Name": "Chicory",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Report.Report, Models",
              "VariableNames": [
                "[Clock].Today as Date",
                "",
                "[Chicory].Population",
                "[Chicory].CropType",
                "[Chicory].Leaf.RadIntTot as InterceptedRadiation",
                "",
                "[Irrigation].IrrigationApplied as IrrigationApplied",
                "[Soil].SoilWater.Es as Evaporation",
                "[Chicory].Leaf.Transpiration as Transpiration",
                "[Soil].SoilWater.Drainage as Drainage",
                "[Soil].SoilWater.Runoff as Runoff",
                "sum([Soil].SoilWater.SWmm) as TotalSWC",
                "sum([Soil].DULmm) as TotalDUL",
                "sum([Soil].LL15mm) as TotalLL15",
                "[Fertiliser].NitrogenApplied as FertiliserN",
                "sum([Soil].Nutrient.Natm) as DenitrifiedN",
                "([Soil].SoilWater.LeachNH4 + [Soil].SoilWater.LeachNO3) as LeachedN",
                "(-1*[Chicory].Root.NUptake) as UptakeN",
                "(sum([Soil].Nutrient.Urea.kgha) + sum([Soil].Nutrient.NH4.kgha) + sum([Soil].Nutrient.NO3.kgha)) as SoilNContent",
                "",
                "[Chicory].Total.Wt",
                "[Chicory].AboveGround.Wt",
                "[Chicory].BelowGround.Wt",
                "[Chicory].Leaf.Live.NConc",
                "[Chicory].Leaf.LAI",
                "[Chicory].Leaf.Live.Wt",
                "[Chicory].Stem.Live.Wt",
                "[Chicory].Inflorescence.Live.Wt",
                "[Chicory].Taproot.Live.Wt",
                "[Chicory].Root.Live.Wt",
                "",
                "[Defoliate].Script.DefoliatedDM as HarvestedWt"
              ],
              "EventNames": [
                "[Clock].DoReport"
              ],
              "Name": "Report",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 3,
              "Title": "Date",
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            },
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 0,
              "Title": null,
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "DisabledSeries": null,
          "LegendOutsideGraph": false,
          "Name": "Biomass",
          "Children": [
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 1,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "Chicory.Total.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Total",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "Chicory.AboveGround.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "AboveGround",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -2793984,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "Chicory.BelowGround.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "BelowGround",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 3,
              "Title": "Date",
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            },
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 0,
              "Title": null,
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "DisabledSeries": null,
          "LegendOutsideGraph": false,
          "Name": "PlantParts",
          "Children": [
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "Chicory.Leaf.Live.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Leaf",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 2,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "Chicory.Stem.Live.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Stem",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -11094807,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "Chicory.Inflorescence.Live.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Inflorescence",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -990142,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "Chicory.Taproot.Live.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Taproot",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -2793984,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "Chicory.Root.Live.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 3,
              "Title": "Date",
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            },
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 0,
              "Title": null,
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            },
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 2,
              "Title": null,
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "DisabledSeries": null,
          "LegendOutsideGraph": false,
          "Name": "Harvests",
          "Children": [
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "HarvestedWt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Events",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "HarvestedWt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": true,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Cumulative",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 3,
              "Title": "Date",
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            },
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 0,
              "Title": null,
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "DisabledSeries": null,
          "LegendOutsideGraph": false,
          "Name": "Water",
          "Children": [
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16747854,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "TotalSWC",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "WaterContent",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "TotalDUL",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "DUL",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -2793984,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Date",
              "YFieldName": "TotalLL15",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "LL15",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "IncludeInDocumentation": true,
      "Enabled": true,
      "ReadOnly": false
    }
  ],
  "IncludeInDocumentation": true,
  "Enabled": true,
  "ReadOnly": false
}