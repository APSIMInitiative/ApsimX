{
  "$type": "Models.Core.Simulations, Models",
  "Version": 165,
  "Name": "Simulations",
  "ResourceName": null,
  "Children": [
    {
      "$type": "Models.Storage.DataStore, Models",
      "useFirebird": false,
      "CustomFileName": null,
      "Name": "DataStore",
      "ResourceName": null,
      "Children": [],
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Core.Simulation, Models",
      "Descriptors": null,
      "Name": "PlantainGrazing",
      "ResourceName": null,
      "Children": [
        {
          "$type": "Models.Memo, Models",
          "Text": "Is resowing every year - should make this more flexible\r\n\r\nGetting an error when hte no-grazing window is unchecked - have submitted an issue.  Follow up with Rogerio.",
          "Name": "Memo",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Clock, Models",
          "Start": "2010-09-01T00:00:00",
          "End": "2012-08-31T00:00:00",
          "Name": "Clock",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Climate.Weather, Models",
          "ConstantsFile": null,
          "FileName": "%root%\\Examples\\WeatherFiles\\lincoln.met",
          "ExcelWorkSheetName": null,
          "Name": "Weather",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Summary, Models",
          "Verbosity": 100,
          "Name": "Summary",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
          "Name": "Soil Arbitrator",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.GrazPlan.Supplement, Models",
          "SpoilageTime": 0.0,
          "Stores": [
            {
              "$type": "Models.GrazPlan.StoreType, Models",
              "Name": "fodder",
              "Stored": 0.0,
              "IsRoughage": true,
              "DMContent": 0.85,
              "DMD": 0.0,
              "MEContent": 0.0,
              "CPConc": 0.0,
              "ProtDg": 0.0,
              "PConc": 0.0,
              "SConc": 0.0,
              "EEConc": 0.0,
              "ADIP2CP": 0.0,
              "AshAlk": 0.0,
              "MaxPassage": 0.0
            },
            {
              "$type": "Models.GrazPlan.StoreType, Models",
              "Name": "silage",
              "Stored": 0.0,
              "IsRoughage": true,
              "DMContent": 1.0,
              "DMD": 0.75,
              "MEContent": 12.0,
              "CPConc": 0.18,
              "ProtDg": 0.8,
              "PConc": 0.0032,
              "SConc": 0.0024,
              "EEConc": 0.02,
              "ADIP2CP": 0.06,
              "AshAlk": 0.6,
              "MaxPassage": 0.0
            }
          ],
          "PaddockList": [],
          "Name": "Supplement",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.GrazPlan.Stock, Models",
          "randFactory": {
            "$type": "StdUnits.MyRandom, Models"
          },
          "RandSeed": 9999,
          "Name": "Stock",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.ForageDigestibility.Forages, Models",
          "Parameters": null,
          "Name": "Forages",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Manager, Models",
          "CodeArray": [
            "using System.Diagnostics;",
            "using Models.AgPasture;",
            "using System.Linq;",
            "using System.Collections.Generic;",
            "using System.Collections;",
            "using Models.Soils;",
            "using Models.PMF;",
            "using System.Xml.Serialization;",
            "using APSIM.Shared.Utilities;",
            "using Models.GrazPlan;",
            "using Models.Utilities;",
            "using Models.Core;",
            "using Models;",
            "using System;",
            "",
            "namespace Models",
            "{",
            "",
            "    [Serializable]",
            "    public class Script : Model",
            "    {",
            "        [Link] Clock clock;",
            "        [Link] Stock stock;",
            "        [Link] Supplement supplement;",
            "        [Link] List<Zone> paddocks;",
            "        [Link] ISummary summary;",
            "        [Link] Simulation farm;",
            "",
            "        private int CurrentGroupNum = 1;    // animal group number",
            "        private int CurrentLocationNum { get; set; }",
            "",
            "        public enum Genotypes",
            "        {",
            "            SmallMerino,",
            "            Angus,",
            "            Friesian",
            "        }",
            "",
            "        [Separator(\"Stock type info, the same type of stock are brought onto the paddock at each grazing\")]",
            "",
            "        [Description(\"Stock: genotype (e.g. Small Merino, Angus, Friesian):\")] ",
            "        public Genotypes Genotype { get; set; }",
            "",
            "        [Description(\"Stock: sex (Female, Male, Castrate):\")] ",
            "        public ReproductiveType Sex { get; set; }",
            "",
            "        [Description(\"Stock: age (months):\")] ",
            "        public double Age { get; set; }",
            "",
            "        [Description(\"Stock: weight (kg liveweight /head):\")] ",
            "        public double Weight { get; set; }",
            "",
            "        [Description(\"Stock: fertility status (0 if non-pregnant or days since conception):\")] ",
            "        public int Pregnant { get; set; }",
            "",
            "        [Description(\"Stock: lactation status (0 if non-lactating or days since parturition):\")]",
            "        public int Lactating { get; set; }",
            "",
            "        [Description(\"Stock: number of unweaned young:\")]",
            "        public int YoungNumber { get; set; }",
            "",
            "        [Description(\"Stock: weight of unweaned young:\")] ",
            "        public double YoungWt { get; set; }",
            "",
            "        [Separator(\"Grazing type info\")]",
            "",
            "        [Description(\"Paddock stocking rate (head/ha): \")] ",
            "        public double StockingRate { get; set; }",
            "",
            "        [Description(\"Initial location of the cows (give either the paddock name or 'Away'): \")] ",
            "        public string CurrentLocation { get; set; }",
            "",
            "        [Description(\"Standing biomass at which to bring the stock into the simulation (kg DM/ha): \")] ",
            "        public double PreGrazingDM { get; set; }",
            "",
            "        [Description(\"Standing biomass at which to exit  stock from the simulation (kg DM/ha): \")] ",
            "        public double PostGrazingDM { get; set; }",
            "",
            "        [Description(\"Implement a no-grazing window? (tick for yes): \")] ",
            "        public bool DoNoGrazingWindow { get; set; }",
            "",
            "        [Description(\"Start of the no-grazing window (dd-MMM)\")] ",
            "        public string NoGrazeStart { get; set; }",
            "",
            "        [Description(\"End of the no-grazing window (dd-MMM)\")] ",
            "        public string NoGrazeEnd { get; set; }",
            "",
            "        [Separator(\"Supplementary feeding\")]",
            "",
            "        [Description(\"Name of the supplement to feed: \")] ",
            "        public string SupplementName { get; set; }",
            "",
            "        [Description(\"Feed the supplement first (i.e. before the new forage is available to the stock)?: \")] ",
            "        public bool SupplementFirst { get; set; }",
            "",
            "        [Description(\"Amount of supplementary feeding offered every day (kg DM /head /day): \")] ",
            "        public double SupplementEveryDay { get; set; }",
            "",
            "        [Description(\"Additional amount of supplement offered when available biomass is low (kg DM /head /day): \")] ",
            "        public double SupplementOnPastureMass { get; set; }",
            "",
            "        [Description(\"Trigger biomass for above rule (kg DM /ha): \")] ",
            "        public double TriggerPastureMass { get; set; }",
            "",
            "        public int NumStock { get; set; }",
            "        // number of cows on the whole farm",
            "        public bool GrazingSeasonIsOpen { get; set; }",
            "",
            "",
            "        [EventSubscribe(\"StartOfSimulation\")]",
            "        private void OnStartOfSimulation(object sender, EventArgs e)",
            "        {",
            "",
            "            //Debugger.Break();",
            "",
            "            summary.WriteMessage(this, \"Initialising the paddock information\", MessageType.Diagnostic);",
            "",
            "            NumStock = (int)(Math.Round(StockingRate * farm.Area, 0));",
            "",
            "            if (CurrentLocation.ToLower() != \"away\")",
            "            {",
            "                BuyStock();",
            "                stock.Move(CurrentLocation);",
            "                summary.WriteMessage(this, \" The Stock have been moved to \" + CurrentLocation, MessageType.Diagnostic);",
            "            }",
            "",
            "            summary.WriteMessage(this, \"     The number of animals has been rounded to \" + NumStock + \" from \" + (StockingRate * farm.Area), MessageType.Diagnostic);",
            "            summary.WriteMessage(this, \"     The animals will begin in \" + CurrentLocation + \" which is paddock number \" + CurrentLocationNum + \" in the simulation\", MessageType.Diagnostic);",
            "            summary.WriteMessage(this, \"     The area of the whole farm is \" + farm.Area + \" ha\", MessageType.Diagnostic);",
            "",
            "        }",
            "",
            "        [EventSubscribe(\"DoManagement\")]",
            "        private void OnDoManagement(object sender, EventArgs e)",
            "        {",
            "            GrazingSeasonIsOpen = true;",
            "            if (DoNoGrazingWindow)",
            "                GrazingSeasonIsOpen = !DateUtilities.WithinDates(NoGrazeStart, clock.Today, NoGrazeEnd);",
            "",
            "            bool sellSomeStock = false;",
            "            if (!GrazingSeasonIsOpen)",
            "                sellSomeStock = true;",
            "",
            "            double harvestableBiomass = paddocks[0].Plants.Sum(plant => plant.AboveGround.Wt * 10);",
            "            if (harvestableBiomass <= PostGrazingDM)",
            "                sellSomeStock = true;",
            "",
            "            if (CurrentLocation == \"Away\")",
            "                sellSomeStock = false;",
            "",
            "            if (CurrentLocation == \"Away\" && harvestableBiomass >= PreGrazingDM && GrazingSeasonIsOpen)",
            "            {",
            "                CurrentLocation = paddocks[0].Name;",
            "                CurrentLocationNum = paddocks[0].Index;",
            "                BuyStock();",
            "                stock.Move(CurrentLocation);",
            "                summary.WriteMessage(this, \"     Buying stock \", MessageType.Diagnostic);",
            "            }",
            "",
            "            if (sellSomeStock)",
            "            {",
            "                CurrentLocation = \"Away\";",
            "                CurrentLocationNum = -1;",
            "                SellStock();",
            "                summary.WriteMessage(this, \"     Selling stock \", MessageType.Diagnostic);",
            "            }",
            "",
            "            if (CurrentLocation != \"Away\")",
            "            {",
            "                if (SupplementEveryDay > 0)",
            "                {",
            "                    double silageOnHand = supplement.Stores[2 - 1].Stored;",
            "                    if (silageOnHand < SupplementEveryDay * stock.NumberAll)",
            "                    {",
            "                        supplement.Buy(SupplementEveryDay * 900.0 * stock.NumberAll, SupplementName);  // i.e. 6 months worth",
            "                        summary.WriteMessage(this, \"SupplementEveryDay: Buying \" + SupplementName + \" of total amount : \" + (SupplementEveryDay * 90 * stock.NumberAll) + \" kg DM\", MessageType.Diagnostic);",
            "                    }",
            "                    supplement.Feed(SupplementName, SupplementEveryDay * stock.NumberAll, CurrentLocation, SupplementFirst);",
            "                }",
            "",
            "                if (SupplementOnPastureMass > 0 && harvestableBiomass <= TriggerPastureMass)",
            "                {",
            "                    double silageOnHand = supplement.Stores[2 - 1].Stored;",
            "                    if (silageOnHand < SupplementOnPastureMass * stock.NumberAll)",
            "                    {",
            "                        supplement.Buy(SupplementOnPastureMass * 90.0 * stock.NumberAll, SupplementName);  // i.e. 6 months worth",
            "                        summary.WriteMessage(this, \"SupplementOnBiomass: Buying \" + SupplementName + \" of total amount : \" + (SupplementOnPastureMass * 90 * stock.NumberAll) + \" kg DM\", MessageType.Diagnostic);",
            "                    }",
            "                    supplement.Feed(SupplementName, SupplementOnPastureMass * stock.NumberAll, CurrentLocation, SupplementFirst);",
            "                }",
            "            }",
            "        }",
            "",
            "",
            "        public void BuyStock()",
            "        {",
            "            CurrentGroupNum = stock.NoGroups + 1;",
            "            StockBuy purchase = new StockBuy();",
            "            purchase.Genotype = ReflectionUtilities.EnumToString(Genotype);",
            "            purchase.Number = NumStock;",
            "            purchase.Sex = Sex;",
            "            purchase.Age = Age;       // age in months",
            "            purchase.Weight = Weight;  // live weight in kg",
            "            purchase.UseTag = CurrentGroupNum + 1;",
            "            purchase.MatedTo = purchase.Genotype;",
            "            purchase.Pregnant = Pregnant;  // days pregnant, 0 = non pregnant, 1 = pregnant",
            "            purchase.Lactating = Lactating;  // 0 for dry, 1 for lactating",
            "            purchase.NumYoung = YoungNumber;",
            "            purchase.YoungWt = YoungWt;",
            "",
            "            stock.Buy(purchase);",
            "        }",
            "",
            "        public void SellStock()",
            "        {",
            "            int NumGroups = stock.NoGroups;",
            "",
            "            NumGroups = stock.NoGroups;",
            "            foreach (var animalGroup in stock.AnimalGroups)",
            "            {",
            "                stock.Sell(animalGroup.NoAnimals, animalGroup);",
            "            }",
            "        }",
            "    }",
            "}"
          ],
          "Parameters": [
            {
              "Key": "Genotype",
              "Value": "Friesian"
            },
            {
              "Key": "Sex",
              "Value": "Castrate"
            },
            {
              "Key": "Age",
              "Value": "36"
            },
            {
              "Key": "Weight",
              "Value": "500"
            },
            {
              "Key": "Pregnant",
              "Value": "0"
            },
            {
              "Key": "Lactating",
              "Value": "0"
            },
            {
              "Key": "YoungNumber",
              "Value": "0"
            },
            {
              "Key": "YoungWt",
              "Value": "0"
            },
            {
              "Key": "StockingRate",
              "Value": "25"
            },
            {
              "Key": "CurrentLocation",
              "Value": "Away"
            },
            {
              "Key": "PreGrazingDM",
              "Value": "2800"
            },
            {
              "Key": "PostGrazingDM",
              "Value": "1900"
            },
            {
              "Key": "DoNoGrazingWindow",
              "Value": "True"
            },
            {
              "Key": "NoGrazeStart",
              "Value": "1-apr"
            },
            {
              "Key": "NoGrazeEnd",
              "Value": "15-aug"
            },
            {
              "Key": "SupplementName",
              "Value": "silage"
            },
            {
              "Key": "SupplementFirst",
              "Value": "False"
            },
            {
              "Key": "SupplementEveryDay",
              "Value": "0"
            },
            {
              "Key": "SupplementOnPastureMass",
              "Value": "2"
            },
            {
              "Key": "TriggerPastureMass",
              "Value": "2100"
            },
            {
              "Key": "NumStock",
              "Value": "0"
            },
            {
              "Key": "GrazingSeasonIsOpen",
              "Value": "False"
            }
          ],
          "Name": "GrazeForageCrop",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Report, Models",
          "VariableNames": [
            "[Clock].Today",
            "[Stock].NumberAll as NumStock",
            "[Stock].IntakeAll.Weight as AveDMI",
            "[Stock].MEIntakeAll as AveMEIntake",
            "[Stock].WeightAll as AveBodyWeight",
            "[Stock].CondScoreAll as AveCS",
            "[Stock].MilkWtAll as AveMilkWeight",
            "[Supplement].stores[2].Stored as SupplementRemaining"
          ],
          "EventNames": [
            "[Clock].EndOfDay"
          ],
          "GroupByVariableName": null,
          "Name": "Report",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Folder, Models",
          "ShowInDocs": true,
          "GraphsPerPage": 6,
          "Name": "Stock and Biomass Plots",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
                  "Title": "Date",
                  "Position": 3,
                  "Inverted": false,
                  "CrossesAtZero": false,
                  "Minimum": null,
                  "Maximum": null,
                  "Interval": null
                },
                {
                  "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
                  "Title": null,
                  "Position": 0,
                  "Inverted": false,
                  "CrossesAtZero": false,
                  "Minimum": null,
                  "Maximum": null,
                  "Interval": null
                },
                {
                  "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
                  "Title": null,
                  "Position": 2,
                  "Inverted": false,
                  "CrossesAtZero": false,
                  "Minimum": null,
                  "Maximum": null,
                  "Interval": null
                }
              ],
              "LegendPosition": 0,
              "LegendOrientation": 0,
              "AnnotationLocation": 0,
              "DisabledSeries": [],
              "LegendOutsideGraph": false,
              "Name": "Biomass_StockNum_supps",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Series, Models",
                  "Type": 0,
                  "XAxis": 3,
                  "YAxis": 2,
                  "ColourArgb": -990142,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 1,
                  "LineThickness": 0,
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "NumStock",
                  "X2FieldName": "",
                  "Y2FieldName": "",
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "StockNum",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16736653,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "TableName": "ReportInField",
                  "XFieldName": "Date",
                  "YFieldName": "AboveGroundBiomass_kgDM/ha",
                  "X2FieldName": "",
                  "Y2FieldName": "",
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Biomass",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -1663232,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "SupplementRemaining",
                  "X2FieldName": "",
                  "Y2FieldName": "",
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "SupplementRemaining",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Zone, Models",
          "Area": 1.0,
          "Slope": 0.0,
          "AspectAngle": 0.0,
          "Altitude": 50.0,
          "Name": "Field",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Core.Folder, Models",
              "ShowInDocs": false,
              "GraphsPerPage": 6,
              "Name": "Management",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Manager, Models",
                  "CodeArray": [
                    "using Models.Interfaces;",
                    "using APSIM.Shared.Utilities;",
                    "using Models.Utilities;",
                    "using Models.Soils;",
                    "using Models.PMF;",
                    "using Models.Core;",
                    "using System;",
                    "using Models.Climate;",
                    "",
                    "namespace Models",
                    "{",
                    "    [Serializable]",
                    "    public class Script : Model",
                    "    {",
                    "        [Link] private Clock Clock;",
                    "        [Link] private Fertiliser Fertiliser;",
                    "        [Link] private Summary Summary;",
                    "        [Link] private Plant PlantainForage;",
                    "        [Link] private Soil Soil;",
                    "        private Accumulator accumulatedRain;",
                    "        [Link]",
                    "        private ISoilWater waterBalance;",
                    "",
                    "        [Separator(\"======= Sowing conditions =======\")]",
                    "        [Description(\"Start of sowing window (dd-mmm)\")] public string StartDate { get; set;}",
                    "        [Description(\"End of sowing window (dd-mmm)\")] public string EndDate { get; set;}",
                    "        [Description(\"Minimum extractable soil water for sowing (mm)\")] public double MinESW { get; set;}",
                    "        [Description(\"Accumulated rainfall required for sowing (mm)\")] public double MinRain { get; set;}",
                    "        [Description(\"Duration of rainfall accumulation (d)\")] public int RainDays { get; set;}",
                    "        [Description(\"Must sow at the end of the window?\")] public answerType mustSow { get; set; }",
                    "",
                    "        [Separator(\"======= Sowing data =======\")]",
                    "        [Description(\"Cultivar to be sown\")] public string CultivarName { get; set;}",
                    "        [Description(\"Sowing depth (mm)\")] public double SowingDepth { get; set;}        ",
                    "        [Description(\"Row spacing (mm)\")] public double RowSpacing { get; set;}    ",
                    "        [Description(\"Plant population (/m2)\")] public double Population { get; set;}    ",
                    "",
                    "        [Separator(\"======= Sowing fertiliser =======\")]",
                    "        [Description(\"Amount of fertiliser to be applied (kg/ha)\")] public double Amount { get; set;}",
                    "",
                    "           public enum answerType",
                    "        {",
                    "            /// <summary>a positive answer</summary>",
                    "            yes,",
                    "            /// <summary>a negative answer</summary>",
                    "            no",
                    "        }",
                    "",
                    "        ",
                    "        [EventSubscribe(\"StartOfSimulation\")]",
                    "        private void OnSimulationCommencing(object sender, EventArgs e)",
                    "        {",
                    "            accumulatedRain = new Accumulator(this, \"[Weather].Rain\", RainDays);",
                    "        }",
                    "        ",
                    "",
                    "        [EventSubscribe(\"DoManagement\")]",
                    "        private void OnDoManagement(object sender, EventArgs e)",
                    "        {",
                    "            accumulatedRain.Update();",
                    "            //if (allowIrrigation == answerType.yes)",
                    "",
                    "            bool doSowing = false;",
                    "            if (DateUtilities.WithinDates(StartDate,Clock.Today,EndDate) && !PlantainForage.IsAlive)",
                    "                doSowing = true;",
                    "            if ((MathUtilities.Sum(waterBalance.ESW) < MinESW) || (accumulatedRain.Sum < MinRain))",
                    "                doSowing = false;",
                    "            if ((mustSow == answerType.yes) && (DateUtilities.DatesEqual(EndDate, Clock.Today)))",
                    "                doSowing = true;",
                    "            ",
                    "            if (doSowing)",
                    "            {",
                    "               PlantainForage.Sow(population:Population, cultivar:CultivarName, depth:SowingDepth, rowSpacing:RowSpacing);",
                    "               Fertiliser.Apply(Amount: Amount, Type: Fertiliser.Types.NO3N);    ",
                    "            }",
                    "        ",
                    "        }",
                    "        ",
                    "    }",
                    "}"
                  ],
                  "Parameters": [
                    {
                      "Key": "StartDate",
                      "Value": "1-oct"
                    },
                    {
                      "Key": "EndDate",
                      "Value": "30-oct"
                    },
                    {
                      "Key": "MinESW",
                      "Value": "50"
                    },
                    {
                      "Key": "MinRain",
                      "Value": "30"
                    },
                    {
                      "Key": "RainDays",
                      "Value": "5"
                    },
                    {
                      "Key": "mustSow",
                      "Value": "yes"
                    },
                    {
                      "Key": "CultivarName",
                      "Value": "Tonic"
                    },
                    {
                      "Key": "SowingDepth",
                      "Value": "10"
                    },
                    {
                      "Key": "RowSpacing",
                      "Value": "150"
                    },
                    {
                      "Key": "Population",
                      "Value": "200"
                    },
                    {
                      "Key": "Amount",
                      "Value": "60"
                    }
                  ],
                  "Name": "SowingRule",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Operations, Models",
                  "Operation": [
                    {
                      "$type": "Models.Operation, Models",
                      "Enabled": true,
                      "Date": "2011-01-05",
                      "Action": "[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)",
                      "Line": "2011-01-05 [Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)"
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Enabled": true,
                      "Date": "2011-02-20",
                      "Action": "[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)",
                      "Line": "2011-02-20 [Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)"
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Enabled": true,
                      "Date": "2011-10-15",
                      "Action": "[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)",
                      "Line": "2011-10-15 [Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)"
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Enabled": true,
                      "Date": "2011-11-15",
                      "Action": "[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)",
                      "Line": "2011-11-15 [Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)"
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Enabled": true,
                      "Date": "2012-01-10",
                      "Action": "[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)",
                      "Line": "2012-01-10 [Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)"
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Enabled": true,
                      "Date": "2012-02-25",
                      "Action": "[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)",
                      "Line": "2012-02-25 [Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)"
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Enabled": true,
                      "Date": "2012-09-15",
                      "Action": "[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)",
                      "Line": "2012-09-15 [Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)"
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Enabled": true,
                      "Date": "2012-10-25",
                      "Action": "[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)",
                      "Line": "2012-10-25 [Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)"
                    },
                    {
                      "$type": "Models.Operation, Models",
                      "Enabled": true,
                      "Date": "2012-11-15",
                      "Action": "[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)",
                      "Line": "2012-11-15 [Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)"
                    }
                  ],
                  "Name": "FertiliserSchedule",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "CodeArray": [
                    "using Newtonsoft.Json;",
                    "using Models.PMF.Phen;",
                    "using System;",
                    "using Models.Core;",
                    "using Models.PMF;",
                    "using Models.Soils;",
                    "using System.Xml.Serialization;",
                    "using APSIM.Shared.Utilities;",
                    "using Models.Interfaces;",
                    "",
                    "        ",
                    "namespace Models",
                    "{",
                    "    [Serializable] ",
                    "    [System.Xml.Serialization.XmlInclude(typeof(Model))]",
                    "    public class Script : Model",
                    "    {",
                    "        [Link] private ISummary summary;",
                    "        [Link] private Irrigation Irrigation;",
                    "        [Link] private Clock Clock;",
                    "        [Link] private Soil Soil;",
                    "        [Link(IsOptional = true)] private Plant existingCrop;",
                    "        private DateTime StartDate;",
                    "        private DateTime EndDate;",
                    "        private double TopDUL;",
                    "        private double TopLL;",
                    "        private int nLayers;",
                    "        [Link(IsOptional = true)]",
                    "        private Phenology phenology;",
                    "        [Link]",
                    "        private IPhysical soilPhysical;",
                    "        [Link]",
                    "        private ISoilWater waterBalance;",
                    "        //Communication to other modules",
                    "       ",
                    "        //User inputs from properties tab",
                    "        [Description(\"Turn irrigation on?\")]",
                    "        public answerType allowIrrigation { get; set; }",
                    "        [Description(\"Start of irrigation season (dd-MMM)\")]",
                    "        public string seasonStart { get; set; }",
                    "        [Description(\"End of irrigation season (dd-MMM)\")]",
                    "        public string seasonEnd { get; set; }",
                    "        [Description(\"Season allocation (mm)\")]",
                    "        public double seasonsAllocation { get; set; }",
                    "        [Description(\"Deficit to trigger irrigation (% PAWC)\")]",
                    "        public double triggerDeficit { get; set; }",
                    "        [Description(\"Deficit to stop irrigaton (% PAWC)\")]",
                    "        public double targetDeficit { get; set; }",
                    "        [Description(\"Minimum days for irrigation to return\")]",
                    "        public double returndays { get; set; }",
                    "        [Description(\"Maximum irrigation application (mm/day)\")]",
                    "        public double maximumAmount { get; set; }",
                    "        [Description(\"Depth to calculate PAWC (mm)\")]",
                    "        public double depthPAWC { get; set; }",
                    "       ",
                    "        public enum answerType",
                    "        {",
                    "            /// <summary>a positive answer</summary>",
                    "            yes,",
                    "            /// <summary>a negative answer</summary>",
                    "            no",
                    "        }",
                    "",
                    "        //Class members",
                    "        [JsonIgnore] public double TopSWdeficit { get; set; }",
                    "        [JsonIgnore] public double TopSWC { get; set; }",
                    "        [JsonIgnore] public double DaysSinceIrrigation { get; set; }",
                    "        [JsonIgnore] public double AmountToApply { get; set; }",
                    "        [JsonIgnore] public double SeasonAppliedAmount { get; set; }",
                    "        ",
                    "        private bool IrrigationIsAllowed { get; set; }",
                    "        private bool SeasonIsOpen { get; set; }",
                    "        private bool CropIsActive { get; set; }",
                    "        private bool IrrigatorIsAvailable { get; set; }",
                    "        private bool SoilIsDry { get; set; }",
                    "",
                    "    ",
                    "        //Calculate static soil variables",
                    "        [EventSubscribe(\"StartOfSimulation\")]",
                    "        private void OnStartOfSimulation(object sender, EventArgs e)",
                    "        {   ",
                    "            //Set the season dates",
                    "            StartDate = DateTime.Parse(seasonStart + \"-\" + Clock.Today.Year.ToString());",
                    "            EndDate = DateTime.Parse(seasonEnd + \"-\" + Clock.Today.Year.ToString());",
                    "            ",
                    "            //Can we irrigate at all?",
                    "            IrrigationIsAllowed = false; ",
                    "            if (allowIrrigation == answerType.yes)",
                    "                IrrigationIsAllowed = true; ",
                    "",
                    "            //Calculate soil water variables",
                    "            double depthFromSurface = 0.0;",
                    "            double fracLayer = 0.0;",
                    "            nLayers = soilPhysical.Thickness.Length;",
                    "            for (int layer = 0; layer < nLayers; layer++)",
                    "            {",
                    "                fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / soilPhysical.Thickness[layer]);",
                    "                TopLL += soilPhysical.LL15mm[layer] * fracLayer;",
                    "                TopDUL += soilPhysical.DULmm[layer] * fracLayer;",
                    "                depthFromSurface += soilPhysical.Thickness[layer];",
                    "                if (depthFromSurface >= depthPAWC)",
                    "                    layer = nLayers;",
                    "            }",
                    "        }",
                    "             ",
                    "        //Determine daily requirement for irrigation",
                    "        [EventSubscribe(\"StartOfDay\")]",
                    "        private void OnStartOfDay(object sender, EventArgs e)",
                    "        {",
                    "            //Can we irrigate today?          ",
                    "            SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);",
                    "",
                    "            //Is there a crop in the ground that needs irrigation?",
                    "            CropIsActive = false;",
                    "            if ((existingCrop != null) && (existingCrop.IsAlive))",
                    "                CropIsActive = true;",
                    "            //if ((phenology.Stage >= 3.0) && (phenology.Stage < 6.0))",
                    "          ",
                    "            //Is the irrigator available?",
                    "            IrrigatorIsAvailable = false;",
                    "            DaysSinceIrrigation += 1;",
                    "            if (DaysSinceIrrigation >= returndays)",
                    "                IrrigatorIsAvailable = true;",
                    "          ",
                    "            //Is the soil dry enough to require irrigation?",
                    "            SoilIsDry = false;",
                    "            double depthFromSurface = 0.0;",
                    "            double fracLayer = 0.0;",
                    "            TopSWC = 0.0;",
                    "            for (int layer = 0; layer < nLayers; layer++)",
                    "            {",
                    "                fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / soilPhysical.Thickness[layer]);",
                    "                TopSWC += waterBalance.SWmm[layer] * fracLayer;",
                    "                depthFromSurface += soilPhysical.Thickness[layer];",
                    "                if (depthFromSurface >= depthPAWC)",
                    "                    layer = nLayers;",
                    "            }",
                    "            ",
                    "            TopSWdeficit = TopSWC - TopDUL;",
                    "            if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)",
                    "                SoilIsDry = true;",
                    "                ",
                    "            //Are all the conditions ratifying irrigation",
                    "            if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)",
                    "            {",
                    "                //Lets bloody well irrigate then!!!!",
                    "                AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;",
                    "                //AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));",
                    "                AmountToApply = maximumAmount;",
                    "                Irrigation.Apply(AmountToApply);",
                    "                DaysSinceIrrigation = 0;",
                    "                SeasonAppliedAmount += AmountToApply;",
                    "            }",
                    "        }",
                    "        ",
                    "        ///Checks whether theDate is between iniDate and endDate (non-year specific)",
                    "        private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)",
                    "        {",
                    "            bool result = false;",
                    "            if (iniDate.DayOfYear < endDate.DayOfYear)",
                    "            {",
                    "                // period is within one year, ex: summer in the northern hemisphere",
                    "                if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))",
                    "                    result = true;",
                    "            }",
                    "            else",
                    "            {",
                    "                // period goes over the end of the year, ex: summer in the southern hemisphere",
                    "                if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))",
                    "                    result = true;",
                    "            }",
                    "            ",
                    "            return result;",
                    "        }",
                    "    }",
                    "}"
                  ],
                  "Parameters": [
                    {
                      "Key": "allowIrrigation",
                      "Value": "yes"
                    },
                    {
                      "Key": "seasonStart",
                      "Value": "15-Sep"
                    },
                    {
                      "Key": "seasonEnd",
                      "Value": "30-Apr"
                    },
                    {
                      "Key": "seasonsAllocation",
                      "Value": "10000"
                    },
                    {
                      "Key": "triggerDeficit",
                      "Value": "75"
                    },
                    {
                      "Key": "targetDeficit",
                      "Value": "95"
                    },
                    {
                      "Key": "returndays",
                      "Value": "3"
                    },
                    {
                      "Key": "maximumAmount",
                      "Value": "15"
                    },
                    {
                      "Key": "depthPAWC",
                      "Value": "500"
                    }
                  ],
                  "Name": "AutomaticIrrigation",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.MicroClimate, Models",
              "a_interception": 0.0,
              "b_interception": 1.0,
              "c_interception": 0.0,
              "d_interception": 0.0,
              "SoilHeatFluxFraction": 0.4,
              "MinimumHeightDiffForNewLayer": 0.0,
              "NightInterceptionFraction": 0.5,
              "ReferenceHeight": 2.0,
              "Name": "MicroClimate",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Irrigation, Models",
              "Name": "Irrigation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Fertiliser, Models",
              "Name": "Fertiliser",
              "ResourceName": "Fertiliser",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Surface.SurfaceOrganicMatter, Models",
              "SurfOM": [],
              "Canopies": [],
              "InitialResidueName": "grass",
              "InitialResidueType": "grass",
              "InitialResidueMass": 500.0,
              "InitialStandingFraction": 0.0,
              "InitialCPR": 0.0,
              "InitialCNR": 40.0,
              "Name": "SurfaceOrganicMatter",
              "ResourceName": "SurfaceOrganicMatter",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Soils.Soil, Models",
              "RecordNumber": 0,
              "ASCOrder": null,
              "ASCSubOrder": null,
              "SoilType": "Generic medium texture",
              "LocalName": null,
              "Site": null,
              "NearestTown": null,
              "Region": "Canterbury",
              "State": null,
              "Country": "New Zealand",
              "NaturalVegetation": null,
              "ApsoilNumber": null,
              "Latitude": 0.0,
              "Longitude": 0.0,
              "LocationAccuracy": null,
              "YearOfSampling": null,
              "DataSource": null,
              "Comments": null,
              "Name": "Soil",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Soils.Chemical, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    200.0,
                    250.0,
                    250.0,
                    500.0
                  ],
                  "PH": [
                    6.0,
                    6.0,
                    6.0,
                    6.0,
                    6.0,
                    6.0
                  ],
                  "PHUnits": 0,
                  "EC": null,
                  "ESP": null,
                  "CEC": null,
                  "ECMetadata": null,
                  "CLMetadata": null,
                  "ESPMetadata": null,
                  "PHMetadata": null,
                  "Name": "Chemical",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Physical, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    200.0,
                    250.0,
                    250.0,
                    500.0
                  ],
                  "ParticleSizeClay": [
                    20.0,
                    20.0,
                    20.0,
                    15.0,
                    10.0,
                    10.0
                  ],
                  "ParticleSizeSand": null,
                  "ParticleSizeSilt": null,
                  "Rocks": null,
                  "Texture": null,
                  "BD": [
                    1.3,
                    1.4,
                    1.5,
                    1.6,
                    1.45,
                    1.35
                  ],
                  "AirDry": [
                    0.05,
                    0.17,
                    0.19,
                    0.17,
                    0.1,
                    0.1
                  ],
                  "LL15": [
                    0.15,
                    0.17,
                    0.19,
                    0.17,
                    0.1,
                    0.1
                  ],
                  "DUL": [
                    0.36,
                    0.34,
                    0.33,
                    0.3,
                    0.2,
                    0.2
                  ],
                  "SAT": [
                    0.45,
                    0.42,
                    0.38,
                    0.36,
                    0.38,
                    0.39
                  ],
                  "KS": [
                    4500.0,
                    2500.0,
                    200.0,
                    1500.0,
                    5000.0,
                    10000.0
                  ],
                  "BDMetadata": null,
                  "AirDryMetadata": null,
                  "LL15Metadata": null,
                  "DULMetadata": null,
                  "SATMetadata": null,
                  "KSMetadata": null,
                  "RocksMetadata": null,
                  "TextureMetadata": null,
                  "ParticleSizeSandMetadata": null,
                  "ParticleSizeSiltMetadata": null,
                  "ParticleSizeClayMetadata": null,
                  "Name": "Physical",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.15,
                        0.17,
                        0.19,
                        0.17,
                        0.1,
                        0.1
                      ],
                      "KL": [
                        0.1,
                        0.08,
                        0.05,
                        0.02,
                        0.01,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        0.5
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "PlantainForageSoil",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.WaterModel.WaterBalance, Models",
                  "SummerDate": "21-Sep",
                  "SummerU": 6.0,
                  "SummerCona": 3.5,
                  "WinterDate": "23-Mar",
                  "WinterU": 6.0,
                  "WinterCona": 2.5,
                  "DiffusConst": 88.0,
                  "DiffusSlope": 35.0,
                  "Salb": 0.2,
                  "CN2Bare": 0.7,
                  "CNRed": 20.0,
                  "CNCov": 0.8,
                  "DischargeWidth": "NaN",
                  "CatchmentArea": "NaN",
                  "PSIDul": -100.0,
                  "Thickness": [
                    150.0,
                    150.0,
                    200.0,
                    250.0,
                    250.0,
                    500.0
                  ],
                  "SWCON": [
                    0.45,
                    0.35,
                    0.1,
                    0.15,
                    0.3,
                    0.2
                  ],
                  "KLAT": null,
                  "Name": "SoilWater",
                  "ResourceName": "WaterBalance",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Nutrients.Nutrient, Models",
                  "Name": "Nutrient",
                  "ResourceName": "Nutrient",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Organic, Models",
                  "FOMCNRatio": 40.0,
                  "Thickness": [
                    150.0,
                    150.0,
                    200.0,
                    250.0,
                    250.0,
                    500.0
                  ],
                  "Carbon": [
                    2.5,
                    1.25,
                    0.5,
                    0.2,
                    0.15,
                    0.1
                  ],
                  "CarbonUnits": 0,
                  "SoilCNRatio": [
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0
                  ],
                  "FBiom": [
                    0.04,
                    0.025,
                    0.015,
                    0.01,
                    0.008,
                    0.008
                  ],
                  "FInert": [
                    0.4,
                    0.6,
                    0.8,
                    0.9,
                    0.95,
                    0.98
                  ],
                  "FOM": [
                    358.61744427798754,
                    265.6703369754438,
                    178.0841525116833,
                    108.01349850727648,
                    65.51349850748795,
                    24.10106922012079
                  ],
                  "CarbonMetadata": null,
                  "FOMMetadata": null,
                  "Name": "Organic",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Water, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    200.0,
                    250.0,
                    250.0,
                    500.0
                  ],
                  "InitialValues": [
                    0.33899999999999997,
                    0.32300000000000006,
                    0.31600000000000006,
                    0.287,
                    0.19,
                    0.19
                  ],
                  "InitialPAWmm": 173.25,
                  "RelativeTo": "LL15",
                  "FilledFromTop": false,
                  "Name": "Water",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.CERESSoilTemperature, Models",
                  "Name": "Temperature",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    200.0,
                    250.0,
                    250.0,
                    500.0
                  ],
                  "InitialValues": [
                    9.433962264150944,
                    6.592929950119278,
                    3.6820973075106305,
                    2.1917808219178077,
                    2.1917808219178077,
                    0.7407407407407409
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "Name": "NO3",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    200.0,
                    250.0,
                    250.0,
                    500.0
                  ],
                  "InitialValues": [
                    0.37735849056603776,
                    0.24072869225764482,
                    0.11360415682569673,
                    0.05479452054794518,
                    0.05479452054794524,
                    0.02962962962962962
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "Name": "NH4",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    200.0,
                    250.0,
                    250.0,
                    500.0
                  ],
                  "InitialValues": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 1,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "Name": "Urea",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "Name": "PlantainForage",
              "ResourceName": "PlantainForage",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Report, Models",
              "VariableNames": [
                "[Clock].Today as Date",
                "",
                "[PlantainForage].Population",
                "[PlantainForage].PlantType",
                "[PlantainForage].Leaf.RadiationIntercepted as InterceptedRadiation",
                "",
                "[Irrigation].IrrigationApplied as IrrigationApplied",
                "[Soil].SoilWater.Es as Evaporation",
                "[PlantainForage].Leaf.Transpiration as Transpiration",
                "[Soil].SoilWater.Drainage as Drainage",
                "[Soil].SoilWater.Runoff as Runoff",
                "sum([Soil].Water.MM) as TotalSWC",
                "sum([Soil].Physical.DULmm) as TotalDUL",
                "sum([Soil].Physical.LL15mm) as TotalLL15",
                "[Fertiliser].NitrogenApplied as FertiliserN",
                "sum([Soil].Nutrient.DenitrifiedN) as DenitrifiedN",
                "([Soil].SoilWater.LeachNH4 + [Soil].SoilWater.LeachNO3) as LeachedN",
                "(-1*[PlantainForage].Root.NUptake) as UptakeN",
                "(sum([Soil].Urea.kgha) + sum([Soil].NH4.kgha) + sum([Soil].NO3.kgha)) as SoilNContent",
                "",
                "[PlantainForage].Total.Wt",
                "[PlantainForage].AboveGround.Wt",
                "[PlantainForage].BelowGround.Wt",
                "[PlantainForage].Leaf.Live.NConc",
                "[PlantainForage].Leaf.LAI",
                "[PlantainForage].Leaf.Live.Wt",
                "[PlantainForage].Stem.Live.Wt",
                "[PlantainForage].Inflorescence.Live.Wt",
                "[PlantainForage].Taproot.Live.Wt",
                "[PlantainForage].Root.Live.Wt",
                "",
                "([PlantainForage].AboveGround.Wt * 10.0) as AboveGroundBiomass_kgDM/ha"
              ],
              "EventNames": [
                "[Clock].DoReport"
              ],
              "GroupByVariableName": null,
              "Name": "ReportInField",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Date",
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "Minimum": null,
              "Maximum": null,
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "Minimum": null,
              "Maximum": null,
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Biomass",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 1,
              "LineThickness": 0,
              "TableName": "ReportInField",
              "XFieldName": "Date",
              "YFieldName": "PlantainForage.Total.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Total",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "ReportInField",
              "XFieldName": "Date",
              "YFieldName": "PlantainForage.AboveGround.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "AboveGround",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -2793984,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "ReportInField",
              "XFieldName": "Date",
              "YFieldName": "PlantainForage.BelowGround.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "BelowGround",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Date",
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "Minimum": null,
              "Maximum": null,
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "Minimum": null,
              "Maximum": null,
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "PlantParts",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "ReportInField",
              "XFieldName": "Date",
              "YFieldName": "PlantainForage.Leaf.Live.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Leaf",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 2,
              "LineThickness": 0,
              "TableName": "ReportInField",
              "XFieldName": "Date",
              "YFieldName": "PlantainForage.Stem.Live.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Stem",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -11094807,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "ReportInField",
              "XFieldName": "Date",
              "YFieldName": "PlantainForage.Inflorescence.Live.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Inflorescence",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -990142,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "ReportInField",
              "XFieldName": "Date",
              "YFieldName": "PlantainForage.Taproot.Live.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Taproot",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -2793984,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "ReportInField",
              "XFieldName": "Date",
              "YFieldName": "PlantainForage.Root.Live.Wt",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Date",
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "Minimum": null,
              "Maximum": null,
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "Minimum": null,
              "Maximum": null,
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Water",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16747854,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "ReportInField",
              "XFieldName": "Date",
              "YFieldName": "TotalSWC",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "WaterContent",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "ReportInField",
              "XFieldName": "Date",
              "YFieldName": "TotalDUL",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "DUL",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -2793984,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "ReportInField",
              "XFieldName": "Date",
              "YFieldName": "TotalLL15",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "LL15",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "Enabled": true,
      "ReadOnly": false
    }
  ],
  "Enabled": true,
  "ReadOnly": false
}