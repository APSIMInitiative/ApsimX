{
  "$type": "Models.Core.Simulations, Models",
  "ExplorerWidth": 382,
  "Version": 151,
  "Name": "Simulations",
  "Children": [
    {
      "$type": "Models.Storage.DataStore, Models",
      "useFirebird": false,
      "CustomFileName": null,
      "Name": "DataStore",
      "Children": [],
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Core.Simulation, Models",
      "IsRunning": false,
      "Descriptors": null,
      "Name": "Canola Grazing Example",
      "Children": [
        {
          "$type": "Models.Clock, Models",
          "Start": "1992-01-01T00:00:00",
          "End": "1995-12-31T00:00:00",
          "Name": "Clock",
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Summary, Models",
          "Verbosity": 100,
          "Name": "SummaryFile",
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Climate.Weather, Models",
          "ConstantsFile": null,
          "FileName": "%root%/Examples/WeatherFiles/WaggaWagga.met",
          "ExcelWorkSheetName": "",
          "Name": "Weather",
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
          "Name": "Soil Arbitrator",
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.GrazPlan.Stock, Models",
          "randFactory": {
            "$type": "StdUnits.MyRandom, Models"
          },
          "RandSeed": 9999,
          "StockModel": null,
          "Name": "Stock",
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.ForageDigestibility.Forages, Models",
          "Parameters": [
            {
              "$type": "Models.ForageDigestibility.ForageMaterialParameters, Models",
              "Name": "SurfaceOrganicMatter.Residue",
              "IsLive": true,
              "DigestibilityString": "0",
              "FractionConsumable": 0.0,
              "MinimumAmount": 0.0,
              "UseDigestibilityFromModel": false
            },
            {
              "$type": "Models.ForageDigestibility.ForageMaterialParameters, Models",
              "Name": "SurfaceOrganicMatter.Residue",
              "IsLive": false,
              "DigestibilityString": "0",
              "FractionConsumable": 0.0,
              "MinimumAmount": 0.0,
              "UseDigestibilityFromModel": false
            },
            {
              "$type": "Models.ForageDigestibility.ForageMaterialParameters, Models",
              "Name": "Canola.Root",
              "IsLive": true,
              "DigestibilityString": ".7",
              "FractionConsumable": 0.0,
              "MinimumAmount": 0.0,
              "UseDigestibilityFromModel": false
            },
            {
              "$type": "Models.ForageDigestibility.ForageMaterialParameters, Models",
              "Name": "Canola.Root",
              "IsLive": false,
              "DigestibilityString": ".3",
              "FractionConsumable": 0.0,
              "MinimumAmount": 0.0,
              "UseDigestibilityFromModel": false
            },
            {
              "$type": "Models.ForageDigestibility.ForageMaterialParameters, Models",
              "Name": "Canola.Leaf",
              "IsLive": true,
              "DigestibilityString": ".7",
              "FractionConsumable": 1.0,
              "MinimumAmount": 0.0,
              "UseDigestibilityFromModel": false
            },
            {
              "$type": "Models.ForageDigestibility.ForageMaterialParameters, Models",
              "Name": "Canola.Leaf",
              "IsLive": false,
              "DigestibilityString": ".3",
              "FractionConsumable": 1.0,
              "MinimumAmount": 0.0,
              "UseDigestibilityFromModel": false
            },
            {
              "$type": "Models.ForageDigestibility.ForageMaterialParameters, Models",
              "Name": "Canola.Grain",
              "IsLive": true,
              "DigestibilityString": "0.7",
              "FractionConsumable": 0.0,
              "MinimumAmount": 0.0,
              "UseDigestibilityFromModel": false
            },
            {
              "$type": "Models.ForageDigestibility.ForageMaterialParameters, Models",
              "Name": "Canola.Grain",
              "IsLive": false,
              "DigestibilityString": "0.3",
              "FractionConsumable": 0.0,
              "MinimumAmount": 0.0,
              "UseDigestibilityFromModel": false
            },
            {
              "$type": "Models.ForageDigestibility.ForageMaterialParameters, Models",
              "Name": "Canola.Stem",
              "IsLive": true,
              "DigestibilityString": "0.7",
              "FractionConsumable": 1.0,
              "MinimumAmount": 0.0,
              "UseDigestibilityFromModel": false
            },
            {
              "$type": "Models.ForageDigestibility.ForageMaterialParameters, Models",
              "Name": "Canola.Stem",
              "IsLive": false,
              "DigestibilityString": "0.3",
              "FractionConsumable": 1.0,
              "MinimumAmount": 0.0,
              "UseDigestibilityFromModel": false
            },
            {
              "$type": "Models.ForageDigestibility.ForageMaterialParameters, Models",
              "Name": "Canola.Shell",
              "IsLive": true,
              "DigestibilityString": "0.7",
              "FractionConsumable": 0.0,
              "MinimumAmount": 0.0,
              "UseDigestibilityFromModel": false
            },
            {
              "$type": "Models.ForageDigestibility.ForageMaterialParameters, Models",
              "Name": "Canola.Shell",
              "IsLive": false,
              "DigestibilityString": "0.3",
              "FractionConsumable": 0.0,
              "MinimumAmount": 0.0,
              "UseDigestibilityFromModel": false
            }
          ],
          "Name": "Forages",
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.GrazPlan.Supplement, Models",
          "SpoilageTime": 0.0,
          "Stores": [
            {
              "$type": "Models.GrazPlan.StoreType, Models",
              "Name": "fodder",
              "Stored": 0.0,
              "IsRoughage": true,
              "DMContent": 0.85,
              "DMD": 0.0,
              "MEContent": 0.0,
              "CPConc": 0.0,
              "ProtDg": 0.0,
              "PConc": 0.0,
              "SConc": 0.0,
              "EEConc": 0.0,
              "ADIP2CP": 0.0,
              "AshAlk": 0.0,
              "MaxPassage": 0.0
            }
          ],
          "PaddockList": [],
          "Name": "Supplement",
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Manager, Models",
          "Code": "using Models.PMF.Interfaces;\r\nusing System.Diagnostics;\r\nusing Models.AgPasture;\r\nusing System.Linq;\r\nusing System.Collections.Generic;\r\nusing System.Collections;\r\nusing Models.Soils;\r\nusing Models.PMF;\r\nusing System.Xml.Serialization;\r\nusing APSIM.Shared.Utilities;\r\nusing Models.GrazPlan;\r\nusing Models.Utilities;\r\nusing Models.Core;\r\nusing Models;\r\nusing Models.ForageDigestibility;\r\nusing System;\r\n\r\nnamespace Models\r\n{\r\n\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        [Link] Clock clock;\r\n        [Link] Stock stock;\r\n        [Link] Supplement supplement;\r\n        [Link] List<Zone> paddocks;\r\n        [Link] ISummary summary;\r\n        [Link] Simulation farm;\r\n        [Link] Forages forages;\r\n\r\n        private int CurrentGroupNum = 1;    // animal group number\r\n        private int CurrentLocationNum { get; set; }\r\n\r\n        [Separator(\"Stock type info, the same type of stock are brought onto the paddock at each grazing\")]\r\n\r\n        [Description(\"Stock: genotype (e.g. Small Merino, Angus, Friesian):\")] \r\n        [Display(Values=\"GetGenotypes\")]\r\n        public string Genotype { get; set; }\r\n\r\n        [Description(\"Stock: sex (Female, Male, Castrate):\")] \r\n        public ReproductiveType Sex { get; set; }\r\n\r\n        [Description(\"Stock: age (months):\")] \r\n        public double Age { get; set; }\r\n\r\n        [Description(\"Stock: weight (kg liveweight /head):\")] \r\n        public double Weight { get; set; }\r\n\r\n        [Description(\"Stock: fertility status (0 if non-pregnant or days since conception):\")] \r\n        public int Pregnant { get; set; }\r\n\r\n        [Description(\"Stock: lactation status (0 if non-lactating or days since parturition):\")]\r\n        public int Lactating { get; set; }\r\n\r\n        [Description(\"Stock: number of unweaned young:\")]\r\n        public int YoungNumber { get; set; }\r\n\r\n        [Description(\"Stock: weight of unweaned young:\")] \r\n        public double YoungWt { get; set; }\r\n\r\n        [Separator(\"Grazing event information\")]\r\n\r\n        [Description(\"Paddock stocking rate (head/ha): \")] \r\n        public double StockingRate { get; set; }\r\n\r\n        [Description(\"Initial location of the cows (give either the paddock name or 'Away'): \")] \r\n        public string CurrentLocation { get; set; }\r\n\r\n        [Description(\"Standing biomass at which to bring the stock into the simulation (kg DM/ha): \")] \r\n        public double PreGrazingDM { get; set; }\r\n\r\n        [Description(\"Standing biomass at which to exit  stock from the simulation (kg DM/ha): \")] \r\n        public double PostGrazingDM { get; set; }\r\n\r\n        [Description(\"Don't move the stock onto the crop unless there is approx. X days of grazable forage available: \")] \r\n        public int MinGrazingDays { get; set; }\r\n\r\n        [Description(\"Implement a no-grazing window? (tick for yes): \")] \r\n        public bool DoNoGrazingWindow { get; set; }\r\n\r\n        [Description(\"Start of the no-grazing window (dd-MMM)\")] \r\n        public string NoGrazeStart { get; set; }\r\n\r\n        [Description(\"End of the no-grazing window (dd-MMM)\")] \r\n        public string NoGrazeEnd { get; set; }\r\n\r\n        [Separator(\"Supplementary feeding\")]\r\n\r\n        [Description(\"Name of the supplement to feed: \")] \r\n        public string SupplementName { get; set; }\r\n\r\n        [Description(\"Feed the supplement first (i.e. before the new forage is available to the stock)?: \")] \r\n        public bool SupplementFirst { get; set; }\r\n\r\n        [Description(\"Amount of supplementary feeding offered every day (kg DM /head /day): \")] \r\n        public double SupplementEveryDay { get; set; }\r\n\r\n        [Description(\"Additional amount of supplement offered when available biomass is low (kg DM /head /day): \")] \r\n        public double SupplementOnPastureMass { get; set; }\r\n\r\n        [Description(\"Trigger biomass for above rule (kg DM /ha): \")] \r\n        public double TriggerPastureMass { get; set; }\r\n\r\n        public int NumStock { get; set; }\r\n        public bool GrazingSeasonIsOpen { get; set; } // number of cows on the whole farm\r\n        public double HarvestableBiomass { get; set; }\r\n\r\n        // Return a list of genotypes to the properties tab.\r\n        public string[] GetGenotypes()\r\n        {\r\n            if (stock != null)\r\n                return stock.Genotypes.Names.ToArray();\r\n            return null;\r\n        }\r\n\r\n        [EventSubscribe(\"StartOfSimulation\")]\r\n        private void OnStartOfSimulation(object sender, EventArgs e)\r\n        {\r\n\r\n            //Debugger.Break();\r\n\r\n            summary.WriteMessage(this, \"Initialising the paddock information\", MessageType.Diagnostic);\r\n\r\n            NumStock = (int)(Math.Round(StockingRate * farm.Area, 0));\r\n\r\n            if ((CurrentLocation.ToLower() != \"away\") && (NumStock > 0))\r\n            {\r\n                BuyStock();\r\n                stock.Move(CurrentLocation);\r\n                summary.WriteMessage(this, \" The Stock have been moved to \" + CurrentLocation, MessageType.Diagnostic);\r\n            }\r\n\r\n            summary.WriteMessage(this, \"     The number of animals has been rounded to \" + NumStock + \" from \" + (StockingRate * farm.Area), MessageType.Diagnostic);\r\n            summary.WriteMessage(this, \"     The animals will begin in \" + CurrentLocation + \" which is paddock number \" + CurrentLocationNum + \" in the simulation\", MessageType.Diagnostic);\r\n            summary.WriteMessage(this, \"     The area of the whole farm is \" + farm.Area + \" ha\", MessageType.Diagnostic);\r\n\r\n        }\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            GrazingSeasonIsOpen = true;\r\n            if (DoNoGrazingWindow)\r\n                GrazingSeasonIsOpen = !DateUtilities.WithinDates(NoGrazeStart, clock.Today, NoGrazeEnd);\r\n\r\n            bool sellSomeStock = false;\r\n            if (!GrazingSeasonIsOpen)\r\n                sellSomeStock = true;\r\n\r\n            // Calculate forage mass in the paddock\r\n            HarvestableBiomass = 0.0;\r\n            foreach (var forage in forages.ModelsWithDigestibleBiomass)\r\n                foreach (var forageMaterial in forage.Material)\r\n                    HarvestableBiomass += forageMaterial.Consumable.Wt;\r\n            HarvestableBiomass *= 10;  // Convert to kg/ha\r\n\r\n            if (HarvestableBiomass <= PostGrazingDM)\r\n                sellSomeStock = true;\r\n\r\n            if (CurrentLocation == \"Away\")\r\n                sellSomeStock = false;\r\n\r\n            double minFodder = 0.03 * MinGrazingDays * NumStock * Weight; // The 0.03 is the propostion of body mass that the stock might eat\r\n            if (CurrentLocation == \"Away\" && NumStock > 0 && (HarvestableBiomass >= PreGrazingDM) && HarvestableBiomass >= (PostGrazingDM + minFodder) && GrazingSeasonIsOpen)\r\n            {\r\n                CurrentLocation = paddocks[0].Name;\r\n                CurrentLocationNum = paddocks[0].Index;\r\n                BuyStock();\r\n                stock.Move(CurrentLocation);\r\n                summary.WriteMessage(this, \"     Buying stock \", MessageType.Diagnostic);\r\n            }\r\n\r\n            if (sellSomeStock)\r\n            {\r\n                CurrentLocation = \"Away\";\r\n                CurrentLocationNum = -1;\r\n                SellStock();\r\n                summary.WriteMessage(this, \"     Selling stock \", MessageType.Diagnostic);\r\n            }\r\n\r\n            if (CurrentLocation != \"Away\")\r\n            {\r\n                if (SupplementEveryDay > 0)\r\n                {\r\n                    double silageOnHand = supplement.Stores[2 - 1].Stored;\r\n                    if (silageOnHand < SupplementEveryDay * stock.NumberAll)\r\n                    {\r\n                        supplement.Buy(SupplementEveryDay * 30.0 * stock.NumberAll, SupplementName);  // i.e. 1 months worth\r\n                        summary.WriteMessage(this, \"SupplementEveryDay: Buying \" + SupplementName + \" of total amount : \" + (SupplementEveryDay * 90 * stock.NumberAll) + \" kg DM\", MessageType.Diagnostic);\r\n                    }\r\n                    supplement.Feed(SupplementName, SupplementEveryDay * stock.NumberAll, CurrentLocation, SupplementFirst);\r\n                }\r\n\r\n                if (SupplementOnPastureMass > 0 && HarvestableBiomass <= TriggerPastureMass)\r\n                {\r\n                    double silageOnHand = supplement.Stores[2 - 1].Stored;\r\n                    if (silageOnHand < SupplementOnPastureMass * stock.NumberAll)\r\n                    {\r\n                        supplement.Buy(SupplementOnPastureMass * 30.0 * stock.NumberAll, SupplementName);  // i.e. 1 months worth\r\n                        summary.WriteMessage(this, \"SupplementOnBiomass: Buying \" + SupplementName + \" of total amount : \" + (SupplementOnPastureMass * 90 * stock.NumberAll) + \" kg DM\", MessageType.Diagnostic);\r\n                    }\r\n                    supplement.Feed(SupplementName, SupplementOnPastureMass * stock.NumberAll, CurrentLocation, SupplementFirst);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        public void BuyStock()\r\n        {\r\n            CurrentGroupNum = stock.NoGroups + 1;\r\n            StockBuy purchase = new StockBuy();\r\n            purchase.Genotype = Genotype;\r\n            purchase.Number = NumStock;\r\n            purchase.Sex = Sex;\r\n            purchase.Age = Age;       // age in months\r\n            purchase.Weight = Weight;  // live weight in kg\r\n            purchase.UseTag = CurrentGroupNum + 1;\r\n            purchase.MatedTo = purchase.Genotype;\r\n            purchase.Pregnant = Pregnant;  // days pregnant, 0 = non pregnant, 1 = pregnant\r\n            purchase.Lactating = Lactating;  // 0 for dry, 1 for lactating\r\n            purchase.NumYoung = YoungNumber;\r\n            purchase.YoungWt = YoungWt;\r\n\r\n            stock.Buy(purchase);\r\n        }\r\n\r\n        public void SellStock()\r\n        {\r\n            int NumGroups = stock.NoGroups;\r\n\r\n            NumGroups = stock.NoGroups;\r\n            for (int gg = 1; gg <= NumGroups; gg++)\r\n            {\r\n                stock.Sell(stock.Number[gg - 1]);\r\n            }\r\n        }\r\n    }\r\n}\r\n",
          "Parameters": [
            {
              "Key": "Genotype",
              "Value": "Large Merino"
            },
            {
              "Key": "Sex",
              "Value": "Male"
            },
            {
              "Key": "Age",
              "Value": "12"
            },
            {
              "Key": "Weight",
              "Value": "100"
            },
            {
              "Key": "Pregnant",
              "Value": "0"
            },
            {
              "Key": "Lactating",
              "Value": "0"
            },
            {
              "Key": "YoungNumber",
              "Value": "0"
            },
            {
              "Key": "YoungWt",
              "Value": "0"
            },
            {
              "Key": "StockingRate",
              "Value": "50"
            },
            {
              "Key": "CurrentLocation",
              "Value": "Away"
            },
            {
              "Key": "PreGrazingDM",
              "Value": "1000"
            },
            {
              "Key": "PostGrazingDM",
              "Value": "500"
            },
            {
              "Key": "MinGrazingDays",
              "Value": "0"
            },
            {
              "Key": "DoNoGrazingWindow",
              "Value": "True"
            },
            {
              "Key": "NoGrazeStart",
              "Value": "1-jun"
            },
            {
              "Key": "NoGrazeEnd",
              "Value": "20-may"
            },
            {
              "Key": "SupplementName",
              "Value": ""
            },
            {
              "Key": "SupplementFirst",
              "Value": "False"
            },
            {
              "Key": "SupplementEveryDay",
              "Value": "0"
            },
            {
              "Key": "SupplementOnPastureMass",
              "Value": "0"
            },
            {
              "Key": "TriggerPastureMass",
              "Value": "2100"
            }
          ],
          "Name": "GrazeForageCrop",
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.MicroClimate, Models",
          "a_interception": 0.0,
          "b_interception": 0.0,
          "c_interception": 0.0,
          "d_interception": 0.0,
          "SoilHeatFluxFraction": 0.4,
          "MinimumHeightDiffForNewLayer": 0.0,
          "NightInterceptionFraction": 0.5,
          "ReferenceHeight": 2.0,
          "Name": "MicroClimate",
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Zone, Models",
          "Area": 1.0,
          "Slope": 0.0,
          "AspectAngle": 0.0,
          "Altitude": 50.0,
          "Name": "Zone",
          "Children": [
            {
              "$type": "Models.Report, Models",
              "VariableNames": [
                "[Clock].Today",
                "[Canola].AboveGround.Wt",
                "[Canola].Grain.Wt",
                "[Stock].Paddock",
                "[Stock].NumberAll",
                "[Stock].WeightAll",
                "[Stock].IntakeAll.Weight"
              ],
              "EventNames": [
                "[Clock].DoReport"
              ],
              "GroupByVariableName": null,
              "Name": "Report",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Soils.Soil, Models",
              "RecordNumber": 0,
              "ASCOrder": null,
              "ASCSubOrder": null,
              "SoilType": "sand",
              "LocalName": null,
              "Site": "CSU",
              "NearestTown": "Wagga Wagga",
              "Region": "Southern NSW",
              "State": "NSW",
              "Country": null,
              "NaturalVegetation": null,
              "ApsoilNumber": null,
              "Latitude": 0.0,
              "Longitude": 0.0,
              "LocationAccuracy": null,
              "YearOfSampling": "0",
              "DataSource": "Kirsten Verburg",
              "Comments": "Greenethorpe",
              "Name": "Soil",
              "Children": [
                {
                  "$type": "Models.Soils.Chemical, Models",
                  "Thickness": [
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0
                  ],
                  "NO3N": [
                    20.1,
                    6.88,
                    2.8,
                    2.8,
                    1.32,
                    1.32,
                    0.9,
                    0.9,
                    0.58,
                    0.58,
                    0.46,
                    0.46,
                    0.47,
                    0.47,
                    0.56,
                    0.56,
                    0.79,
                    0.79,
                    0.95,
                    0.95
                  ],
                  "NH4N": [
                    1.65,
                    0.21,
                    0.14,
                    0.14,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.12,
                    0.12,
                    0.13,
                    0.13,
                    0.14,
                    0.14,
                    0.14,
                    0.14,
                    0.09,
                    0.09,
                    0.14,
                    0.14
                  ],
                  "PH": [
                    5.8,
                    5.9,
                    6.6,
                    6.8,
                    7.0,
                    7.1,
                    7.2,
                    7.3,
                    7.4,
                    7.4,
                    7.6,
                    7.8,
                    8.0,
                    8.2,
                    8.3,
                    8.4,
                    8.4,
                    8.5,
                    8.5,
                    8.5
                  ],
                  "CL": null,
                  "EC": null,
                  "ESP": null,
                  "LabileP": null,
                  "UnavailableP": null,
                  "ECMetadata": null,
                  "CLMetadata": null,
                  "ESPMetadata": null,
                  "PHMetadata": null,
                  "Name": "Chemical",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.InitialWater, Models",
                  "PercentMethod": 1,
                  "FractionFull": 0.1,
                  "DepthWetSoil": "NaN",
                  "RelativeTo": "CanolaSoil",
                  "Name": "InitialWater",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Physical, Models",
                  "Thickness": [
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0
                  ],
                  "ParticleSizeClay": null,
                  "ParticleSizeSand": null,
                  "ParticleSizeSilt": null,
                  "Rocks": null,
                  "Texture": null,
                  "BD": [
                    1.48,
                    1.49,
                    1.41,
                    1.37,
                    1.41,
                    1.41,
                    1.52,
                    1.52,
                    1.62,
                    1.62,
                    1.66,
                    1.66,
                    1.62,
                    1.62,
                    1.62,
                    1.62,
                    1.62,
                    1.62,
                    1.62,
                    1.62
                  ],
                  "AirDry": [
                    0.03,
                    0.12,
                    0.14,
                    0.16,
                    0.18,
                    0.18,
                    0.21,
                    0.21,
                    0.24,
                    0.24,
                    0.26,
                    0.26,
                    0.27,
                    0.27,
                    0.28,
                    0.28,
                    0.28,
                    0.28,
                    0.28,
                    0.28
                  ],
                  "LL15": [
                    0.11,
                    0.12,
                    0.14,
                    0.16,
                    0.18,
                    0.18,
                    0.21,
                    0.21,
                    0.24,
                    0.24,
                    0.26,
                    0.26,
                    0.27,
                    0.27,
                    0.28,
                    0.28,
                    0.28,
                    0.28,
                    0.28,
                    0.28
                  ],
                  "DUL": [
                    0.28,
                    0.27,
                    0.25,
                    0.28,
                    0.28,
                    0.28,
                    0.3,
                    0.3,
                    0.31,
                    0.31,
                    0.31,
                    0.31,
                    0.32,
                    0.32,
                    0.33,
                    0.33,
                    0.33,
                    0.33,
                    0.33,
                    0.33
                  ],
                  "SAT": [
                    0.34,
                    0.34,
                    0.32,
                    0.35,
                    0.35,
                    0.35,
                    0.34,
                    0.34,
                    0.33,
                    0.33,
                    0.34,
                    0.34,
                    0.34,
                    0.34,
                    0.36,
                    0.36,
                    0.36,
                    0.36,
                    0.36,
                    0.36
                  ],
                  "KS": null,
                  "BDMetadata": null,
                  "AirDryMetadata": null,
                  "LL15Metadata": null,
                  "DULMetadata": null,
                  "SATMetadata": null,
                  "KSMetadata": null,
                  "RocksMetadata": null,
                  "TextureMetadata": null,
                  "ParticleSizeSandMetadata": null,
                  "ParticleSizeSiltMetadata": null,
                  "ParticleSizeClayMetadata": null,
                  "Name": "Physical",
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.11,
                        0.12,
                        0.14,
                        0.16,
                        0.18,
                        0.18,
                        0.21,
                        0.21,
                        0.24,
                        0.24,
                        0.26,
                        0.26,
                        0.27,
                        0.27,
                        0.28,
                        0.28,
                        0.28,
                        0.28,
                        0.28,
                        0.28
                      ],
                      "KL": [
                        0.06,
                        0.05,
                        0.05,
                        0.04,
                        0.04,
                        0.04,
                        0.04,
                        0.03,
                        0.03,
                        0.03,
                        0.03,
                        0.02,
                        0.02,
                        0.02,
                        0.01,
                        0.01,
                        0.01,
                        0.01,
                        0.0,
                        0.0
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        0.8,
                        0.4,
                        0.0,
                        0.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "CanolaSoil",
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.WaterModel.WaterBalance, Models",
                  "SummerDate": "1-nov",
                  "SummerU": 6.0,
                  "SummerCona": 3.5,
                  "WinterDate": "1-apr",
                  "WinterU": 2.0,
                  "WinterCona": 2.0,
                  "DiffusConst": 44.0,
                  "DiffusSlope": 16.0,
                  "Salb": 0.13,
                  "CN2Bare": 72.0,
                  "CNRed": 20.0,
                  "CNCov": 0.8,
                  "DischargeWidth": 5.0,
                  "CatchmentArea": 10.0,
                  "Thickness": [
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0
                  ],
                  "SWCON": [
                    0.8,
                    0.8,
                    0.8,
                    0.8,
                    0.8,
                    0.8,
                    0.8,
                    0.8,
                    0.8,
                    0.8,
                    0.8,
                    0.8,
                    0.8,
                    0.8,
                    0.8,
                    0.8,
                    0.6,
                    0.6,
                    0.6,
                    0.6
                  ],
                  "KLAT": null,
                  "ResourceName": "WaterBalance",
                  "Name": "SoilWater",
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Organic, Models",
                  "FOMCNRatio": 60.0,
                  "Thickness": [
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0
                  ],
                  "Carbon": [
                    0.83,
                    0.35,
                    0.33,
                    0.22,
                    0.22,
                    0.22,
                    0.19,
                    0.17,
                    0.15,
                    0.12,
                    0.11,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.08,
                    0.06,
                    0.05,
                    0.04
                  ],
                  "SoilCNRatio": [
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0
                  ],
                  "FBiom": [
                    0.06,
                    0.05,
                    0.04,
                    0.03,
                    0.02,
                    0.01,
                    0.01,
                    0.01,
                    0.01,
                    0.01,
                    0.01,
                    0.01,
                    0.01,
                    0.01,
                    0.01,
                    0.01,
                    0.01,
                    0.01,
                    0.01,
                    0.01
                  ],
                  "FInert": [
                    0.01,
                    0.01,
                    0.31,
                    0.35,
                    0.4,
                    0.45,
                    0.5,
                    0.6,
                    0.7,
                    0.8,
                    0.9,
                    0.99,
                    0.99,
                    0.99,
                    0.99,
                    0.99,
                    0.99,
                    0.99,
                    0.99,
                    0.99
                  ],
                  "FOM": [
                    439.771,
                    378.5144,
                    325.7904,
                    280.4104,
                    241.3514,
                    207.7331,
                    178.7975,
                    153.8925,
                    132.4565,
                    114.0063,
                    98.1262,
                    84.458,
                    72.6937,
                    62.568,
                    53.8528,
                    46.3515,
                    39.8951,
                    34.3381,
                    29.555,
                    25.4383
                  ],
                  "CarbonMetadata": null,
                  "FOMMetadata": null,
                  "Name": "Organic",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.CERESSoilTemperature, Models",
                  "Name": "Temperature",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Nutrients.Nutrient, Models",
                  "ResourceName": "Nutrient",
                  "Name": "Nutrient",
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Sample, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    200.0
                  ],
                  "NO3": [
                    45.88,
                    20.3,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "NH4": [
                    7.4,
                    5.8,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "LabileP": null,
                  "UnavailableP": null,
                  "SW": [
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN",
                    "NaN"
                  ],
                  "OC": null,
                  "EC": null,
                  "CL": null,
                  "ESP": null,
                  "PH": null,
                  "SWUnits": 0,
                  "OCUnits": 0,
                  "PHUnits": 0,
                  "Name": "Soil sample",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Fertiliser, Models",
              "ResourceName": "Fertiliser",
              "Name": "Fertiliser",
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Surface.SurfaceOrganicMatter, Models",
              "InitialResidueName": "maize_stubble",
              "InitialResidueType": "maize",
              "InitialResidueMass": 0.0,
              "InitialStandingFraction": 0.0,
              "InitialCPR": 400.0,
              "InitialCNR": 60.0,
              "ResourceName": "SurfaceOrganicMatter",
              "Name": "SurfaceOrganicMatter",
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "ResourceName": "Canola",
              "Name": "Canola",
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using APSIM.Shared.Utilities;\r\nusing Models.Utilities;\r\nusing Models.Soils;\r\nusing Models.PMF;\r\nusing Models.Core;\r\nusing System;\r\nusing System.Linq;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        [Link] Clock Clock;\r\n        [Link] Fertiliser Fertiliser;\r\n        [Link] Summary Summary;\r\n        [Link] Soil Soil;\r\n        \r\n        [Description(\"Crop\")]\r\n        public IPlant Crop { get; set; }\r\n\r\n        [Description(\"Sowing date (d-mmm)\")]\r\n        public string SowDate { get; set; }\r\n\r\n        [Display(Type = DisplayType.CultivarName)]\r\n        [Description(\"Cultivar to be sown\")]\r\n        public string CultivarName { get; set; }\r\n\r\n        [Description(\"Sowing depth (mm)\")]\r\n        public double SowingDepth { get; set; }\r\n\r\n        [Description(\"Row spacing (mm)\")]\r\n        public double RowSpacing { get; set; }\r\n\r\n        [Description(\"Plant population (/m2)\")]\r\n        public double Population { get; set; }\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            if (DateUtilities.WithinDates(SowDate, Clock.Today, SowDate))\r\n            {\r\n                Crop.Sow(population: Population, cultivar: CultivarName, depth: SowingDepth, rowSpacing: RowSpacing);    \r\n            }\r\n        }\r\n    }\r\n}\r\n",
              "Parameters": [
                {
                  "Key": "Crop",
                  "Value": "[Canola]"
                },
                {
                  "Key": "SowDate",
                  "Value": "15-Mar"
                },
                {
                  "Key": "CultivarName",
                  "Value": "GenericWinter"
                },
                {
                  "Key": "SowingDepth",
                  "Value": "25"
                },
                {
                  "Key": "RowSpacing",
                  "Value": "180"
                },
                {
                  "Key": "Population",
                  "Value": "45"
                }
              ],
              "Name": "Sow on a fixed date",
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using Models.PMF;\r\nusing Models.Core;\r\nusing System;\r\nusing System.Linq;\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        [Link] Clock Clock;\r\n        [Link] Fertiliser Fertiliser;\r\n        \r\n        [Description(\"Crop to be fertilised\")]\r\n        public IPlant Crop { get; set; }\r\n\r\n        [Description(\"Type of fertiliser to apply? \")] \r\n        public Fertiliser.Types FertiliserType { get; set; }\r\n    \r\n        [Description(\"Amount of fertiliser to be applied (kg/ha)\")]\r\n        public double Amount { get; set; }\r\n        \r\n        [EventSubscribe(\"Sowing\")]\r\n        private void OnSowing(object sender, EventArgs e)\r\n        {\r\n            Model crop = sender as Model;\r\n            if (Crop != null && crop.Name.ToLower() == (Crop as IModel).Name.ToLower())\r\n                Fertiliser.Apply(Amount: Amount, Type: FertiliserType);\r\n        }\r\n    }\r\n}\r\n",
              "Parameters": [
                {
                  "Key": "Crop",
                  "Value": "[Canola]"
                },
                {
                  "Key": "FertiliserType",
                  "Value": "NH4N"
                },
                {
                  "Key": "Amount",
                  "Value": "31"
                }
              ],
              "Name": "Fertilise at sowing",
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using APSIM.Shared.Utilities;\r\nusing Models.Utilities;\r\nusing Models.Soils;\r\nusing Models.PMF;\r\nusing Models.Core;\r\nusing System;\r\nusing System.Linq;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    public class Script : Model\r\n    {\r\n        [Description(\"Crop\")]\r\n        public IPlant Crop { get; set; }\r\n        \r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            if (Crop.IsReadyForHarvesting)\r\n            {\r\n                Crop.Harvest();\r\n                Crop.EndCrop();\r\n            }\r\n        }\r\n    }\r\n}\r\n       \r\n",
              "Parameters": [
                {
                  "Key": "Crop",
                  "Value": "[Canola]"
                }
              ],
              "Name": "Harvesting",
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
                  "Title": null,
                  "Position": 3,
                  "Inverted": false,
                  "CrossesAtZero": false,
                  "Minimum": null,
                  "Maximum": null,
                  "Interval": null
                },
                {
                  "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
                  "Title": null,
                  "Position": 0,
                  "Inverted": false,
                  "CrossesAtZero": false,
                  "Minimum": null,
                  "Maximum": null,
                  "Interval": null
                },
                {
                  "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
                  "Title": "Stock.IntakeAll.Weight",
                  "Position": 2,
                  "Inverted": false,
                  "CrossesAtZero": false,
                  "Minimum": null,
                  "Maximum": null,
                  "Interval": null
                }
              ],
              "LegendPosition": 0,
              "LegendOrientation": 0,
              "AnnotationLocation": 0,
              "DisabledSeries": [],
              "LegendOutsideGraph": false,
              "Name": "Timeseries Graph",
              "Children": [
                {
                  "$type": "Models.Series, Models",
                  "Type": 0,
                  "XAxis": 3,
                  "YAxis": 2,
                  "ColourArgb": -2793984,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Stock.IntakeAll.Weight",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": false,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Grazing",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16736653,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Canola.AboveGround.Wt",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": false,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "AboveGroundWt",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -1663232,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Canola.Grain.Wt",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": false,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "GrainWt",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "Enabled": true,
      "ReadOnly": false
    }
  ],
  "Enabled": true,
  "ReadOnly": false
}