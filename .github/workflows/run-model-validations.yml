name: Model validations
permissions:
  contents: read # access to check out code and install dependencies

env:
  ALL_APSIM_FILES: ""
  PAYLOAD_FOLDER_PATH: "/home/runner/work/ApsimX/ApsimX/Payload/"

# Determines when this workflow is triggered. 
on:
  pull_request_target:
    branches: [ master ]

jobs:
  run-model-validations:
    name: run-model-validations
    # if: github.repository_owner == 'APSIMInitiative'
    runs-on: ubuntu-latest
    env:
      ALL_APSIM_FILES: ""
    steps:
    
      - name: Set git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Checkout PR branch code
        uses: actions/checkout@v4
        with:
          repository: ${{github.event.pull_request.head.repo.full_name}}
          ref: ${{github.event.pull_request.head.ref}}
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Merge APSIMInitiative/master into PR branch (ensure PR branch up to date)
        id: merge_upstream
        run: |
          git remote add upstream https://github.com/APSIMInitiative/ApsimX.git || git remote set-url upstream https://github.com/APSIMInitiative/ApsimX.git
          git fetch upstream master
          git merge --no-ff upstream/master || { echo "Merge conflict detected. Aborting merge and exiting."; git merge --abort; exit 1; }
        continue-on-error: true  # Allow job to continue if merge fails

      - name: Merge failure
        if: steps.merge_upstream.outcome == 'failure'
        run: |
          echo "::error::Merge failed as PR branch is either not up to date or another issue has occurred."
          exit 1
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Make github workflow bash scripts executable
        run: chmod +x ./.github/workflows/scripts/*.sh

      # - name: Get PR number from GitHub API
      #   id: fetch_pr_number
      #   env:
      #     REPOSITORY: ${{ github.repository }}
      #     SHA: ${{ github.sha }}
      #     TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: ./.github/workflows/scripts/get-pr-number.sh

      - name: Extract password protected datasets
        id: extract_password_protected_datasets
        env:
          SOYBEAN_PASSWORD: ${{ secrets.SOYBEAN_PASSWORD }}
          CORNSOY_PASSWORD: ${{ secrets.CORNSOY_PASSWORD }}
          SWIM_PASSWORD: ${{ secrets.SWIM_PASSWORD }}
        run: ./.github/workflows/scripts/extract-protected-datasets.sh

      - name: Build Models and APSIM.Workflow projects
        run: |
          cd Models && dotnet publish -f net8.0 -o ../app && cd ../APSIM.Workflow && dotnet publish -f net8.0 -o ../app

      - name: Split Wheat Validation
        run: dotnet ./bin/Release/net8.0/APSIM.Workflow.dll -d ./Tests/Validation/Wheat/Wheat.apsimx -s ./Tests/Validation/Wheat/split.json

      - name: Split FAR Validation
        run: dotnet ./bin/Release/net8.0/APSIM.Workflow.dll -d ./Tests/Validation/Wheat/FAR/FAR.apsimx -s ./Tests/Validation/Wheat/FAR/split.json

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker for apsimplusr
        id: meta_apsimplusr
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: apsiminitiative/apsimplusr
          flavor: latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr

      # - name: Build and push apsimplusr Docker image
      #   id: apsimplusr_push
      #   uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      #   with:
      #     context: .
      #     file: ./Dockerfiles/models_r_dockerfile
      #     target: base
      #     push: true
      #     tags: ${{ steps.meta_apsimplusr.outputs.tags }}
      #     labels: ${{ steps.meta_apsimplusr.outputs.labels }}       

      - name: Create Azure Validation Jobs
        id: submit_azure_jobs
        env:
          PAYLOAD_FOLDER_PATH: ${{ env.PAYLOAD_FOLDER_PATH }}
          AZURE_ENV_CONTENTS: ${{ secrets.AZURE_ENV_CONTENTS }}
          DOCKER_METADATA_OUTPUT_VERSION: ${{ steps.meta_apsimplusr.outputs.tags }}
          INCOMING_COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
          PR_AUTHOR: ${{ github.actor }}
        run: ./.github/workflows/scripts/create-azure-jobs.sh 

      - name: Print workflow submit success summary markdown
        if: success()
        run: |
          echo "## Workflow submit success summary :tada:" >> $GITHUB_STEP_SUMMARY
          echo 'All jobs submitted to Azure successfully!' >> $GITHUB_STEP_SUMMARY
          echo 'Run logs and predicted/observed metrics for this validation run can be viewed at [POStats2](https://postats2.apsim.info/${{ steps.submit_azure_jobs.outputs.pr_number }})' >> $GITHUB_STEP_SUMMARY
          echo 'Note: The validation results may take some time to appear.' >> $GITHUB_STEP_SUMMARY

      - name: Print workflow submit failure summary markdown
        if: failure()
        run: |
          echo "## Workflow submit failure summary :sob:" >> $GITHUB_STEP_SUMMARY
          echo "The workflow failed to submit all jobs to Azure." >> $GITHUB_STEP_SUMMARY
          echo "Reason: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "Please check the logs for more information: [POStats2](https://postats2.apsim.info/${{ steps.submit_azure_jobs.outputs.pr_number }}) " >> $GITHUB_STEP_SUMMARY
