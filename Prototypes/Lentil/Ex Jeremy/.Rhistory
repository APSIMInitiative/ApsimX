# remap from NMM to apsim. Outside -> NA
reframe(Clock.Today = unique(Clock.Today),
TOS = unique(TOS),
WaterTrt = unique(WaterTrt),
Lentil.SowingData.Cultivar = unique(Lentil.SowingData.Cultivar),
LayerDepthApsim_cm = c(10, 20, 50, 80, 110, 140, 170, 200),
LayerNo = seq(1,8),
Vol_mm.mm = approx(x=LayerDepth_cm, y=Vol_mm.mm, xout=LayerDepthApsim_cm, rule=1)$y) %>%
rename(LayerDepth_cm = "LayerDepthApsim_cm") %>%
mutate(SimulationName = paste0("Greenethorpe19", TOS, "Cv", Lentil.SowingData.Cultivar, WaterTrt),
layerName = paste0("Soil.SoilWater.SW(", LayerNo, ")")) %>%
# wide form
select(-c(TOS, WaterTrt, Lentil.SowingData.Cultivar, LayerDepth_cm, LayerNo)) %>%
tidyr::pivot_wider (names_from=layerName, values_from=Vol_mm.mm)
newDates <- as.Date(setdiff(df0$Clock.Today, tsData$Clock.Today[tsData$site =="Greenethorpe"]))
newDates
unique(df0$Clock.Today)
unique(tsData$Clock.Today)
newObsns <- df0[match(newDates, df0$Clock.Today),]
match(newDates, df0$Clock.Today)
??match
newDates <- as.Date(setdiff(df0$Clock.Today, tsData$Clock.Today[tsData$site =="Greenethorpe"]))
newObsns <- df0[match(newDates, df0$Clock.Today),]
tsData1 <- tsData %>%
rows_patch(df0[! newDates %in% df0$Clock.Today, ], by= c("SimulationName", "Clock.Today"))
tsData1 <- tsData %>%
rows_patch(df0[! df0$Clock.Today %in% newDates , ], by= c("SimulationName", "Clock.Today"))
tsData1 <- tsData %>%
rows_patch(df0[! df0$Clock.Today %in% newDates , ], by= c("SimulationName", "Clock.Today")) %>%
merge(newObsns)
View(tsData1)
tsData1 <- tsData %>%
tsData1 <- tsData %>%
rows_patch(df0[! df0$Clock.Today %in% newDates , ], by= c("SimulationName", "Clock.Today")) %>%
merge(newObsns, by=c("SimulationName", "Clock.Today"))
tsData1 <- tsData %>%
rows_patch(df0[! df0$Clock.Today %in% newDates , ], by= c("SimulationName", "Clock.Today"))
tsData1 <- tsData %>%
rows_patch(df0[! df0$Clock.Today %in% newDates , ], by= c("SimulationName", "Clock.Today")) %>%
bind_rows(newObsns, by=c("SimulationName", "Clock.Today"))
tsData1 <- tsData %>%
rows_patch(df0[! df0$Clock.Today %in% newDates , ], by= c("SimulationName", "Clock.Today")) %>%
bind_rows(newObsns)
View(tsData)
View(tsData1)
View(tsData1)
View(tsData)
View(tsData1)
# add greenethorpe soil observations
df0 <- read.xlsx("SWGreenethorpe2019.xlsx", 1) %>%
filter(MixedCropType == "Lentil") %>%
mutate(Clock.Today = as.Date(SampleDate,  origin="1899-12-30"), # Weird...
TOS = paste0("TOS", TOS),
Lentil.SowingData.Cultivar = gsub("_2", "2", gsub("PBA_", "", Variety)),
WaterTrt = ifelse(WaterTrt== "Irrigated", "Irr1", "Irr0")) %>%
# convert plot level to treatment means,
group_by(TOS, WaterTrt, Lentil.SowingData.Cultivar, Clock.Today, LayerDepth_cm) %>%
summarise(Vol_mm.mm = mean(Vol_mm.mm)) %>%
group_by(TOS, WaterTrt, Lentil.SowingData.Cultivar, Clock.Today) %>%
arrange(TOS, WaterTrt, Lentil.SowingData.Cultivar, Clock.Today, LayerDepth_cm) %>%
# remap from NMM to apsim. Outside -> NA
reframe(Clock.Today = unique(Clock.Today),
TOS = unique(TOS),
WaterTrt = unique(WaterTrt),
Lentil.SowingData.Cultivar = unique(Lentil.SowingData.Cultivar),
LayerDepthApsim_cm = c(10, 20, 50, 80, 110, 140, 170, 200),
LayerNo = seq(1,8),
Vol_mm.mm = approx(x=LayerDepth_cm, y=Vol_mm.mm, xout=LayerDepthApsim_cm, rule=1)$y) %>%
rename(LayerDepth_cm = "LayerDepthApsim_cm") %>%
mutate(SimulationName = paste0("Greenethorpe19", TOS, "Cv", Lentil.SowingData.Cultivar, WaterTrt),
layerName = paste0("Soil.SoilWater.SW(", LayerNo, ")")) %>%
# wide form
#select(-c(TOS, WaterTrt, Lentil.SowingData.Cultivar, LayerDepth_cm, LayerNo)) %>%
select(-c(LayerDepth_cm, LayerNo)) %>%
tidyr::pivot_wider (names_from=layerName, values_from=Vol_mm.mm)
# Split into two frames for replace / append
newDates <- as.Date(setdiff(df0$Clock.Today, tsData$Clock.Today[tsData$site =="Greenethorpe"]))
View(tsData1)
names(tsData1)
newDates
newObsns <- df0[match(newDates, df0$Clock.Today),] %>%
mutate( DAS = NA,
Season="2019",
site= "Greenethorpe")
for(i in 1:nrow(newObsns)) {
newObsns$DAS[i] <- newObsns$Clock.Today[i] - defaults[[ paste0("Greenethorpe,", newObsns$TOS[i]) ]]
}
View(newObsns)
View(df0)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
tsData <- tsData %>%
rows_patch(df0[! df0$Clock.Today %in% newDates , ] %>% select(-c(WaterTrt)),
by= c("SimulationName", "Clock.Today")) %>%
bind_rows(newObsns)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(tidyverse)
library(xml2)
library(readxl)
library(plotly)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyverse)
library(xml2)
library(readxl)
library(plotly)
setwd("~/work/Projects/GRDC NaPA 2022/onedrive/")
setwd("~/work/Projects/GRDC NaPA 2022/onedrive/Documents/General/2022/DetailedTrials/Qld_Gatton_Chickpea/")
setwd("~/work/Projects/GRDC NaPA 2022/onedrive/Documents/General/2022/DetailedTrials/Qld_Gatton_Chickpea/Nmm Soil calibrations/NMM_Data22/")
Rdat1<-read_xlsx('NMM_all.xlsx')
colnames(Rdat1)<-str_replace_all(colnames(Rdat1),'[A-Za-z0-9]+::','')
colnames(Rdat1)<-str_replace_all(colnames(Rdat1),'[A-Za-z0-9]+:','')
aa<-Rdat1 %>%
group_by(PlotNo,SampleDate) %>%
filter(PlotNo==1) %>%
ggplot()+
geom_line(aes(y=Ratio,x=LayerNo,group=factor(SampleDate),colour=factor(SampleDate)))+
coord_flip()+
theme_bw()+
facet_wrap(TOS~waterTreat)+
#scale_y_continuous(position = "right",limits = c(0,0.6)) +
scale_x_reverse()+
labs(y="Volumetric Soil Water (mm/mm)",x="Depth (cm)")+
coord_flip()
ggplotly(
aa
)
aa
aa<-Rdat1 %>%
group_by(PlotNo,SampleDate) %>%
#filter(PlotNo==1) %>%
ggplot()+
geom_line(aes(y=Ratio,x=LayerNo,group=factor(SampleDate),colour=factor(SampleDate)))+
coord_flip()+
theme_bw()+
facet_wrap(TOS~waterTreat)+
#scale_y_continuous(position = "right",limits = c(0,0.6)) +
scale_x_reverse()+
labs(y="Volumetric Soil Water (mm/mm)",x="Depth (cm)")+
coord_flip()
ggplotly(
aa
)
aa<-Rdat1 %>%
group_by(PlotNo,SampleDate) %>%
filter(PlotNo==1) %>%
ggplot()+
geom_histogram(aes(y=Ratio,group=LayerDepth_cm))+
theme_minimal()+
labs(y="Volumetric Soil Water (mm/mm)",x="Depth (cm)")+
ggplotly(
aa
)
aa<-Rdat1 %>%
group_by(PlotNo,SampleDate) %>%
filter(PlotNo==1) %>%
ggplot()+
geom_histogram(aes(y=Ratio,group=LayerDepth_cm))+
theme_minimal()+
labs(y="Volumetric Soil Water (mm/mm)",x="Depth (cm)")
ggplotly( aa )
ggplotly(
Rdat1 %>%
#group_by(PlotNo,SampleDate) %>%
filter(PlotNo==1) %>%
ggplot()+
geom_histogram(aes(y=Ratio,group=LayerDepth_cm))+
theme_minimal()+
labs(y="Volumetric Soil Water (mm/mm)",x="Depth (cm)"))
ggplotly(
Rdat1 %>%
#group_by(PlotNo,SampleDate) %>%
#filter(PlotNo==1) %>%
ggplot()+
geom_histogram(aes(y=Ratio,group=LayerDepth_cm))+
theme_minimal()+
labs(y="Ratio (mm/mm)",x="Depth (cm)"))
ggplotly(
Rdat1 %>%
#group_by(PlotNo,SampleDate) %>%
#filter(PlotNo==1) %>%
ggplot()+
geom_histogram(aes(x=Ratio))+
theme_minimal()+
facet_wrap(LayerDepth_cm) +
labs(y="Ratio (mm/mm)",x="Depth (cm)"))
ggplotly(
Rdat1 %>%
#group_by(PlotNo,SampleDate) %>%
#filter(PlotNo==1) %>%
ggplot()+
geom_histogram(aes(x=Ratio))+
theme_minimal()+
facet_wrap(~LayerDepth_cm) +
labs(y="Ratio (mm/mm)",x="Depth (cm)"))
ggplotly(
Rdat1 %>%
#group_by(PlotNo,SampleDate) %>%
filter(!is.na(Ratio)) %>%
ggplot()+
geom_histogram(aes(x=Ratio), bins=20)+
theme_minimal()+
facet_wrap(~LayerDepth_cm) +
labs(y="Ratio (mm/mm)",x="Depth (cm)"))
list.files()
setwd("..")
list.files()
setwd("NMM_Data22/NMMCalibration/")
list.files()
df <- read_xlsx("NMM_Sorghum_2021_2022-1.xlsx")
ggplot(df) + geom_histogram(aes(x=`NMM counts`)) + facet_wrap(~Depth)
ggplot(df) + geom_histogram(aes(x=`VMWxm3cm-3`)) + facet_wrap(~Depth)
ggplot(df) + geom_histogram(aes(x=`VMWcm3cm-3`)) + facet_wrap(~Depth)
ggplot(df) + geom_histogram(aes(x=`NMM counts`)) + facet_wrap(~Depth)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
??rows_patch
tsData1 <- tsData %>%
rows_patch(df0[! df0$Clock.Today %in% newDates , ] %>% select(-c(WaterTrt)),
by= c("SimulationName", "Clock.Today"), unmatched = "error") %>%
bind_rows(newObsns)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
# Assemble observed daily data
# Timeseries in second sheet
tsData <- read_xlsx("./Observed for daniel.xlsx", sheet=2) %>%
mutate(SimulationName = gsub("Dryland", "Irr0", SimulationName, fixed = T),
SimulationName = gsub("Irrigated", "Irr1", SimulationName, fixed = T),
SimulationName = gsub("DR_2001Dooen", "Dooen01TOS1CvDigger", SimulationName, fixed = T),
Season = ifelse(grepl("Dooen", SimulationName), "01", "19"))
names(tsData)
# Assemble observed daily data
# Timeseries in second sheet
tsData <- read_xlsx("./Observed for daniel.xlsx", sheet=2) %>%
mutate(SimulationName = gsub("Dryland", "Irr0", SimulationName, fixed = T),
SimulationName = gsub("Irrigated", "Irr1", SimulationName, fixed = T),
SimulationName = gsub("DR_2001Dooen", "Dooen01TOS1CvDigger", SimulationName, fixed = T),
Season = ifelse(grepl("Dooen", SimulationName), "01", "19")) %>%
rename_with(~ gsub("Soil.SoilWater.", "", .x, fixed = TRUE))
names(tsData)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
names(tsData)
unique(tsData$Irrigation)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
unique(tsData$SimulationName)
unique(harv$SimulationName)
unique(read.xlsx("SWGreenethorpe2019.xlsx", 1)$WaterTrt)
# Assemble observed daily data
# Timeseries in second sheet
tsData <- read_xlsx("./Observed for daniel.xlsx", sheet=2) %>%
mutate(SimulationName = gsub("DR_2001Dooen", "Dooen01TOS1CvDigger", SimulationName, fixed = T),
Season = ifelse(grepl("Dooen", SimulationName), "01", "19")) %>%
rename_with(~ gsub("Soil.SoilWater.", "", .x, fixed = TRUE))
tsData$site <- sapply(tsData$SimulationName, getSite)
tsData$TOS <- sapply(tsData$SimulationName, getTOS)
IRR <- sapply(tsData$SimulationName, getIRR)
unique(IRR)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
names(tsData)
names(df0)
setdiff(df0$SimulationName, tsData$SimulationName
)
unique(tsData$SimulationName)
# Assemble observed daily data
# Timeseries in second sheet
tsData <- read_xlsx("./Observed for daniel.xlsx", sheet=2) %>%
mutate(SimulationName = gsub("DR_2001Dooen", "Dooen01TOS1CvDigger", SimulationName, fixed = T),
SimulationName = gsub("Irr0", "Dryland", fixed=T),
SimulationName = gsub("Irr1", "Irrigated", fixed=T),
Season = ifelse(grepl("Dooen", SimulationName), "01", "19")) %>%
rename_with(~ gsub("Soil.SoilWater.", "", .x, fixed = TRUE))
# Assemble observed daily data
# Timeseries in second sheet
tsData <- read_xlsx("./Observed for daniel.xlsx", sheet=2) %>%
mutate(SimulationName = gsub("DR_2001Dooen", "Dooen01TOS1CvDigger", SimulationName, fixed = T),
SimulationName = gsub("Irr0", "Dryland", SimulationName, fixed=T),
SimulationName = gsub("Irr1", "Irrigated", SimulationName, fixed=T),
Season = ifelse(grepl("Dooen", SimulationName), "01", "19")) %>%
rename_with(~ gsub("Soil.SoilWater.", "", .x, fixed = TRUE))
tsData$site <- sapply(tsData$SimulationName, getSite)
tsData$TOS <- sapply(tsData$SimulationName, getTOS)
IRR <- sapply(tsData$SimulationName, getIRR)
tsData$Irrigation <- ifelse(IRR == "", tsData$Irrigation,
ifelse(IRR == "Irr0", "Dryland",
ifelse(IRR == "Irr1", "Irrigated", NA)))
tsData$Pop <- sapply(tsData$SimulationName, getPop)
tsData <- tsData %>%
select_if( function(x) !all(is.na(x)) ) %>%
mutate(Clock.Today = as.Date(Clock.Today)) %>%
rename(`Lentil.Shell.Wt` = PodWt,
`Lentil.Shell.WtError` = PodWtError,
PodNumber_perplant = `Pod n/pl`)
# add greenethorpe soil observations
df0 <- read.xlsx("SWGreenethorpe2019.xlsx", 1) %>%
filter(MixedCropType == "Lentil") %>%
mutate(Clock.Today = as.Date(SampleDate,  origin="1899-12-30"), # Weird...
TOS = paste0("TOS", TOS),
Lentil.SowingData.Cultivar = gsub("_2", "2", gsub("PBA_", "", Variety))) %>%
# convert plot level to treatment means,
group_by(TOS, WaterTrt, Lentil.SowingData.Cultivar, Clock.Today, LayerDepth_cm) %>%
summarise(Vol_mm.mm = mean(Vol_mm.mm)) %>%
group_by(TOS, WaterTrt, Lentil.SowingData.Cultivar, Clock.Today) %>%
arrange(TOS, WaterTrt, Lentil.SowingData.Cultivar, Clock.Today, LayerDepth_cm) %>%
# remap from NMM to apsim. Outside -> NA
reframe(Clock.Today = unique(Clock.Today),
TOS = unique(TOS),
WaterTrt = unique(WaterTrt),
Lentil.SowingData.Cultivar = unique(Lentil.SowingData.Cultivar),
LayerDepthApsim_cm = c(10, 20, 50, 80, 110, 140, 170, 200),
LayerNo = seq(1,8),
Vol_mm.mm = approx(x=LayerDepth_cm, y=Vol_mm.mm, xout=LayerDepthApsim_cm, rule=1)$y) %>%
rename(LayerDepth_cm = "LayerDepthApsim_cm") %>%
mutate(SimulationName = paste0("Greenethorpe19", TOS, "Cv", Lentil.SowingData.Cultivar, WaterTrt),
layerName = paste0("SW(", LayerNo, ")")) %>%
# wide form
select(-c(LayerDepth_cm, LayerNo)) %>%
tidyr::pivot_wider (names_from=layerName, values_from=Vol_mm.mm)
# Split into two frames for replace / append
newDates <- as.Date(setdiff(df0$Clock.Today, tsData$Clock.Today[tsData$site =="Greenethorpe"]))
newObsns <- df0[match(newDates, df0$Clock.Today),] %>%
mutate( DAS = NA,
Season="2019",
site= "Greenethorpe")
for(i in 1:nrow(newObsns)) {
newObsns$DAS[i] <- newObsns$Clock.Today[i] - defaults[[ paste0("Greenethorpe,", newObsns$TOS[i]) ]]
}
tsData <- tsData %>%
rows_patch(df0[! df0$Clock.Today %in% newDates , ] %>% select(-c(WaterTrt)),
by= c("SimulationName", "Clock.Today"), unmatched = "error") %>%
bind_rows(newObsns)
unique(harvestData$SimulationName)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
unique(harvestData$SimulationName)
unique(tsData$SimulationName)
# Assemble observed daily data
# Timeseries in second sheet
tsData <- read_xlsx("./Observed for daniel.xlsx", sheet=2) %>%
mutate(SimulationName = gsub("DR_2001Dooen", "Dooen01TOS1CvDigger", SimulationName, fixed = T),
SimulationName = gsub("Irr0", "IrrDryland", SimulationName, fixed=T),
SimulationName = gsub("Irr1", "IrrIrrigated", SimulationName, fixed=T),
SimulationName = gsub("TOS", "TOSTOS", SimulationName, fixed=T),
SimulationName = gsub("Cv", "Cultivar", SimulationName, fixed=T),
Season = ifelse(grepl("Dooen", SimulationName), "01", "19")) %>%
rename_with(~ gsub("Soil.SoilWater.", "", .x, fixed = TRUE))
tsData$site <- sapply(tsData$SimulationName, getSite)
unique(tsData$site)
tsData$TOS <- sapply(tsData$SimulationName, getTOS)
unique(tsData$TOS)
# Assemble observed daily data
# Timeseries in second sheet
tsData <- read_xlsx("./Observed for daniel.xlsx", sheet=2) %>%
mutate(SimulationName = gsub("DR_2001Dooen", "Dooen01TOS1CvDigger", SimulationName, fixed = T),
#         SimulationName = gsub("Irr0", "IrrDryland", SimulationName, fixed=T),
#         SimulationName = gsub("Irr1", "IrrIrrigated", SimulationName, fixed=T),
#         SimulationName = gsub("TOS", "TOSTOS", SimulationName, fixed=T),
#         SimulationName = gsub("Cv", "Cultivar", SimulationName, fixed=T),
Season = ifelse(grepl("Dooen", SimulationName), "01", "19")) %>%
rename_with(~ gsub("Soil.SoilWater.", "", .x, fixed = TRUE))
names(tsData)
# Assemble observed daily data
# Timeseries in second sheet
tsData <- read_xlsx("./Observed for daniel.xlsx", sheet=2) %>%
mutate(SimulationName = gsub("DR_2001Dooen", "Dooen01TOS1CvDigger", SimulationName, fixed = T),
#         SimulationName = gsub("Irr0", "IrrDryland", SimulationName, fixed=T),
#         SimulationName = gsub("Irr1", "IrrIrrigated", SimulationName, fixed=T),
#         SimulationName = gsub("TOS", "TOSTOS", SimulationName, fixed=T),
#         SimulationName = gsub("Cv", "Cultivar", SimulationName, fixed=T),
Season = ifelse(grepl("Dooen", SimulationName), "01", "19")) %>%
rename_with(~ gsub("Soil.SoilWater.", "", .x, fixed = TRUE))
tsData$site <- sapply(tsData$SimulationName, getSite)
tsData$TOS <- sapply(tsData$SimulationName, getTOS)
tsData$IRR <- sapply(tsData$SimulationName, getIRR)
tsData$Irrigation <- ifelse(tsData$IRR == "", tsData$Irrigation,
ifelse(tsData$IRR == "Irr0", "Dryland",
ifelse(tsData$IRR == "Irr1", "Irrigated", NA)))
tsData$Pop <- sapply(tsData$SimulationName, getPop)
tsData$SimulationName2 <- with(tsData, paste0(site, "TOS", TOS, "Cultivar", Lentil.SowingData.Cultivar,
ifelse (IRR != "", paste0("Irr", Irrigation), ""),
ifelse (Pop != "", paste0("Pop", Pop), "")))
View(cbind(tsData$SimulationName, tsData$SimulationName2
))
View(cbind(tsData$SimulationName, tsData$SimulationName2, tsData$IRR))
# Assemble observed daily data
# Timeseries in second sheet
tsData <- read_xlsx("./Observed for daniel.xlsx", sheet=2) %>%
mutate(SimulationName = gsub("DR_2001Dooen", "Dooen01TOS1CvDigger", SimulationName, fixed = T),
#         SimulationName = gsub("Irr0", "IrrDryland", SimulationName, fixed=T),
#         SimulationName = gsub("Irr1", "IrrIrrigated", SimulationName, fixed=T),
#         SimulationName = gsub("TOS", "TOSTOS", SimulationName, fixed=T),
#         SimulationName = gsub("Cv", "Cultivar", SimulationName, fixed=T),
Season = ifelse(grepl("Dooen", SimulationName), "01", "19")) %>%
rename_with(~ gsub("Soil.SoilWater.", "", .x, fixed = TRUE))
# Assemble observed daily data
# Timeseries in second sheet
tsData <- read_xlsx("./Observed for daniel.xlsx", sheet=2) %>%
mutate(SimulationName = gsub("DR_2001Dooen", "Dooen01TOS1CvDigger", SimulationName, fixed = T),
IRR = ifelse(grepl("Wet|Irr1", SimulationName), "Irrigated",
ifelse(grepl("Dry|Irr0", SimulationName), "Dryland", "")),
#         SimulationName = gsub("Irr0", "IrrDryland", SimulationName, fixed=T),
#         SimulationName = gsub("Irr1", "IrrIrrigated", SimulationName, fixed=T),
#         SimulationName = gsub("TOS", "TOSTOS", SimulationName, fixed=T),
#         SimulationName = gsub("Cv", "Cultivar", SimulationName, fixed=T),
Season = ifelse(grepl("Dooen", SimulationName), "01", "19")) %>%
rename_with(~ gsub("Soil.SoilWater.", "", .x, fixed = TRUE))
View(cbind(tsData$SimulationName, tsData$SimulationName2, tsData$IRR))
tsData <- read_xlsx("./Observed for daniel.xlsx", sheet=2) %>%
mutate(SimulationName = gsub("DR_2001Dooen", "Dooen01TOS1CvDigger", SimulationName, fixed = T),
IRR = ifelse(grepl("Wet|Irr1", SimulationName), "Irrigated",
ifelse(grepl("Dry|Irr0", SimulationName), "Dryland", "")),
#         SimulationName = gsub("Irr0", "IrrDryland", SimulationName, fixed=T),
#         SimulationName = gsub("Irr1", "IrrIrrigated", SimulationName, fixed=T),
#         SimulationName = gsub("TOS", "TOSTOS", SimulationName, fixed=T),
#         SimulationName = gsub("Cv", "Cultivar", SimulationName, fixed=T),
Season = ifelse(grepl("Dooen", SimulationName), "01", "19")) %>%
rename_with(~ gsub("Soil.SoilWater.", "", .x, fixed = TRUE))
tsData$site <- sapply(tsData$SimulationName, getSite)
tsData$TOS <- sapply(tsData$SimulationName, getTOS)
tsData$Pop <- sapply(tsData$SimulationName, getPop)
tsData$SimulationName2 <- with(tsData, paste0(site, "TOS", TOS, "Cultivar", Lentil.SowingData.Cultivar,
ifelse (IRR != "", paste0("Irr", Irrigation), ""),
ifelse (Pop != "", paste0("Pop", Pop), "")))
View(cbind(tsData$SimulationName, tsData$SimulationName2, tsData$IRR))
tsData$SimulationName2 <- with(tsData, paste0(site, "TOS", TOS, "Cultivar", Lentil.SowingData.Cultivar,
ifelse (IRR != "", paste0("Irr", IRR), ""),
ifelse (Pop != "", paste0("Pop", Pop), "")))
View(cbind(tsData$SimulationName, tsData$SimulationName2, tsData$IRR))
stopifnot(length(setdiff(names(harvestData$SimulationName), names(tsData$SimulationName))) > 0)
setdiff(names(harvestData$SimulationName), names(tsData$SimulationName))
stopifnot(is.null(setdiff(names(harvestData$SimulationName), names(tsData$SimulationName))))
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
setdiff(names(harvestData$SimulationName), names(tsData$SimulationName))
setdiff(names(tsData$SimulationName), names(harvestData$SimulationName))
c(names(tsData$SimulationName), names(harvestData$SimulationName))
names(tsData$SimulationName)
setdiff(harvestData$SimulationName), tsData$SimulationName))
setdiff(harvestData$SimulationName, tsData$SimulationName))
setdiff(harvestData$SimulationName, tsData$SimulationName)
! tsData$SimulationName %in% harvestData$SimulationName))
! tsData$SimulationName %in% harvestData$SimulationName
any(! tsData$SimulationName %in% harvestData$SimulationName)
stopifnot(any(! tsData$SimulationName %in% harvestData$SimulationName))
tsData$SimulationName %in% harvestData$SimulationName
sum(! tsData$SimulationName %in% harvestData$SimulationName)
any(! tsData$SimulationName %in% harvestData$SimulationName)
stopifnot(any(! tsData$SimulationName %in% harvestData$SimulationName) == FALSE)
# Split into two frames for replace / append
newDates <- as.Date(setdiff(df0$Clock.Today, tsData$Clock.Today[tsData$site =="Greenethorpe"]))
newObsns <- df0[match(newDates, df0$Clock.Today),] %>%
mutate( DAS = NA,
Season="2019",
site= "Greenethorpe")
for(i in 1:nrow(newObsns)) {
newObsns$DAS[i] <- newObsns$Clock.Today[i] - defaults[[ paste0("Greenethorpe,", newObsns$TOS[i]) ]]
}
tsData1 <- tsData %>%
rows_patch(df0[! df0$Clock.Today %in% newDates , ] %>% select(-c(WaterTrt)),
by= c("SimulationName", "Clock.Today"), unmatched = "error") %>%
bind_rows(newObsns)
df0$SimulationName %in% tsDataData$SimulationName
df0$SimulationName %in% tsData$SimulationName
unique(df0$SimulationName)
unique(tsData$SimulationName)
df0$SimulationName <- with(df0, paste0(site, "TOS", TOS, "Cultivar", Lentil.SowingData.Cultivar,
ifelse (IRR != "", paste0("Irr", Irrigation), ""),
ifelse (Pop != "", paste0("Pop", Pop), "")))
df0$SimulationName <- with(df0, paste0(site, "TOS", TOS, "Cultivar", Lentil.SowingData.Cultivar,
ifelse (WaterTrt != "", paste0("Irr", WaterTrt), ""),
ifelse (Pop != "", paste0("Pop", Pop), "")))
df0$SimulationName <- with(df0, paste0(site, "TOS", TOS, "Cultivar", Lentil.SowingData.Cultivar,
ifelse (WaterTrt != "", paste0("Irr", WaterTrt), "")))
any(! df0$SimulationName %in% tsData$SimulationName)
unique(df0$SimulationName)
df0$SimulationName <- with(df0, paste0("GreenethorpeTOS", TOS, "Cultivar", Lentil.SowingData.Cultivar,
ifelse (WaterTrt != "", paste0("Irr", WaterTrt), "")))
unique(df0$SimulationName)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
table(harvestData$Harvest)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
names(sheet1)
names(sheet2)
hist(sheet2$kwt1000)
unqiue(sheet2$kwt1000)
unique(sheet2$kwt1000)
unique(sheet2$branches_m2)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
names(sheet1)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
names(sheet1)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
table(harvestData$site, !is.na(harvestData$BuddingDAS))
names(sheet1)
table(harvestData$site, !is.na(harvestData$HarvestMaturityDAS))
table(harvestData$site, !is.na(harvestData$MaturityDAS))
names(sheet2)
names(tsData
)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
View(sheet1)
table(sheet1$Harvest)
12*1200
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
table(sheet1$Harvest)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
source("~/work/Projects/GRDC Pulse 2019/Lentils/Third Cut/1 Make from template.R", echo=TRUE)
