{
  "$type": "Models.Core.Simulations, Models",
  "Version": 195,
  "Name": "Simulations",
  "ResourceName": null,
  "Children": [
    {
      "$type": "Models.Storage.DataStore, Models",
      "useFirebird": false,
      "CustomFileName": null,
      "Name": "DataStore",
      "ResourceName": null,
      "Children": [],
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Core.Folder, Models",
      "ShowInDocs": false,
      "Name": "Replacements",
      "ResourceName": null,
      "Children": [
        {
          "$type": "Models.PMF.Plant, Models",
          "PlantType": "SCRUM",
          "Name": "SCRUM",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Memo, Models",
              "Text": "\n# SCRUM: the Simple Crop Resource Uptake Model\n\n_Hamish Brown, Edith Khaembah, Rogerio Cichota, Xiumei Yang and Jo Sharp, New Zealand Institute for Biological Science_ \n\n_Neil Huth and Dean Holzworth, Commonwealth Scientific and Industrial Research Organisation_\n\n_Steven Reeves, Queensland Department of the Environment, Tourism, Science and Innovation_\n\nThe SCRUM model serves two main purposes:\n1. To represent annual crops in APSIM simulations that we do not yet have a detailed model for and/or lack the experimental data required to parametrise one.  SCRUM has been designed to be parameterised with some basic crop information that an expert in a specific crop type will have close to hand.  This provides an alternative to using another crop type as a proxy when we are simulating rotations that include crop that do not have a detailed crop model.\n2. For studies that are not interested in the crop and donâ€™t want to invest a lot of time in setting the crop component of simulations but still need something to provide sensible boundaries to the nitrogen and water balance.\n\nTo be able to represent a broad range of annual crops SCRUM makes a number of simplifications:\n* It does not predict potential yield.  This is a user input and a value must be provided that is sensible for the context being simulated.  Harvest index and root proportion coefficients are used to determine stover and root biomass.  Crop yields may be less than the yield specified if stress events occur.\n* Daily patterns of biomass accumulation, cover, root depth and height are calculated from basic linear and sigmoidal functions anchored to phenological stages as shown below.\n![Schematic of biomass, cover, root depth and height with crop development stages](SCRUM_Patterns.jpg)\n* The model does not predict when harvests occur.  Instead, the user provides dates and crop stages for establishment and harvest as inputs.  Scrum scales it development patterns (shown above) between the user specified dates and stages to give daily patterns.  An example for biomass accumulation patterns is shown in the figure below.  Dotted, dashed and solid lines represent seedling, emergence and seed establishment stages respectively.   All of the patterns displayed are possible depending on which stage is specified for establishment and harvest. So by changing the establishment and harvest dates and stages a wide range of development patterns can be simulated to represent most crop situations.\n* Establishment Stages:\n    - Seed is selected to represent a crop that is sown and emerges after establishment date.\n   - Emergence is selected if the crop is to start growing on the day of establishment\n   - Seedling is selected to represent transplanted crops that already have some biomass and leaf area on the day of establishment.\n* Harvest Stages:\n   - Vegetative is selected for crops such as lettuce that are harvested while still in rapid growth.\n   - Early, mid and late reproductive are other options for crops that are harvested before maturity such as whole crop silage, fresh legumes and oil seeds (respectively)\n   - Maturity is selected for a crop that is harvested as soon as biomass accumulation has finished\n   - Ripe is selected for crops that are harvested after maturity and a period of field drying such as most cereals.\n![Schematic of biomass, accumulation patterns possible with different establishment and harvest stages.  Dotted, dashed and solid lines represent seedling, emergence and seed establishment stages respectively](SCRUM_Scaling.jpg)\n* Water stress responses may be switched on or off by the user depending on the simulation needs.  When water stress is switched on it will affect crop cover and biomass accumulation.\n* Nitrogen stress reduces biomass accumulation if there is insufficient N to meat minimum N concentration of growing organs.  Nitrogen stress does not affect cover.\n* SCRUM is not released with sets of coefficients to represent different crop types.  Instead and SCRUM Instance model is included in a simulation where the user sets coefficients to represent the crop required.  This provide great flexibility parameterising crops but puts the responsibility for having sensible parameters on the model user.  A set of SCRUM instances parameterised for a wide range of crops are provided in examples but these are intended as a start point that users refine to meet their needs.  The name of SCRUM instance models is arbitrary and they can be called what ever they like.\n* The SCRUM instance can be set to specify sowing and harvest dates so there is no need to include a manager to trigger these events.  There is a SCRUM rotation component that can be used for specifying rotations of SCRUM crops without needing to use a manager and it is possible to trigger these events from manager if more sophisticated set ups are required.\n\nThe SCRUM model is built using the Plant Modelling Framework (PMF) of [brown_plant_2014] so it interfaces with other APSIM models in the same way as other plant models. \nSCRUM has 4 organ classes to represent different biomass components. The real biomass components that these classes represent changes from crop to crop:  \n   1. A Simple leaf class called <b>Stover</b> which represents the unharvested parts of the plant.  Generally, this represents the leaf and stem components of the crop but for crops where stem and leaf are part of the harvested product (e.g forages and leafy vegetables) than stover is the residual fraction of leaf and stem that is not harvested.  \n   2. A Generic organ class called <b>Product</b> which represents the plant parts that are harvested and removed from the field.  This could represent grain, fruits, tubers, leaf or stem depending on what sort of crop is being represented.  \n   3. A Root organ which extracts water and nitrogen from the soil for plant growth and returns biomass to the soil on harvest  \n   4. A Nodule organ which is only activated and fixes nitrogen for the legume crops.  \n\n  \n \n\n",
              "Name": "TitlePage",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Phen.Phenology, Models",
              "Name": "Phenology",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Memo, Models",
                  "Text": "Phenological phases for SCRUM do not correspond to objective development stages as they do for detailed crop models.  Instead they represent subjective stages in the development of an annual crop when they may be established or harvested and so provide weigh points for scalling biomass, cover, root depth and height between.  As ThermalTime accumulates the crop progresses through the following phases:",
                  "Name": "Description",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.WeightedTemperatureFunction, Models",
                  "MaximumTemperatureWeighting": 0.5,
                  "Name": "ThermalTime",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.XYPairs, Models",
                      "X": [
                        0.0,
                        30.0,
                        40.0
                      ],
                      "Y": [
                        0.0,
                        30.0,
                        0.0
                      ],
                      "Name": "XYPairs",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Graph, Models",
                          "Caption": null,
                          "Axis": [
                            {
                              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
                              "Title": "Y",
                              "Position": 0,
                              "Inverted": false,
                              "CrossesAtZero": false,
                              "LabelOnOneLine": false,
                              "Minimum": "NaN",
                              "Maximum": "NaN",
                              "Interval": null
                            },
                            {
                              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
                              "Title": "X",
                              "Position": 3,
                              "Inverted": false,
                              "CrossesAtZero": false,
                              "LabelOnOneLine": false,
                              "Minimum": "NaN",
                              "Maximum": "NaN",
                              "Interval": null
                            }
                          ],
                          "LegendPosition": 5,
                          "LegendOrientation": 0,
                          "AnnotationLocation": 0,
                          "DisabledSeries": [],
                          "LegendOutsideGraph": false,
                          "Name": "Graph",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Series, Models",
                              "Type": 1,
                              "XAxis": 3,
                              "YAxis": 0,
                              "ColourArgb": -65536,
                              "FactorToVaryColours": null,
                              "FactorToVaryMarkers": null,
                              "FactorToVaryLines": null,
                              "Marker": 11,
                              "MarkerSize": 0,
                              "Line": 0,
                              "LineThickness": 0,
                              "TableName": null,
                              "XFieldName": ".Simulations.Replacements.SCRUM.Phenology.WeightedTemperatureFunction.XYPairs.X",
                              "YFieldName": ".Simulations.Replacements.SCRUM.Phenology.WeightedTemperatureFunction.XYPairs.Y",
                              "X2FieldName": null,
                              "Y2FieldName": null,
                              "ShowInLegend": false,
                              "IncludeSeriesNameInLegend": false,
                              "Cumulative": false,
                              "CumulativeX": false,
                              "Filter": null,
                              "Name": "Series",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Phen.GenericPhase, Models",
                  "Start": "Seed",
                  "End": "Emergence",
                  "IsEmerged": false,
                  "Name": "Seed",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "The phase that runs from sowing until the seedlings emergence is complete.\n",
                      "Name": "Description",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": "<sup>o</sup>Cd",
                      "Name": "Target",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "SCRUM calculates this parameter during run-time, when the crop is being established. This is done in ScrumCropInstance based on parameter values set in the relevant ScrumCrop and CropManagement script.\n",
                          "Name": "Parameter set at establishment",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Progression",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Phenology].ThermalTime",
                          "Name": "ThermalTime",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.LessThanFunction, Models",
                          "Name": "SoilMoistureFunction",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[ISoilWater].SWmm[1]",
                              "Name": "TopLayerMoisture",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[IPhysical].LL15mm[1]",
                              "Name": "TopLayerLL",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.Constant, Models",
                              "FixedValue": 0.0,
                              "Units": null,
                              "Name": "IfLessThan0Return0",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.Constant, Models",
                              "FixedValue": 1.0,
                              "Units": null,
                              "Name": "IfGreaterThan0Return1",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Phen.GenericPhase, Models",
                  "Start": "Emergence",
                  "End": "Seedling",
                  "IsEmerged": true,
                  "Name": "Seedling",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "The phase that runs from emergence until the seedlings are established (later than emergence) or ready for transplanting.\n",
                      "Name": "Description",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": "<sup>o</sup>Cd",
                      "Name": "Target",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "SCRUM calculates this parameter during run-time, when the crop is being established. This is done in ScrumCropInstance based on parameter values set in the relevant ScrumCrop and CropManagement script.\n",
                          "Name": "Parameter set at establishment",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].ThermalTime",
                      "Name": "Progression",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Phen.GenericPhase, Models",
                  "Start": "Seedling",
                  "End": "Vegetative",
                  "IsEmerged": true,
                  "Name": "Vegetative",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "The phase in which the plant is rapidly growing and closing its canopy, represents the period of pure vegetative growth.\n",
                      "Name": "Description",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": "<sup>o</sup>Cd",
                      "Name": "Target",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "SCRUM calculates this parameter during run-time, when the crop is being established. This is done in ScrumCropInstance based on parameter values set in the relevant ScrumCrop and CropManagement script.\n",
                          "Name": "Parameter set at establishment",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].ThermalTime",
                      "Name": "Progression",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Phen.GenericPhase, Models",
                  "Start": "Vegetative",
                  "End": "EarlyReproductive",
                  "IsEmerged": true,
                  "Name": "EarlyReproductive",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "The phase with substantial plant growth and when canopy reaches full development, represents the period in which crops are flowering.\n",
                      "Name": "Description",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": "<sup>o</sup>Cd",
                      "Name": "Target",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "SCRUM calculates this parameter during run-time, when the crop is being established. This is done in ScrumCropInstance based on parameter values set in the relevant ScrumCrop and CropManagement script.\n",
                          "Name": "Parameter set at establishment",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].ThermalTime",
                      "Name": "Progression",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Phen.GenericPhase, Models",
                  "Start": "EarlyReproductive",
                  "End": "MidReproductive",
                  "IsEmerged": true,
                  "Name": "MidReproductive",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "The phase in which plant growth starts to slow down while still maintaining full canopy, represents the period when crops have started grain filling.\n",
                      "Name": "Description",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": "<sup>o</sup>Cd",
                      "Name": "Target",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "SCRUM calculates this parameter during run-time, when the crop is being established. This is done in ScrumCropInstance based on parameter values set in the relevant ScrumCrop and CropManagement script.\n",
                          "Name": "Parameter set at establishment",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].ThermalTime",
                      "Name": "Progression",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Phen.GenericPhase, Models",
                  "Start": "MidReproductive",
                  "End": "LateReproductive",
                  "IsEmerged": true,
                  "Name": "LateReproductive",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "The phase in which plant growth is near completion, represents the period when crops are completing grain filling.\n",
                      "Name": "Description",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": "<sup>o</sup>Cd",
                      "Name": "Target",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "SCRUM calculates this parameter during run-time, when the crop is being established. This is done in ScrumCropInstance based on parameter values set in the relevant ScrumCrop and CropManagement script.\n",
                          "Name": "Parameter set at establishment",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].ThermalTime",
                      "Name": "Progression",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Phen.GenericPhase, Models",
                  "Start": "LateReproductive",
                  "End": "Maturity",
                  "IsEmerged": true,
                  "Name": "Maturity",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "The phase in which plant growth ends reaching maximum biomass and cover, represents the period where grain filling is nearly complete\n",
                      "Name": "Description",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": "<sup>o</sup>Cd",
                      "Name": "Target",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "SCRUM calculates this parameter during run-time, when the crop is being established. This is done in ScrumCropInstance based on parameter values set in the relevant ScrumCrop and CropManagement script.\n",
                          "Name": "Parameter set at establishment",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].ThermalTime",
                      "Name": "Progression",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Phen.GenericPhase, Models",
                  "Start": "Maturity",
                  "End": "Ripe",
                  "IsEmerged": true,
                  "Name": "Ripe",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "The phase in which canopy cover starts to decline, represents the period when grains are drying down to be ready for harvest.\n",
                      "Name": "Description",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": "<sup>o</sup>Cd",
                      "Name": "Target",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "SCRUM calculates this parameter during run-time, when the crop is being established. This is done in ScrumCropInstance based on parameter values set in the relevant ScrumCrop and CropManagement script.\n",
                          "Name": "Parameter set at establishment",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].ThermalTime",
                      "Name": "Progression",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Phen.EndPhase, Models",
                  "Start": "Ripe",
                  "End": "Unused",
                  "IsEmerged": true,
                  "Name": "ReadyForHarvesting",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].ThermalTime",
                      "Name": "ThermalTime",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.OrganArbitrator, Models",
              "Name": "Arbitrator",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.PMF.BiomassTypeArbitrator, Models",
                  "Name": "DMArbitration",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Core.Folder, Models",
                      "ShowInDocs": false,
                      "Name": "PotentialPartitioningMethods",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.PMF.Arbitrator.ReallocationMethod, Models",
                          "Name": "ReallocationMethod",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.PMF.Arbitrator.AllocateFixationMethod, Models",
                          "Name": "AllocateFixationMethod",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.PMF.Arbitrator.RetranslocationMethod, Models",
                          "Name": "RetranslocationMethod",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.PMF.Arbitrator.SendPotentialDMAllocationsMethod, Models",
                          "Name": "SendPotentialDMAllocationsMethod",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Core.Folder, Models",
                      "ShowInDocs": false,
                      "Name": "AllocationMethods",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.PMF.Arbitrator.NutrientConstrainedAllocationMethod, Models",
                          "Name": "NutrientConstrainedAllocationMethod",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.PMF.Arbitrator.DryMatterAllocationsMethod, Models",
                          "Name": "DryMatterAllocationsMethod",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.RelativeAllocation, Models",
                      "Name": "ArbitrationMethod",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.BiomassTypeArbitrator, Models",
                  "Name": "NArbitration",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Core.Folder, Models",
                      "ShowInDocs": false,
                      "Name": "PotentialPartitioningMethods",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.PMF.Arbitrator.ReallocationMethod, Models",
                          "Name": "ReallocationMethod",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Core.Folder, Models",
                      "ShowInDocs": false,
                      "Name": "ActualPartitioningMethods",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.PMF.Arbitrator.AllocateFixationMethod, Models",
                          "Name": "AllocateFixationMethod",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.PMF.Arbitrator.RetranslocationMethod, Models",
                          "Name": "RetranslocationMethod",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Core.Folder, Models",
                      "ShowInDocs": false,
                      "Name": "AllocationMethods",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.PMF.Arbitrator.NitrogenAllocationsMethod, Models",
                          "Name": "NitrogenAllocationsMethod",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.RelativeAllocation, Models",
                      "Name": "ArbitrationMethod",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.Arbitrator.AllocateUptakesMethod, Models",
                      "Name": "AllocateUptakesMethod",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Arbitrator.WaterUptakeMethod, Models",
                  "Name": "WaterUptakeMethod",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Arbitrator.NitrogenUptakeMethod, Models",
                  "Name": "NitrogenUptakeMethod",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Organs.GenericOrgan, Models",
              "StartLive": null,
              "DMSupply": null,
              "NSupply": null,
              "DMDemand": null,
              "NDemand": null,
              "potentialDMAllocation": null,
              "IsAboveGround": true,
              "Name": "Product",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Memo, Models",
                  "Text": "This organ represents the biomass that is typically removed from the crop at harvest. It may include grain, root, leaf, stem, pod, tuber, or any other organ depending on the type of crop and how it is harvested.\n",
                  "Name": "Description",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.NutrientPoolFunctions, Models",
                  "Name": "InitialWt",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": "g/m^2",
                      "Name": "Structural",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": "g/m^2",
                      "Name": "Metabolic",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": "g/m^2",
                      "Name": "Storage",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.VariableReference, Models",
                  "VariableName": "[Product].MaximumNConc",
                  "Name": "initialNConcFunction",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "g/g",
                  "Name": "MaxNConcAtMaturity",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "This represents the maximum N concentration for Product at harvest time. SCRUM assumes that the maximum N concentration decreases as plants grow, starting at MaxNConcAtSeedling and reaching the value specified here at Maturity.  \nSCRUM calculates this parameter during run-time, when the crop is being established. This is done in ScrumCropInstance based on parameter values set in the relevant ScrumCrop and CropManagement script.\n",
                      "Name": "Parameter set at establishment",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.AddFunction, Models",
                  "Name": "MaximumNConc",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Product].MaxNConcAtMaturity",
                      "Name": "MaxNConcAtMaturity",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "EarlyNConcElevation",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.SubtractFunction, Models",
                          "Name": "DeltaNConcentration",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[SCRUM].MaxNConcAtSeedling",
                              "Name": "MaxNConcAtSeedling",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Product].MaxNConcAtMaturity",
                              "Name": "MaxNConcAtMaturity",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.ExpressionFunction, Models",
                          "Expression": "Min(1,exp(-[NDilutionConstant]*([Phenology].Stage-3)))",
                          "Name": "StageDilution",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.MultiplyFunction, Models",
                  "Name": "CriticalNConc",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Product].MaxNConcAtMaturity",
                      "Name": "MaxNConcAtMaturity",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.6,
                      "Units": null,
                      "Name": "StructuralNFactor",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.MultiplyFunction, Models",
                  "Name": "MinimumNConc",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Product].MaxNConcAtMaturity",
                      "Name": "MaxNConcAtMaturity",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.6,
                      "Units": null,
                      "Name": "StructuralNFactor",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.4,
                  "Units": "g/g",
                  "Name": "CarbonConcentration",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "g/m^2 fresh mass",
                  "Name": "ExpectedYield",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "This value represents the expected biomass for Product at harvest time, in fresh weight basis. The actual yield may be lower due to water or N stress.  \nSCRUM gets the value for this parameter during run-time, when the crop is established. The value is set on ScrumCropInstance or CropManagement script.\n",
                      "Name": "Parameter set at establishment",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "g/g",
                  "Name": "HarvestIndex",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "SCRUM gets the value for this parameter during run-time, when the crop is established. The value is set on ScrumCropInstance or CropManagement script.\n",
                      "Name": "Parameter set at establishment",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "g/g",
                  "Name": "DryMatterContent",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "SCRUM gets the value for this parameter during run-time, when the crop is established. The value is set on ScrumCropInstance or CropManagement script.\n",
                      "Name": "Parameter set at establishment",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.SubtractFunction, Models",
                  "Name": "WaterContent",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "This is used to convert the biomass weights of this organ from dry matter basis back to fresh mass once daily partitining is complete.\n",
                      "Name": "Description",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "One",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Product].DryMatterContent",
                      "Name": "DryMatterContent",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.MultiplyFunction, Models",
                  "Name": "DMAtHarvest",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "This is the expected yield at harvest time expressed in dry matter basis. It is calculated by the product of ExpectedYield (which is assumed to be given on fresh mass basis) and the dry matter content of the Product. Both are set during runtime, when the crop is stablished.\n",
                      "Name": "Description",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Product].ExpectedYield",
                      "Name": "ExpectedYield",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Product].DryMatterContent",
                      "Name": "DryMatterContent",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.ExpressionFunction, Models",
                  "Expression": "(divide(1,[Product].DryMatterContent,0)*[Product].Wt)/100",
                  "Name": "Yield",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "Product fresh yield (t/ha).\n",
                      "Name": "Description",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "g/m^2",
                  "Name": "Photosynthesis",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 1.0,
                  "Units": "0-1",
                  "Name": "DMConversionEfficiency",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "0-1",
                  "Name": "MaintenanceRespirationFunction",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "SenescenceRate",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "DetachmentRateFunction",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "RemobilisationCost",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "DMReallocationFactor",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "DMRetranslocationFactor",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.PhaseLookupValue, Models",
                  "Start": "Emergence",
                  "End": "MidReproductive",
                  "Name": "NitrogenDemandSwitch",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "Constant",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "NReallocationFactor",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "NRetranslocationFactor",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.RetranslocateNonStructural, Models",
                  "Name": "RetranslocateNitrogen",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Library.BiomassRemoval, Models",
                  "HarvestFractionLiveToRemove": 1.0,
                  "HarvestFractionDeadToRemove": 1.0,
                  "HarvestFractionLiveToResidue": 0.0,
                  "HarvestFractionDeadToResidue": 0.0,
                  "Name": "BiomassRemovalDefaults",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.NutrientDemandFunctions, Models",
                  "Name": "DMDemands",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Structural",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.DemandFunctions.PartitionFractionDemandFunction, Models",
                          "Name": "DMDemandFunction",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Functions.SubtractFunction, Models",
                              "Name": "PartitionFraction",
                              "ResourceName": null,
                              "Children": [
                                {
                                  "$type": "Models.Functions.Constant, Models",
                                  "FixedValue": 1.0,
                                  "Units": null,
                                  "Name": "One",
                                  "ResourceName": null,
                                  "Children": [],
                                  "Enabled": true,
                                  "ReadOnly": false
                                },
                                {
                                  "$type": "Models.Functions.VariableReference, Models",
                                  "VariableName": "[Root].DMDemands.Structural.DMDemandFunction.PartitionFraction",
                                  "Name": "RootFraction",
                                  "ResourceName": null,
                                  "Children": [],
                                  "Enabled": true,
                                  "ReadOnly": false
                                },
                                {
                                  "$type": "Models.Functions.VariableReference, Models",
                                  "VariableName": "[Stover].DMDemands.Structural.DMDemandFunction.PartitionFraction",
                                  "Name": "StoverFraction",
                                  "ResourceName": null,
                                  "Children": [],
                                  "Enabled": true,
                                  "ReadOnly": false
                                }
                              ],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.Constant, Models",
                          "FixedValue": 1.0,
                          "Units": "0-1",
                          "Name": "StructuralFraction",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Metabolic",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Storage",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "QStructuralPriority",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "QMetabolicPriority",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "QStoragePriority",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.NutrientDemandFunctions, Models",
                  "Name": "NDemands",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Structural",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Product].minimumNconc",
                          "Name": "MinNConc",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Product].potentialDMAllocation.Structural",
                          "Name": "PotentialDMAllocation",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Metabolic",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.SubtractFunction, Models",
                          "Name": "MetabolicNConc",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Product].criticalNConc",
                              "Name": "CritNConc",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Product].minimumNconc",
                              "Name": "MinNConc",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Product].potentialDMAllocation.Structural",
                          "Name": "PotentialDMAllocation",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.DemandFunctions.StorageNDemandFunction, Models",
                      "Name": "Storage",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Product].nitrogenDemandSwitch",
                          "Name": "NitrogenDemandSwitch",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Product].MaximumNconc",
                          "Name": "MaxNConc",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "QStructuralPriority",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "QMetabolicPriority",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "QStoragePriority",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Organs.SimpleLeaf, Models",
              "Albedo": 0.18,
              "Gsmax350": 0.01,
              "R50": 150.0,
              "LeafInitialisationStage": "Emergence",
              "Height": 0.0,
              "BaseHeight": 0.0,
              "Width": 0.0,
              "FRGR": 0.0,
              "PotentialEP": 0.0,
              "WaterDemand": 0.0,
              "LightProfile": null,
              "KDead": 0.1,
              "LAIDead": 0.0,
              "DMSupply": null,
              "NSupply": null,
              "DMDemand": null,
              "NDemand": null,
              "potentialDMAllocation": null,
              "Name": "Stover",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Memo, Models",
                  "Text": "This organ represents the biomass that is typically not removed at harvest. It may include leaf, stem, or any other organ depending on the type of crop and how it is harvested. The processes defining biomass accumulation over time (akin to photosythesis) are accounted for in this organ. It also holds the information about the canopy (cover, height, etc.).\n",
                  "Name": "Description",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "g/m^2",
                  "Name": "InitialWt",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "g/g",
                  "Name": "MaxNConcAtMaturity",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "This represents the maximum N concentration for Stover at harvest time. SCRUM assumes that the maximum N concentration decreases as plants grow, starting at MaxNConcAtSeedling and reaching the value specified here at Maturity.  \nSCRUM calculates this parameter during run-time, when the crop is being established. This is done in ScrumCropInstance based on parameter values set in the relevant ScrumCrop and CropManagement script.\n",
                      "Name": "Parameter set at establishment",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.AddFunction, Models",
                  "Name": "MaximumNConc",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Stover].MaxNConcAtMaturity",
                      "Name": "MaxNConcAtMaturity",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "EarlyNConcElevation",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.SubtractFunction, Models",
                          "Name": "SubtractFunction",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[SCRUM].MaxNConcAtSeedling",
                              "Name": "MaxNConcAtSeedling",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Stover].MaxNConcAtMaturity",
                              "Name": "MaxNConcAtMaturity",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.ExpressionFunction, Models",
                          "Expression": "Min(1,exp(-[NDilutionConstant]*([Phenology].Stage-3)))",
                          "Name": "StageDilution",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.MultiplyFunction, Models",
                  "Name": "CriticalNConc",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Stover].MaxNConcAtMaturity",
                      "Name": "MaxNConcAtMaturity",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.6,
                      "Units": null,
                      "Name": "StructuralNFactor",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.MultiplyFunction, Models",
                  "Name": "MinimumNConc",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Stover].MaxNConcAtMaturity",
                      "Name": "MaxNConcAtMaturity",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.6,
                      "Units": null,
                      "Name": "StructuralNFactor",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.4,
                  "Units": "g/g",
                  "Name": "CarbonConcentration",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.SubtractFunction, Models",
                  "Name": "DMAtHarvest",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "This is the expected biomass for Stover at harvest time expressed in dry matter basis.\n",
                      "Name": "Description",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[SCRUM].AbovegroundDMAtHarvest",
                      "Name": "AbovegroundDMAtHarvest",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Product].DMAtHarvest",
                      "Name": "ProductDMAtHarvest",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.MultiplyFunction, Models",
                  "Name": "Photosynthesis",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.DeltaFunction, Models",
                      "StartStageName": "Emergence",
                      "Name": "UnStressedBiomass",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.SigmoidFunction, Models",
                          "Name": "Integral",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Functions.MultiplyFunction, Models",
                              "Name": "Ymax",
                              "ResourceName": null,
                              "Children": [
                                {
                                  "$type": "Models.Functions.VariableReference, Models",
                                  "VariableName": "[SCRUM].TotalDMAtHarvest",
                                  "Name": "TotalDMAtHarvest",
                                  "ResourceName": null,
                                  "Children": [],
                                  "Enabled": true,
                                  "ReadOnly": false
                                },
                                {
                                  "$type": "Models.Functions.Constant, Models",
                                  "FixedValue": "NaN",
                                  "Units": null,
                                  "Name": "InvertedRelativeDMAtHarvest",
                                  "ResourceName": null,
                                  "Children": [
                                    {
                                      "$type": "Models.Memo, Models",
                                      "Text": "This parameter is used to normalise the sigmoid function, ensuring it reached the maximum value at the specified time for harvest.  \nSCRUM calculates this parameter during run-time, when the crop is being established. This is done in ScrumCropInstance based on parameter values set in the relevant ScrumCrop and CropManagement script.\n",
                                      "Name": "Parameter set at establishment",
                                      "ResourceName": null,
                                      "Children": [],
                                      "Enabled": true,
                                      "ReadOnly": false
                                    }
                                  ],
                                  "Enabled": true,
                                  "ReadOnly": false
                                }
                              ],
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.SubtractFunction, Models",
                              "Name": "XValue",
                              "ResourceName": null,
                              "Children": [
                                {
                                  "$type": "Models.Functions.VariableReference, Models",
                                  "VariableName": "[Phenology].AccumulatedTt",
                                  "Name": "AccumulatedTt",
                                  "ResourceName": null,
                                  "Children": [],
                                  "Enabled": true,
                                  "ReadOnly": false
                                },
                                {
                                  "$type": "Models.Functions.VariableReference, Models",
                                  "VariableName": "[Phenology].Seed.Target",
                                  "Name": "TtEmergence",
                                  "ResourceName": null,
                                  "Children": [],
                                  "Enabled": true,
                                  "ReadOnly": false
                                }
                              ],
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.Constant, Models",
                              "FixedValue": 0.0,
                              "Units": null,
                              "Name": "Xo",
                              "ResourceName": null,
                              "Children": [
                                {
                                  "$type": "Models.Memo, Models",
                                  "Text": "SCRUM calculates this parameter during run-time, when the crop is being established. This is done in ScrumCropInstance based on parameter values set in the relevant ScrumCrop and CropManagement script.\n",
                                  "Name": "Parameter set at establishment",
                                  "ResourceName": null,
                                  "Children": [],
                                  "Enabled": true,
                                  "ReadOnly": false
                                }
                              ],
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.Constant, Models",
                              "FixedValue": 0.0,
                              "Units": null,
                              "Name": "b",
                              "ResourceName": null,
                              "Children": [
                                {
                                  "$type": "Models.Memo, Models",
                                  "Text": "SCRUM calculates this parameter during run-time, when the crop is being established. This is done in ScrumCropInstance based on parameter values set in the relevant ScrumCrop and CropManagement script.\n",
                                  "Name": "Parameter set at establishment",
                                  "ResourceName": null,
                                  "Children": [],
                                  "Enabled": true,
                                  "ReadOnly": false
                                }
                              ],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "Name": "WaterStressFactor",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            0.0,
                            1.0
                          ],
                          "Y": [
                            0.0,
                            1.0
                          ],
                          "Name": "XYPairs",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Stover].Fw",
                          "Name": "XValue",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0068,
                      "Units": null,
                      "Name": "CorrectionFactor",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "The sigmoid curve only reaches its asymtotes of 0.0 and 1.0 at infinity, thus never getting to its maximum for practical purposes. Given the parameters used in SCRUM, the sigmoid only gets to ~99.3% at the Maturity stage, when the crop should be at its maximum biomass accumulation. So, this correction factor is used to stretch the sigmoid out a bit so it covers 100% of its range between emergence and Maturity.  \n",
                          "Name": "Why",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.PhaseLookup, Models",
                      "Name": "StageFactor",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.PhaseLookupValue, Models",
                          "Start": "Seed",
                          "End": "Emergence",
                          "Name": "Emerging",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Functions.Constant, Models",
                              "FixedValue": 0.0,
                              "Units": null,
                              "Name": "Constant",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.PhaseLookupValue, Models",
                          "Start": "Emergence",
                          "End": "Maturity",
                          "Name": "Growing",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Functions.Constant, Models",
                              "FixedValue": 1.0,
                              "Units": null,
                              "Name": "Constant",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.PhaseLookupValue, Models",
                          "Start": "Maturity",
                          "End": "Ripe",
                          "Name": "Ripening",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Functions.Constant, Models",
                              "FixedValue": 0.0,
                              "Units": null,
                              "Name": "Constant",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 1.0,
                  "Units": "0-1",
                  "Name": "DMConversionEfficiency",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "0-1",
                  "Name": "MaintenanceRespiration",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.MinimumFunction, Models",
                  "Name": "FRGR",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.SubDailyInterpolation, Models",
                      "agregationMethod": 0,
                      "Name": "FRGRFunctionTemp",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            0.0,
                            10.0,
                            25.0,
                            40.0
                          ],
                          "Y": [
                            0.0,
                            1.0,
                            1.0,
                            0.0
                          ],
                          "Name": "Response",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.ThreeHourAirTemperature, Models",
                          "TempRangeFactors": null,
                          "Name": "InterpolationMethod",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[SCRUM].Arbitrator.FN",
                      "Name": "NitrogenStress",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.AddFunction, Models",
                  "Name": "Cover",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.AccumulateFunctionGeneral, Models",
                      "AccumulateEventName": "[SCRUM].Phenology.PostPhenology",
                      "StartStageName": "Seed",
                      "EndStageName": "Ripe",
                      "StartEventName": null,
                      "EndEventName": null,
                      "StartDate": null,
                      "EndDate": null,
                      "ReduceStageName": null,
                      "FractionRemovedOnStage": 0.0,
                      "ReduceEventName": null,
                      "FractionRemovedOnEvent": 0.0,
                      "ReduceDates": null,
                      "FractionRemovedOnDate": 0.0,
                      "FractionRemovedOnCut": 0.0,
                      "FractionRemovedOnHarvest": 1.0,
                      "FractionRemovedOnGraze": 0.0,
                      "FractionRemovedOnPrune": 0.0,
                      "Name": "Growth",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.MultiplyFunction, Models",
                          "Name": "Expansion",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Functions.DeltaFunction, Models",
                              "StartStageName": "Seed",
                              "Name": "Delta",
                              "ResourceName": null,
                              "Children": [
                                {
                                  "$type": "Models.Functions.SigmoidFunction, Models",
                                  "Name": "Integral",
                                  "ResourceName": null,
                                  "Children": [
                                    {
                                      "$type": "Models.Functions.Constant, Models",
                                      "FixedValue": 0.97,
                                      "Units": null,
                                      "Name": "Ymax",
                                      "ResourceName": null,
                                      "Children": [
                                        {
                                          "$type": "Models.Memo, Models",
                                          "Text": "This is the maximum canopy cover for the crop, reached around the end of the Vegetative phase. Cover starts to decrease during the LaterReproductive phase.  \nSCRUM gets the value for this parameter during run-time, when the crop is established. The value is set on ScrumCropInstance or CropManagement script.\n",
                                          "Name": "Parameter set at establishment",
                                          "ResourceName": null,
                                          "Children": [],
                                          "Enabled": true,
                                          "ReadOnly": false
                                        }
                                      ],
                                      "Enabled": true,
                                      "ReadOnly": false
                                    },
                                    {
                                      "$type": "Models.Functions.VariableReference, Models",
                                      "VariableName": "[Phenology].AccumulatedEmergedTt",
                                      "Name": "XValue",
                                      "ResourceName": null,
                                      "Children": [],
                                      "Enabled": true,
                                      "ReadOnly": false
                                    },
                                    {
                                      "$type": "Models.Functions.Constant, Models",
                                      "FixedValue": 403.8,
                                      "Units": null,
                                      "Name": "Xo",
                                      "ResourceName": null,
                                      "Children": [
                                        {
                                          "$type": "Models.Memo, Models",
                                          "Text": "SCRUM calculates this parameter during run-time, when the crop is being established. This is done in ScrumCropInstance based on parameter values set in the relevant ScrumCrop and CropManagement script.\n",
                                          "Name": "Parameter set at establishment",
                                          "ResourceName": null,
                                          "Children": [],
                                          "Enabled": true,
                                          "ReadOnly": false
                                        }
                                      ],
                                      "Enabled": true,
                                      "ReadOnly": false
                                    },
                                    {
                                      "$type": "Models.Functions.Constant, Models",
                                      "FixedValue": 80.75,
                                      "Units": null,
                                      "Name": "b",
                                      "ResourceName": null,
                                      "Children": [
                                        {
                                          "$type": "Models.Memo, Models",
                                          "Text": "SCRUM calculates this parameter during run-time, when the crop is being established. This is done in ScrumCropInstance based on parameter values set in the relevant ScrumCrop and CropManagement script.\n",
                                          "Name": "Parameter set at establishment",
                                          "ResourceName": null,
                                          "Children": [],
                                          "Enabled": true,
                                          "ReadOnly": false
                                        }
                                      ],
                                      "Enabled": true,
                                      "ReadOnly": false
                                    }
                                  ],
                                  "Enabled": true,
                                  "ReadOnly": false
                                }
                              ],
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.LinearInterpolationFunction, Models",
                              "Name": "WaterStressFactor",
                              "ResourceName": null,
                              "Children": [
                                {
                                  "$type": "Models.Functions.XYPairs, Models",
                                  "X": [
                                    0.5,
                                    1.0
                                  ],
                                  "Y": [
                                    0.0,
                                    1.0
                                  ],
                                  "Name": "XYPairs",
                                  "ResourceName": null,
                                  "Children": [],
                                  "Enabled": true,
                                  "ReadOnly": false
                                },
                                {
                                  "$type": "Models.Functions.VariableReference, Models",
                                  "VariableName": "[Stover].Fw",
                                  "Name": "XValue",
                                  "ResourceName": null,
                                  "Children": [],
                                  "Enabled": true,
                                  "ReadOnly": false
                                }
                              ],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.PhaseLookupValue, Models",
                          "Start": "MidReproductive",
                          "End": "Ripe",
                          "Name": "Senescence",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Functions.DeltaFunction, Models",
                              "StartStageName": "Seed",
                              "Name": "Delta",
                              "ResourceName": null,
                              "Children": [
                                {
                                  "$type": "Models.Functions.MultiplyFunction, Models",
                                  "Name": "Integral",
                                  "ResourceName": null,
                                  "Children": [
                                    {
                                      "$type": "Models.Functions.HoldFunction, Models",
                                      "WhenToHold": "MidReproductive",
                                      "Name": "MaxCover",
                                      "ResourceName": null,
                                      "Children": [
                                        {
                                          "$type": "Models.Functions.VariableReference, Models",
                                          "VariableName": "[Stover].CoverGreen",
                                          "Name": "ValueToHold",
                                          "ResourceName": null,
                                          "Children": [],
                                          "Enabled": true,
                                          "ReadOnly": false
                                        }
                                      ],
                                      "Enabled": true,
                                      "ReadOnly": false
                                    },
                                    {
                                      "$type": "Models.Functions.AggregateOverMultiplePhases, Models",
                                      "StartStageName": "MidReproductive",
                                      "EndStageName": "Maturity",
                                      "Method": 1,
                                      "Name": "AggregateOverMultiplePhases",
                                      "ResourceName": null,
                                      "Children": [],
                                      "Enabled": true,
                                      "ReadOnly": false
                                    }
                                  ],
                                  "Enabled": true,
                                  "ReadOnly": false
                                }
                              ],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": "g/m2",
                      "Name": "InitialCover",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.AccumulateFunctionGeneral, Models",
                      "AccumulateEventName": "[Clock].PrePhenology",
                      "StartStageName": "Seed",
                      "EndStageName": "Ripe",
                      "StartEventName": null,
                      "EndEventName": null,
                      "StartDate": null,
                      "EndDate": null,
                      "ReduceStageName": null,
                      "FractionRemovedOnStage": 0.0,
                      "ReduceEventName": null,
                      "FractionRemovedOnEvent": 0.0,
                      "ReduceDates": null,
                      "FractionRemovedOnDate": 0.0,
                      "FractionRemovedOnCut": 0.0,
                      "FractionRemovedOnHarvest": 1.0,
                      "FractionRemovedOnGraze": 0.0,
                      "FractionRemovedOnPrune": 0.0,
                      "Name": "Removal",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.MultiplyFunction, Models",
                          "Name": "Cover Removed",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Stover].CoverGreenRemoved",
                              "Name": "VariableReference",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.Constant, Models",
                              "FixedValue": -1.0,
                              "Units": "0-1",
                              "Name": "MakeNegative",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "0-1",
                  "Name": "ExtinctionCoefficient",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "This parameter does not have a functional use in SCRUM. As cannopy cover is calculated directly, this value is only used to estimate the value of LAI.  \nSCRUM gets the value for this parameter during run-time, when the crop is established. The value is set on ScrumCropInstance or CropManagement script.\n",
                      "Name": "Parameter set at establishment",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 1.0,
                  "Units": "",
                  "Name": "StomatalConductanceCO2Modifier",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.SubtractFunction, Models",
                  "Name": "LaiDead",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.AccumulateFunctionGeneral, Models",
                      "AccumulateEventName": "[Clock].PartitioningComplete",
                      "StartStageName": "EarlyReproductive",
                      "EndStageName": null,
                      "StartEventName": null,
                      "EndEventName": null,
                      "StartDate": null,
                      "EndDate": null,
                      "ReduceStageName": null,
                      "FractionRemovedOnStage": 0.0,
                      "ReduceEventName": null,
                      "FractionRemovedOnEvent": 0.0,
                      "ReduceDates": null,
                      "FractionRemovedOnDate": 0.0,
                      "FractionRemovedOnCut": 0.0,
                      "FractionRemovedOnHarvest": 1.0,
                      "FractionRemovedOnGraze": 0.0,
                      "FractionRemovedOnPrune": 0.0,
                      "Name": "Senescence",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.MultiplyFunction, Models",
                          "Name": "DailyLAILoss",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Functions.DeltaFunction, Models",
                              "StartStageName": "EarlyReproductive",
                              "Name": "DailyLAILoss",
                              "ResourceName": null,
                              "Children": [
                                {
                                  "$type": "Models.Functions.VariableReference, Models",
                                  "VariableName": "[SCRUM].Stover.LAI",
                                  "Name": "Integral",
                                  "ResourceName": null,
                                  "Children": [],
                                  "Enabled": true,
                                  "ReadOnly": false
                                }
                              ],
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.Constant, Models",
                              "FixedValue": -1.0,
                              "Units": null,
                              "Name": "Invert",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.AccumulateFunctionGeneral, Models",
                      "AccumulateEventName": "[Clock].PartitioningComplete",
                      "StartStageName": "Seed",
                      "EndStageName": "",
                      "StartEventName": null,
                      "EndEventName": null,
                      "StartDate": null,
                      "EndDate": null,
                      "ReduceStageName": null,
                      "FractionRemovedOnStage": 0.0,
                      "ReduceEventName": "",
                      "FractionRemovedOnEvent": 0.0,
                      "ReduceDates": null,
                      "FractionRemovedOnDate": 0.0,
                      "FractionRemovedOnCut": 0.0,
                      "FractionRemovedOnHarvest": 1.0,
                      "FractionRemovedOnGraze": 0.0,
                      "FractionRemovedOnPrune": 0.0,
                      "Name": "Removal",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Stover].LAIDeadRemoved",
                          "Name": "VariableReference",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.SigmoidFunction, Models",
                  "Name": "HeightFunction",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Ymax",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "This represents the maximum height for the plant, it is reached at the LateReproductive phase. The height is not affected by water or N stresses.  \nSCRUM gets the value for this parameter during run-time, when the crop is established. The value is set on ScrumCropInstance or CropManagement script.\n",
                          "Name": "Parameter set at establishment",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].AccumulatedEmergedTt",
                      "Name": "XValue",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Xo",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "SCRUM calculates this parameter during run-time, when the crop is being established. This is done in ScrumCropInstance based on parameter values set in the relevant ScrumCrop and CropManagement script\n",
                          "Name": "Parameter set at establishment",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "b",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "SCRUM calculates this parameter during run-time, when the crop is being established. This is done in ScrumCropInstance based on parameter values set in the relevant ScrumCrop and CropManagement script\n",
                          "Name": "Parameter set at establishment",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "SenescenceRate",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "DetachmentRate",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "RemobilisationCost",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "DMReallocationFactor",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "DMRetranslocationFactor",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.PhaseLookupValue, Models",
                  "Start": "Emergence",
                  "End": "MidReproductive",
                  "Name": "NitrogenDemandSwitch",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "Constant",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "NReallocationFactor",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "NRetranslocationFactor",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Library.BiomassRemoval, Models",
                  "HarvestFractionLiveToRemove": 0.0,
                  "HarvestFractionDeadToRemove": 0.0,
                  "HarvestFractionLiveToResidue": 1.0,
                  "HarvestFractionDeadToResidue": 1.0,
                  "Name": "BiomassRemovalDefaults",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.NutrientDemandFunctions, Models",
                  "Name": "DMDemands",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Structural",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.DemandFunctions.PartitionFractionDemandFunction, Models",
                          "Name": "DMDemandFunction",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Memo, Models",
                              "Text": "DM demand is based on a simple partitioning coefficients.  At harvest the biomass partitioned to the stover = TotalDM * (1 - RootProportion) * (1 - Harvest index).  However the partitioningFraction is more complicated that this as it partitions more biomass to the stover in the CanopyExpanding Phase and less in the Yield increasing phase to give realistic patterns of accumulation of biomass in the Stover and Product over the duration of the crop\n",
                              "Name": "Description",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.DivideFunction, Models",
                              "Name": "PartitionFraction",
                              "ResourceName": null,
                              "Children": [
                                {
                                  "$type": "Models.Functions.VariableReference, Models",
                                  "VariableName": "[Stover].DMAtHarvest",
                                  "Name": "StoverDMAtHarvest",
                                  "ResourceName": null,
                                  "Children": [],
                                  "Enabled": true,
                                  "ReadOnly": false
                                },
                                {
                                  "$type": "Models.Functions.VariableReference, Models",
                                  "VariableName": "[Scrum].TotalDMAtHarvest",
                                  "Name": "TotalDMAtHarvest",
                                  "ResourceName": null,
                                  "Children": [],
                                  "Enabled": true,
                                  "ReadOnly": false
                                }
                              ],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.Constant, Models",
                          "FixedValue": 1.0,
                          "Units": "0-1",
                          "Name": "StructuralFraction",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Metabolic",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Storage",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "QStructuralPriority",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "QMetabolicPriority",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "QStoragePriority",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.NutrientDemandFunctions, Models",
                  "Name": "NDemands",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Structural",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Stover].minimumNconc",
                          "Name": "MinNConc",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Stover].potentialDMAllocation.Structural",
                          "Name": "PotentialDMAllocation",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Metabolic",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.SubtractFunction, Models",
                          "Name": "MetabolicNConc",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Stover].criticalNConc",
                              "Name": "CritNConc",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Stover].minimumNconc",
                              "Name": "MinNConc",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Stover].potentialDMAllocation.Structural",
                          "Name": "PotentialDMAllocation",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.DemandFunctions.StorageNDemandFunction, Models",
                      "Name": "Storage",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Stover].nitrogenDemandSwitch",
                          "Name": "NitrogenDemandSwitch",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Stover].MaximumNconc",
                          "Name": "MaxNConc",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "QStructuralPriority",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "QMetabolicPriority",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "QStoragePriority",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Organs.Root, Models",
              "DMSupply": null,
              "NSupply": null,
              "DMDemand": null,
              "NDemand": null,
              "potentialDMAllocation": null,
              "GrowthRespiration": 0.0,
              "MaintenanceRespiration": 0.0,
              "Name": "Root",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Memo, Models",
                  "Text": "This organ represents the biomass below ground that is typically not removed at harvest. The processes related to water and nitrogen uptake are handled through this organ, which also contains the information about the distribution or roots over the soil profile.  \nThe SCRUM model assumes that a fixed proportion of biomass is allocated to roots as the crop grows, and that it has a fixed N concentration. No retranslocation for either biomass or N is enabled from roots.  \nThe roots grow over time is controlled by thermal time, reaching is maximum(MaximumRootDepth) at the end of the EarlyReproductive phase.\n",
                  "Name": "Description",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.NutrientPoolFunctions, Models",
                  "Name": "InitialWt",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": "g/m^2",
                      "Name": "Structural",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": "g/m^2",
                      "Name": "Metabolic",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": "g/m^2",
                      "Name": "Storage",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "g/g",
                  "Name": "MaximumNConc",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "SCRUM gets the value for this parameter during run-time, when the crop is established. The value is set on ScrumCropInstance or CropManagement script.\n",
                      "Name": "Parameter set at establishment",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.VariableReference, Models",
                  "VariableName": "[Root].MaximumNConc",
                  "Name": "CriticalNConc",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.VariableReference, Models",
                  "VariableName": "[Root].MaximumNConc",
                  "Name": "MinimumNConc",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.4,
                  "Units": "g/g",
                  "Name": "CarbonConcentration",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.1,
                  "Units": "g/g",
                  "Name": "RootProportion",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "This represents the ratio between the biomass of roots to the otehr organs (Product plus Stover), akin to root to shoot ratio for crops that have product aboveground only.  \nSCRUM gets the value for this parameter during run-time, when the crop is established. The value is set on ScrumCropInstance or CropManagement script.\n",
                      "Name": "Parameter set at establishment",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.MultiplyFunction, Models",
                  "Name": "DMAtHarvest",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "This is the expected biomass for Roots at harvest time expressed in dry matter basis.\n",
                      "Name": "Description",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[SCRUM].AboveGroundDMAtHarvest",
                      "Name": "AbovegroundDMAtHarvest",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Root].RootProportion",
                      "Name": "PartitionFraction",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 1.0,
                  "Units": "0-1",
                  "Name": "DMConversionEfficiency",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "MaintenanceRespirationFunction",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.RootShape.RootShapeCylinder, Models",
                  "Name": "RootShape",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 40.0,
                  "Units": "m/g",
                  "Name": "SpecificRootLength",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "mm",
                  "Name": "MaximumRootDepth",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "SCRUM gets the value for this parameter during run-time, when the crop is established. The value is set on ScrumCropInstance or CropManagement script\n",
                      "Name": "Parameter set at establishment",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.MultiplyFunction, Models",
                  "Name": "RootFrontVelocity",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.LessThanFunction, Models",
                      "Name": "RootFrontVelocity",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Phenology].AccumulatedEmergedTt",
                          "Name": "TestVariable",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.AddFunction, Models",
                          "Name": "GrowthDuration",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Phenology].Seed.Target",
                              "Name": "Emerging",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Phenology].Seedling.Target",
                              "Name": "Seedling",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Phenology].Vegetative.Target",
                              "Name": "Vegetative",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Phenology].EarlyReproductive.Target",
                              "Name": "EarlyReproductive",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.DivideFunction, Models",
                          "Name": "IfTrue",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Root].MaximumRootDepth",
                              "Name": "MaxRootDepth",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Root].RootFrontVelocity.RootFrontVelocity.GrowthDuration",
                              "Name": "GrowthDuration",
                              "ResourceName": null,
                              "Children": [],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.Constant, Models",
                          "FixedValue": 0.0,
                          "Units": null,
                          "Name": "IfFalse",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].ThermalTime",
                      "Name": "ThermalTime",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.KLModiferVsDepthFunction, Models",
                  "Name": "KLModifier",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Physical].DepthMidPoints",
                      "Name": "LayerDepth",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Root].MaximumRootDepth",
                      "Name": "MaximumRootDepth",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 1.0,
                  "Units": null,
                  "Name": "SoilWaterEffect",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "SenescenceRate",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "RemobilisationCost",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 1.0,
                  "Units": null,
                  "Name": "NitrogenDemandSwitch",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.LinearInterpolationFunction, Models",
                  "Name": "KNO3",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.XYPairs, Models",
                      "X": [
                        0.0,
                        0.003
                      ],
                      "Y": [
                        0.02,
                        0.02
                      ],
                      "Name": "XYPairs",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Root].LengthDensity",
                      "Name": "XValue",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.LinearInterpolationFunction, Models",
                  "Name": "KNH4",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.XYPairs, Models",
                      "X": [
                        0.0,
                        0.003
                      ],
                      "Y": [
                        0.0,
                        0.0
                      ],
                      "Name": "XYPairs",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Root].LengthDensity",
                      "Name": "XValue",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.LinearInterpolationFunction, Models",
                  "Name": "NUptakeSWFactor",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.XYPairs, Models",
                      "X": [
                        0.0,
                        1.0
                      ],
                      "Y": [
                        1.0,
                        1.0
                      ],
                      "Name": "XYPairs",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Root].RWC",
                      "Name": "XValue",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 30.0,
                  "Units": "kg N/ha/d",
                  "Name": "MaxDailyNUptake",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Library.BiomassRemoval, Models",
                  "HarvestFractionLiveToRemove": 0.0,
                  "HarvestFractionDeadToRemove": 0.0,
                  "HarvestFractionLiveToResidue": 1.0,
                  "HarvestFractionDeadToResidue": 1.0,
                  "Name": "BiomassRemovalDefaults",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.NutrientDemandFunctions, Models",
                  "Name": "DMDemands",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Structural",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.DemandFunctions.PartitionFractionDemandFunction, Models",
                          "Name": "DMDemandFunction",
                          "ResourceName": null,
                          "Children": [
                            {
                              "$type": "Models.Functions.DivideFunction, Models",
                              "Name": "PartitionFraction",
                              "ResourceName": null,
                              "Children": [
                                {
                                  "$type": "Models.Functions.VariableReference, Models",
                                  "VariableName": "[Root].DMAtHarvest",
                                  "Name": "RootDMAtHarvest",
                                  "ResourceName": null,
                                  "Children": [],
                                  "Enabled": true,
                                  "ReadOnly": false
                                },
                                {
                                  "$type": "Models.Functions.VariableReference, Models",
                                  "VariableName": "[Scrum].TotalDMAtHarvest",
                                  "Name": "TotalDMAtHarvest",
                                  "ResourceName": null,
                                  "Children": [],
                                  "Enabled": true,
                                  "ReadOnly": false
                                }
                              ],
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.Constant, Models",
                          "FixedValue": 1.0,
                          "Units": null,
                          "Name": "StructuralFraction",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Metabolic",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Storage",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "QStructuralPriority",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "QMetabolicPriority",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "QStoragePriority",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.NutrientDemandFunctions, Models",
                  "Name": "NDemands",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Structural",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Root].MinimumNconc",
                          "Name": "MinNConc",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Root].potentialDMAllocation.Structural",
                          "Name": "PotentialDMAllocation",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Metabolic",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Storage",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "QStructuralPriority",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "QMetabolicPriority",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "QStoragePriority",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Organs.Nodule, Models",
              "DMSupply": null,
              "NSupply": null,
              "DMDemand": null,
              "NDemand": null,
              "potentialDMAllocation": null,
              "Name": "Nodule",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Memo, Models",
                  "Text": "This is parameterised as a dummy organ, it can supply nitrogen if the plant is a legume, but has no biomass (DM or N) nor any other function. The organ is 'activated' using a switch, which should be turned on for legume crops (so N fixation can be added as supply to the Arbitrator to help covering the crop N demand). To turn this feature on, the value for LegumeFactor should be set to a non-zero value, this parameter represents the proportion of the potential N fixation rate that the nodules are capable of supplying. The potential fixation is linked to the daily fixation and controlled by the MaximumFixation parameter. Nitrogen fixation is switched off by setting LegumeFactor to zero.\n",
                  "Name": "Description",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "g/m^2",
                  "Name": "InitialWtFunction",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "g/g",
                  "Name": "MaximumNConc",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "g/g",
                  "Name": "CriticalNConc",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "g/g",
                  "Name": "MinimumNConc",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.4,
                  "Units": "g/g",
                  "Name": "CarbonConcentration",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 1.0,
                  "Units": "0-1",
                  "Name": "DMConversionEfficiency",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "0-1",
                  "Name": "MaintenanceRespirationFunction",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.MultiplyFunction, Models",
                  "Name": "FixationRate",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.03,
                      "Units": "g N / g Photosynthesis",
                      "Name": "MaximumFixation",
                      "ResourceName": null,
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "This represents the maximum concentration in the plant that N fixation can maintain.\n",
                          "Name": "memo",
                          "ResourceName": null,
                          "Children": [],
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Stover].Photosynthesis",
                      "Name": "DailyPhotosynthesis",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[SCRUM].LegumeFactor",
                      "Name": "LegumeFactor",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "FixationMetabolicCost",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "SenescenceRate",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "DetachmentRateFunction",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "RemobilisationCost",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "DMReallocationFactor",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "DMRetranslocationFactor",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "NitrogenDemandSwitch",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "NReallocationFactor",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "NRetranslocationFactor",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Library.BiomassRemoval, Models",
                  "HarvestFractionLiveToRemove": 0.0,
                  "HarvestFractionDeadToRemove": 0.0,
                  "HarvestFractionLiveToResidue": 0.0,
                  "HarvestFractionDeadToResidue": 0.0,
                  "Name": "BiomassRemovalDefaults",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.NutrientPoolFunctions, Models",
                  "Name": "DMDemands",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Structural",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Metabolic",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Storage",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.NutrientPoolFunctions, Models",
                  "Name": "NDemands",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Structural",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Metabolic",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Storage",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.CompositeBiomass, Models",
              "OrganNames": [
                "Stover",
                "Product",
                "Root"
              ],
              "IncludeLive": true,
              "IncludeDead": true,
              "Name": "Total",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.CompositeBiomass, Models",
              "OrganNames": [
                "Stover",
                "Product"
              ],
              "IncludeLive": true,
              "IncludeDead": true,
              "Name": "AboveGround",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Memo, Models",
                  "Text": "The AboveGround composite biomass object includes Stover and Product organs.\n",
                  "Name": "memo",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Functions.Constant, Models",
              "FixedValue": 0.0,
              "Units": null,
              "Name": "MortalityRate",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Functions.Constant, Models",
              "FixedValue": 0.0,
              "Units": null,
              "Name": "SeedMortalityRate",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Functions.Constant, Models",
              "FixedValue": 1.0,
              "Units": "0-1",
              "Name": "LegumeFactor",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Memo, Models",
                  "Text": "This parameter controls the potential N fixation for the crop. It varies from zero, no fixation, to one when fixation is at its maximum.  \nSCRUM gets the value for this parameter during run-time, when the crop is established. The value is set on ScrumCropInstance or CropManagement script.\n",
                  "Name": "Parameter set at establishment",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Functions.DivideFunction, Models",
              "Name": "AbovegroundDMAtHarvest",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Functions.VariableReference, Models",
                  "VariableName": "[Product].DMAtHarvest",
                  "Name": "ProductDMAtHarvest",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.VariableReference, Models",
                  "VariableName": "[Product].HarvestIndex",
                  "Name": "HarvestIndex",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Functions.AddFunction, Models",
              "Name": "TotalDMAtHarvest",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Functions.VariableReference, Models",
                  "VariableName": "[SCRUM].AbovegroundDMAtHarvest",
                  "Name": "AbovegroundDMAtHarvest",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.VariableReference, Models",
                  "VariableName": "[Root].DMAtHarvest",
                  "Name": "RootDMAtHarvest",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Functions.Constant, Models",
              "FixedValue": 0.04,
              "Units": null,
              "Name": "MaxNConcAtSeedling",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Memo, Models",
                  "Text": "This represents the maximum N concentration for Stover and Product at Seedling stage. SCRUM assumes that the value for naximum N concentration decreases as plants grow, strating with the value given here and reaching values specific for each organ at Maturity.  \nSCRUM gets the value for this parameter during run-time, when the crop is established. The value is set on ScrumCropInstance or CropManagement script.\n\n",
                  "Name": "Parameter set at establishment",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Functions.Constant, Models",
              "FixedValue": 2.0,
              "Units": null,
              "Name": "NDilutionConstant",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Memo, Models",
                  "Text": "This parameters controls how the maximum N concentration for Stover and Product decrease over time. Follows a exponential decrease from MaxNConcAtSeedling.  \nSCRUM gets the value for this parameter during run-time, when the crop is established. The value is set on ScrumCropInstance or CropManagement script.\n",
                  "Name": "Parameter set at establishment",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Core.Simulation, Models",
      "Descriptors": null,
      "Name": "SCRUMSinglePlantingFromManager",
      "ResourceName": null,
      "Children": [
        {
          "$type": "Models.Memo, Models",
          "Text": "This example runs scrum in the simplest way.   The necessary components in the Field are:\n* the SCRUM model.\n* A SCRUMCropInstance, named SCRUMCereal in this case but the name can be anything.\n* A manager model called EstablishCrop that sets the management information for SCRUMCereal on the first day and establishes the crop on the appropriate day.  \n",
          "Name": "Description",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Climate.Weather, Models",
          "ConstantsFile": null,
          "FileName": "%root%/Tests/WeatherFiles/lincoln.met",
          "ExcelWorkSheetName": null,
          "Name": "Weather",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Clock, Models",
          "Start": "2000-07-01T00:00:00",
          "End": "2001-06-30T00:00:00",
          "Name": "Clock",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Summary, Models",
          "Verbosity": 100,
          "Name": "Summary",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
          "Name": "Soil Arbitrator",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Zone, Models",
          "Area": 1.0,
          "Slope": 0.0,
          "AspectAngle": 0.0,
          "Altitude": 50.0,
          "Name": "Field",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Soils.Soil, Models",
              "RecordNumber": 0,
              "ASCOrder": null,
              "ASCSubOrder": null,
              "SoilType": null,
              "LocalName": null,
              "Site": null,
              "NearestTown": null,
              "Region": null,
              "State": null,
              "Country": null,
              "NaturalVegetation": null,
              "ApsoilNumber": null,
              "Latitude": 0.0,
              "Longitude": 0.0,
              "LocationAccuracy": null,
              "YearOfSampling": null,
              "DataSource": null,
              "Comments": null,
              "Name": "Soil",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Soils.Chemical, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "PH": [
                    6.6,
                    6.2,
                    5.7,
                    5.5,
                    5.5,
                    5.5
                  ],
                  "PHUnits": 0,
                  "EC": null,
                  "ESP": null,
                  "CEC": [
                    12.440000000000001,
                    11.6525,
                    11.045,
                    10.662500000000001,
                    9.4025,
                    9.4025
                  ],
                  "ECMetadata": null,
                  "CLMetadata": null,
                  "CECMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "ESPMetadata": null,
                  "PHMetadata": null,
                  "Name": "Chemical",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Water, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.33,
                    0.33,
                    0.31,
                    0.15,
                    0.1,
                    0.06
                  ],
                  "InitialPAWmm": 180.0,
                  "RelativeTo": "LL15",
                  "FilledFromTop": false,
                  "Name": "Water",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Physical, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "ParticleSizeSand": [
                    5.0,
                    5.0,
                    5.0,
                    5.0,
                    5.0,
                    5.0
                  ],
                  "ParticleSizeSilt": [
                    65.0,
                    65.0,
                    65.0,
                    65.0,
                    65.0,
                    65.0
                  ],
                  "ParticleSizeClay": [
                    30.0,
                    30.0,
                    30.0,
                    30.0,
                    30.0,
                    30.0
                  ],
                  "Rocks": [
                    0.0,
                    0.0,
                    0.1353355580274379,
                    0.0,
                    0.1353355580274379,
                    0.1353355580274379
                  ],
                  "Texture": null,
                  "BD": [
                    1.2,
                    1.2,
                    1.2,
                    1.2,
                    1.2,
                    1.2
                  ],
                  "AirDry": [
                    0.08,
                    0.13,
                    0.1,
                    0.06,
                    0.04,
                    0.02
                  ],
                  "LL15": [
                    0.13,
                    0.13,
                    0.1,
                    0.06,
                    0.04,
                    0.02
                  ],
                  "DUL": [
                    0.33,
                    0.33,
                    0.31,
                    0.15,
                    0.1,
                    0.06
                  ],
                  "SAT": [
                    0.5,
                    0.5,
                    0.44,
                    0.46,
                    0.44,
                    0.44
                  ],
                  "KS": null,
                  "BDMetadata": null,
                  "AirDryMetadata": null,
                  "LL15Metadata": null,
                  "DULMetadata": null,
                  "SATMetadata": null,
                  "KSMetadata": null,
                  "RocksMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "TextureMetadata": null,
                  "ParticleSizeSandMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "ParticleSizeSiltMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "ParticleSizeClayMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "Name": "Physical",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.13,
                        0.13,
                        0.1,
                        0.08,
                        0.11,
                        0.11
                      ],
                      "KL": [
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "KLMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "XFMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "Name": "SCRUMSoil",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.13,
                        0.13,
                        0.27,
                        0.27,
                        0.3,
                        0.3
                      ],
                      "KL": [
                        0.1,
                        0.06,
                        0.03,
                        0.01,
                        0.0,
                        0.0
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        0.1,
                        0.0,
                        0.0,
                        0.0
                      ],
                      "LLMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "KLMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "XFMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "Name": "PotatoSoil",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.WaterModel.WaterBalance, Models",
                  "SummerDate": "1-Nov",
                  "SummerU": 9.0,
                  "SummerCona": 4.4,
                  "WinterDate": "1-Apr",
                  "WinterU": 9.0,
                  "WinterCona": 4.4,
                  "DiffusConst": 88.0,
                  "DiffusSlope": 35.4,
                  "Salb": 0.18,
                  "CN2Bare": 68.0,
                  "CNRed": 20.0,
                  "CNCov": 0.8,
                  "DischargeWidth": 0.0,
                  "CatchmentArea": 0.0,
                  "PSIDul": -100.0,
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "SWCON": [
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55
                  ],
                  "KLAT": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "Name": "SoilWater",
                  "ResourceName": "WaterBalance",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Nutrients.Nutrient, Models",
                  "Name": "Nutrient",
                  "ResourceName": "Nutrient",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Organic, Models",
                  "FOMCNRatio": 30.0,
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "Carbon": [
                    1.82,
                    1.47,
                    1.2,
                    1.03,
                    0.47,
                    0.47
                  ],
                  "CarbonUnits": 0,
                  "SoilCNRatio": [
                    11.5,
                    11.5,
                    11.5,
                    11.5,
                    11.5,
                    11.5
                  ],
                  "FBiom": [
                    0.025,
                    0.025,
                    0.015,
                    0.01,
                    0.01,
                    0.01
                  ],
                  "FInert": [
                    0.3,
                    0.4,
                    0.75,
                    0.9,
                    0.96,
                    0.96
                  ],
                  "FOM": [
                    1243.9310541346904,
                    833.8319214727269,
                    457.61666105087295,
                    251.1453484552152,
                    137.83148958311097,
                    75.64352530338392
                  ],
                  "CarbonMetadata": null,
                  "FOMMetadata": null,
                  "Name": "Organic",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.LayerStructure, Models",
                  "Thickness": [
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0
                  ],
                  "Name": "LayerStructure",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    225.0,
                    12.5,
                    1.3888888888888928,
                    1.3888888888888928,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "ConcInSolution": null,
                  "Name": "NO3",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "ConcInSolution": null,
                  "Name": "NH4",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 1,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "ConcInSolution": null,
                  "Name": "Urea",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.SoilTemp.SoilTemperature, Models",
                  "Thickness": null,
                  "InitialValues": null,
                  "Name": "Temperature",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Surface.SurfaceOrganicMatter, Models",
              "SurfOM": [],
              "Canopies": [],
              "InitialResidueName": "wheat",
              "InitialResidueType": "wheat",
              "InitialResidueMass": 2000.0,
              "InitialStandingFraction": 0.0,
              "InitialCPR": 0.0,
              "InitialCNR": 80.0,
              "Name": "SurfaceOrganicMatter",
              "ResourceName": "SurfaceOrganicMatter",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.MicroClimate, Models",
              "a_interception": 0.0,
              "b_interception": 1.0,
              "c_interception": 0.0,
              "d_interception": 0.0,
              "SoilHeatFluxFraction": 0.4,
              "MinimumHeightDiffForNewLayer": 0.0,
              "NightInterceptionFraction": 0.5,
              "ReferenceHeight": 2.0,
              "Name": "MicroClimate",
              "ResourceName": "MicroClimate",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "Name": "SCRUM",
              "ResourceName": "SCRUM",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Irrigation, Models",
              "Name": "Irrigation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Fertiliser, Models",
              "Name": "Fertiliser",
              "ResourceName": "Fertiliser",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using System;",
                "using System.Linq;",
                "using APSIM.Shared.Utilities;",
                "using Models.Core;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.PMF.SimplePlantModels;",
                "using Models.Utilities;",
                "",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    public class Script : Model",
                "    {",
                "        [Link] Clock clock;",
                "        [Link] Zone zone;",
                "        [Link(Type = LinkType.Scoped, ByName = true)]",
                "        public Plant scrum = null;",
                "",
                "        [Separator(\"Define the SCRUM crop to plant and its basic management\")]",
                "",
                "        /// <summary>SCRUM crop to stablish</summary>",
                "        [Description(\"Chose the crop to plant:\")]",
                "        [Display(Type = DisplayType.SCRUMcropName)]",
                "        public string CropName { get; set; }",
                "",
                "        [Separator(\"Specify establishment and harvest conditions for this crop\")]",
                "",
                "        /// <summary>Date to establishment the crop</summary>",
                "        [Description(\"Establishment date (dd-mmm or dd/mm/yyyy):\")]",
                "        public string EstablishDate { get; set; }",
                "",
                "        /// <summary>Stages at which the SCRUM is established</summary>",
                "        [Description(\"Choose the establishment stage\")]",
                "        [Display(Type = DisplayType.ScrumEstablishStages)]",
                "        public string EstablishStage {get; set;}",
                "",
                "        /// <summary>Depth at which the crop/seeds are planted.</summary>",
                "        [Description(\" Planting depth (mm):\")]",
                "        public double PlantingDepth { get; set; }",
                "",
                "        /// <summary>Choice on how the duration of crop is defined</summary>",
                "        [Description(\"Choose how the crop cycle is defined:\")]",
                "        public HarvestTimingOption HarvestTimeOption {get; set;}",
                "",
                "        private bool isHarvestDateDefined { get { return HarvestTimeOption == HarvestTimingOption.SettingDate; } }",
                "        private bool isThermalTimeDefined { get { return HarvestTimeOption == HarvestTimingOption.SettingThermalTime; } }",
                "",
                "        /// <summary>Date to establishment the crop</summary>",
                "        [Description(\"  Harvest date (dd/mm/yyyy):\")]",
                "        [Display(VisibleCallback = \"isHarvestDateDefined\")]",
                "        public DateTime HarvestDate { get; set; }",
                "",
                "        /// <summary>Thermal time from establishment to harvest (if blank or zero must specify harvest date)</summary>",
                "        [Description(\"  Thermal time from establishment to harvest (oCd):\")]",
                "        [Display(VisibleCallback = \"isThermalTimeDefined\")]",
                "        public double Tt_EstablishToHarvest { get; set; }",
                "",
                "        /// <summary>Stage at which the crop is to be harvested at</summary>",
                "        [Description(\"Choose the stage to harvest the crop:\")]",
                "        [Display(Type = DisplayType.ScrumHarvestStages)]",
                "        public string HarvestStage {get; set;}",
                "",
                "        [Separator(\"Specify an appropriate potential yield for the crop (based on assumed genotype, sowing date, and local conditions)\\n\" +",
                "                   \"  *SCRUM will reduce yield if water or N stress are predicted\")]",
                "",
                "        /// <summary>Expected crop yield (t FW/ha)</summary>",
                "        [Description(\"Potential crop yield, fresh weight (t/ha)\")]",
                "        public double ExpectedYield {get; set;}",
                "",
                "        [Separator(\"Specify proportions of field loss and residue removal at harvest\")]",
                "",
                "        /// <summary>Proportion of product that is left in the field at harvest (due to disease, market, ect.)</summary>",
                "        [Description(\"Proportion of product lost in the field at harvest (0-1):\")]",
                "        public double FieldLoss { get; set; }",
                "",
                "        /// <summary>Proportion of stover that is removed from the field at harvest (e.g., bailing)</summary>",
                "        [Description(\"Proportion of stover removed from the field at harvest (0-1):\")]",
                "        public double ResidueRemoval { get; set; }",
                "",
                "        /// <summaryProportion of residues that is incorporated by cultivation after harvest</summary>",
                "        [Description(\"Proportion of residue incorporated to soil at harvest (0-1):\")]",
                "        public double ResidueIncorporation { get; set; }",
                "",
                "        /// <summary>Depth down to which the residues that are incorporated to by cultivation after harvest</summary>",
                "        [Description(\"Depth to incorporate residues (mm):\")]",
                "        public double ResidueIncorporationDepth { get; set; }",
                "",
                "        private ScrumManagementInstance management;",
                "",
                "",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "            if (DateUtilities.DatesAreEqual(EstablishDate, clock.Today))",
                "            {",
                "                if (isHarvestDateDefined && (HarvestDate <= clock.Today))",
                "                {",
                "                    throw new Exception(\"Harvest date is earlier than establishment date\");",
                "                }",
                "",
                "                management = new ScrumManagementInstance(cropName: CropName,",
                "                                                         establishDate: clock.Today,",
                "                                                         establishStage: EstablishStage,",
                "                                                         plantingDepth: PlantingDepth,",
                "                                                         harvestStage: HarvestStage,",
                "                                                         expectedYield: ExpectedYield,",
                "                                                         harvestDate: isHarvestDateDefined? HarvestDate : null,",
                "                                                         ttEstablishmentToHarvest: isThermalTimeDefined? Tt_EstablishToHarvest: double.NaN,",
                "                                                         fieldLoss: FieldLoss,",
                "                                                         residueRemoval: ResidueRemoval,",
                "                                                         residueIncorporation: ResidueIncorporation,",
                "                                                         residueIncorporationDepth: ResidueIncorporationDepth);",
                "                ScrumCropInstance currentCrop = zone.FindDescendant<ScrumCropInstance>(CropName);",
                "                currentCrop.Establish(management);",
                "            }",
                "        }",
                "",
                "        /// <summary>Flag how harvest time is defined.</summary>",
                "        public enum HarvestTimingOption",
                "        {",
                "            /// <summary>A date is to be used.</summary>",
                "            SettingDate,",
                "            /// <summary>A given thermal time sum is to be used.</summary>",
                "            SettingThermalTime",
                "        }",
                "    }",
                "}",
                ""
              ],
              "Parameters": [
                {
                  "Key": "CropName",
                  "Value": "ScrumCereal"
                },
                {
                  "Key": "EstablishDate",
                  "Value": "14/10/2000"
                },
                {
                  "Key": "EstablishStage",
                  "Value": "Seed"
                },
                {
                  "Key": "PlantingDepth",
                  "Value": "15"
                },
                {
                  "Key": "HarvestTimeOption",
                  "Value": "SettingThermalTime"
                },
                {
                  "Key": "HarvestDate",
                  "Value": "01/01/0001 00:00:00"
                },
                {
                  "Key": "Tt_EstablishToHarvest",
                  "Value": "1500"
                },
                {
                  "Key": "HarvestStage",
                  "Value": "Maturity"
                },
                {
                  "Key": "ExpectedYield",
                  "Value": "8"
                },
                {
                  "Key": "FieldLoss",
                  "Value": "0"
                },
                {
                  "Key": "ResidueRemoval",
                  "Value": "0"
                },
                {
                  "Key": "ResidueIncorporation",
                  "Value": "1"
                },
                {
                  "Key": "ResidueIncorporationDepth",
                  "Value": "150"
                }
              ],
              "Name": "EstablishCrop",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "// This script can be used to apply irrigation automatically, based soil water status",
                "// Blame to RCichota, last updated in 18/Mar/2025",
                "",
                "using System;",
                "using System.Xml.Serialization;",
                "using Newtonsoft.Json;",
                "using APSIM.Shared.Utilities;",
                "using Models.Core;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.Interfaces;",
                "using Models.Soils.Nutrients;",
                "",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    [System.Xml.Serialization.XmlInclude(typeof(Model))]",
                "    public class Script : Model",
                "    {",
                "        //Communication to other modules",
                "        [Link] private Clock clock;",
                "        [Link] private ISummary summary;",
                "        [Link] private IPhysical soilPhysical;",
                "        [Link] private ISoilWater waterBalance;",
                "        [Link] private Irrigation Irrigation;",
                "        [Link] private Plant SCRUM;",
                "",
                "        //User inputs from properties tab",
                "        [Separator(\"Generic irrigation management\")]",
                "        [Description(\" Enable automatic irrigation management?              \")]",
                "        public bool IrrigationIsEnabled {get; set;}",
                "",
                "        [Description(\" Date to start the irrigation season (dd-mmm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public string SeasonStartDate {get; set;}",
                "",
                "        [Description(\" Date to end the irrigation season (dd-mmm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public string SeasonEndDate {get; set;}",
                "",
                "        [Description(\" Only irrigate if there is a crop on the field?\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public bool OnlyApplyOntoCrop {get; set;}",
                "",
                "        [Description(\" Season allocation (mm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double SeasonsAllocation {get; set;}",
                "",
                "        [Description(\" Fraction of PAWC to trigger irrigation (0-1):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double TriggerFraction {get; set;}",
                "",
                "        [Description(\" Fraction of PAWC to refill soil to (0-1):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double RefillFraction {get; set;}",
                "",
                "        [Description(\" Maximum irrigation amount per application (mm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double MaximumIrrigationAmount {get; set;}",
                "",
                "        [Description(\" Minimum number of days between irrigations:\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double ReturnDays {get; set;}",
                "",
                "        [Description(\" Depth to calculate PAWC (mm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double DepthToMonitor {get; set;}",
                "",
                "        [Description(\" Limit the depth to the rooting depth?\")]",
                "        [Display(VisibleCallback = \"IrrigOnAndOnlyOnCrops\")]",
                "        public bool LimitMonitoringDepth {get; set;}",
                "",
                "        //Class members",
                "        [JsonIgnore] public bool SeasonIsOpen {get; set;}",
                "        [JsonIgnore] private bool CropIsActive {get; set;}",
                "        [JsonIgnore] private bool IrrigatorIsAvailable {get; set;}",
                "        [JsonIgnore] private bool SoilIsDry {get; set;}",
                "        [JsonIgnore] private bool WaterIsAvailable {get; set;}",
                "",
                "        [JsonIgnore] public double MonitoredLayerTrigger {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerTarget {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerDUL {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerLL {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerSW {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerPAWC {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerPAW {get; set;}",
                "        [JsonIgnore] public double MonitoredDepth {get; set;}",
                "",
                "        [JsonIgnore] public double AmountToApply {get; set;}",
                "        [JsonIgnore] public double SeasonAppliedAmount {get; set;}",
                "        [JsonIgnore] public double DaysSinceLastApplication {get; set;}",
                "",
                "        //Internal Variables",
                "        private bool IrrigOnAndOnlyOnCrops",
                "        { get {return IrrigationIsEnabled && OnlyApplyOntoCrop; }}",
                "        private double lastLayerFraction;",
                "        private int lastLayer;",
                "",
                "",
                "        [EventSubscribe(\"StartOfSimulation\")]",
                "        private void OnStartOfSimulation(object sender, EventArgs e)",
                "        {",
                "            // initialise some variables",
                "            DaysSinceLastApplication = ReturnDays;",
                "            if (!OnlyApplyOntoCrop)",
                "            {",
                "                LimitMonitoringDepth = false;",
                "            }",
                "",
                "            // calculate soil water variables",
                "            calculateWaterThresholds(DepthToMonitor);",
                "            MonitoredLayerTrigger = MonitoredLayerLL + MonitoredLayerPAWC*TriggerFraction;",
                "            MonitoredLayerTarget = MonitoredLayerLL + MonitoredLayerPAWC*RefillFraction;",
                "            MonitoredDepth = DepthToMonitor;",
                "        }",
                "",
                "        [EventSubscribe(\"StartOfDay\")]",
                "        private void OnStartOfDay(object sender, EventArgs e)",
                "        {",
                "            // check whether we are starting a new season, zero amount",
                "            if (DateUtilities.DatesAreEqual(SeasonStartDate, clock.Today))",
                "            {",
                "                SeasonAppliedAmount = 0.0;",
                "            }",
                "        }",
                "",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "            // get the current amount of water in the soil",
                "            if (LimitMonitoringDepth)",
                "            { // get the current rooting depth, no less than 50mm, no more than DepthToMonitor",
                "                MonitoredDepth = DepthToMonitor;",
                "                if (SCRUM.IsAlive)",
                "                {",
                "                    MonitoredDepth = Math.Min(DepthToMonitor, Math.Max(50.0, SCRUM.Root.Depth));",
                "                }",
                "",
                "                // re-calculate the soil water variables",
                "                calculateWaterThresholds(MonitoredDepth);",
                "                MonitoredLayerTrigger = MonitoredLayerLL + MonitoredLayerPAWC*TriggerFraction;",
                "                MonitoredLayerTarget = MonitoredLayerLL + MonitoredLayerPAWC*RefillFraction;",
                "            }",
                "",
                "            calculateSoilWater(MonitoredDepth);",
                "",
                "            // check water status and management conditions, if we can irrigate at all",
                "            if (IrrigationIsEnabled)",
                "            {",
                "                DaysSinceLastApplication += 1;",
                "",
                "                // are we within the irrigation season?",
                "                SeasonIsOpen = false;",
                "                if (DateUtilities.WithinDates(SeasonStartDate, clock.Today, SeasonEndDate))",
                "                {",
                "                    SeasonIsOpen = true;",
                "                }",
                "",
                "                // is there a crop in the ground that needs irrigation?",
                "                CropIsActive = true;",
                "                if (OnlyApplyOntoCrop)",
                "                {",
                "                    CropIsActive = false;",
                "                    if (SCRUM.IsAlive)",
                "                    {",
                "                        CropIsActive = true;",
                "                    }",
                "                }",
                "",
                "                // is the irrigator available?",
                "                IrrigatorIsAvailable = false;",
                "                if (DaysSinceLastApplication >= ReturnDays)",
                "                {",
                "                    IrrigatorIsAvailable = true;",
                "                }",
                "",
                "                // is the soil dry enough to require irrigation?",
                "                SoilIsDry = false;",
                "                if (MonitoredLayerSW <= MonitoredLayerTrigger)",
                "                {",
                "                    SoilIsDry = true;",
                "                }",
                "",
                "                // is there water available, within allocation?",
                "                WaterIsAvailable = false;",
                "                if (SeasonAppliedAmount < SeasonsAllocation)",
                "                {",
                "                    WaterIsAvailable = true;",
                "                }",
                "",
                "                //Lets bloody well irrigate then!!!!",
                "                if (SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry && WaterIsAvailable)",
                "                {",
                "                    AmountToApply = MonitoredLayerTarget - MonitoredLayerSW;",
                "                    AmountToApply = Math.Min(AmountToApply, MaximumIrrigationAmount);",
                "                    AmountToApply = Math.Min(AmountToApply, SeasonsAllocation - SeasonAppliedAmount);",
                "                    AmountToApply = Math.Max(AmountToApply, 0.0);",
                "                    Irrigation.Apply(amount: AmountToApply, depth: 0.0);",
                "                    DaysSinceLastApplication = 0;",
                "                    SeasonAppliedAmount += AmountToApply;",
                "                    summary.WriteMessage(this, \"Automatic irrigation  applied, \" + AmountToApply.ToString(\"#0.0\") + \" mm\", MessageType.Diagnostic);",
                "                }",
                "            }",
                "        }",
                "",
                "        // computes the water thresholds in the soil down to a given depth",
                "        private void calculateWaterThresholds(double depthToCalculate)",
                "        {",
                "            MonitoredLayerLL = 0.0;",
                "            MonitoredLayerDUL = 0.0;",
                "            double accumulatedDepth = 0.0;",
                "            lastLayerFraction = 0.0;",
                "            lastLayer = 0;",
                "            for (int layer = 0; accumulatedDepth <= depthToCalculate; layer++)",
                "            {",
                "                double layerFraction = (depthToCalculate - accumulatedDepth)/soilPhysical.Thickness[layer];",
                "                layerFraction = Math.Min(1.0, Math.Max(0.0, layerFraction));",
                "                MonitoredLayerLL += soilPhysical.LL15mm[layer]*layerFraction;",
                "                MonitoredLayerDUL += soilPhysical.DULmm[layer]*layerFraction;",
                "                accumulatedDepth += soilPhysical.Thickness[layer];",
                "                if (accumulatedDepth >= depthToCalculate)",
                "                {",
                "                    lastLayerFraction = layerFraction;",
                "                    lastLayer = layer;",
                "                }",
                "            }",
                "",
                "            MonitoredLayerPAWC = MonitoredLayerDUL - MonitoredLayerLL;",
                "        }",
                "",
                "        // computes the amount of water in the soil down to a given depth",
                "        private void calculateSoilWater(double depthToCalculate)",
                "        {",
                "            MonitoredLayerSW = 0.0;",
                "            double accumulatedDepth = 0.0;",
                "            for (int layer = 0; accumulatedDepth <= depthToCalculate; layer++)",
                "            {",
                "                if (layer < lastLayer)",
                "                {",
                "                    MonitoredLayerSW += waterBalance.SWmm[layer];",
                "                }",
                "                else",
                "                {",
                "                    MonitoredLayerSW += waterBalance.SWmm[layer]*lastLayerFraction;",
                "                }",
                "",
                "                accumulatedDepth += soilPhysical.Thickness[layer];",
                "            }",
                "",
                "            MonitoredLayerPAW = Math.Max(0.0, MonitoredLayerSW - MonitoredLayerLL);",
                "        }",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "IrrigationIsEnabled",
                  "Value": "True"
                },
                {
                  "Key": "SeasonStartDate",
                  "Value": "1-Sep"
                },
                {
                  "Key": "SeasonEndDate",
                  "Value": "30-Apr"
                },
                {
                  "Key": "OnlyApplyOntoCrop",
                  "Value": "True"
                },
                {
                  "Key": "SeasonsAllocation",
                  "Value": "1000"
                },
                {
                  "Key": "TriggerFraction",
                  "Value": "0.8"
                },
                {
                  "Key": "RefillFraction",
                  "Value": "0.95"
                },
                {
                  "Key": "MaximumIrrigationAmount",
                  "Value": "40"
                },
                {
                  "Key": "ReturnDays",
                  "Value": "3"
                },
                {
                  "Key": "DepthToMonitor",
                  "Value": "600"
                },
                {
                  "Key": "LimitMonitoringDepth",
                  "Value": "True"
                }
              ],
              "Name": "AutomaticIrrigation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "// This script can be used to apply N fertiliser automatically, based soil mineral N status",
                "// Blame to RCichota, last updated in 18/Mar/2025",
                "",
                "using System;",
                "using System.Xml.Serialization;",
                "using Newtonsoft.Json;",
                "using APSIM.Shared.Utilities;",
                "using Models.Core;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.Interfaces;",
                "using Models.Soils.Nutrients;",
                "",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    [System.Xml.Serialization.XmlInclude(typeof(Model))]",
                "    public class Script : Model",
                "    {",
                "        //Communication to other modules",
                "        [Link] private Clock clock;",
                "        [Link] private ISummary summary;",
                "        [Link] private IPhysical soilPhysical;",
                "        [Link] private INutrient soilNutrient;",
                "        [Link] private Fertiliser Fertiliser;",
                "        [Link] private Plant SCRUM;",
                "",
                "        //User inputs from properties tab",
                "        [Separator(\"Generic N fertiliser management\")]",
                "        [Description(\" Enable automatic fertiliser management?                           \")]",
                "        public bool FertiliserIsEnabled {get; set;}",
                "",
                "        [Description(\" Date to start the fertiliser season (dd-mmm):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public string SeasonStartDate {get; set;}",
                "",
                "        [Description(\" Date to end the fertiliser season (dd-mmm):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public string SeasonEndDate {get; set;}",
                "",
                "        [Description(\" Only fertilise if there is a crop on the field?\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public bool OnlyApplyOntoCrop {get; set;}",
                "",
                "        [Description(\" Season allocation (kg N/ha):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double SeasonsAllocation {get; set;}",
                "",
                "        [Description(\" Minimum soil mineral N, trigger an application (kg N/ha):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double TriggerSoilN {get; set;}",
                "",
                "        [Description(\" Fertiliser N amount per application (kg N/ha):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double AmountToApply {get; set;}",
                "",
                "        [Description(\" Type of fertiliser to apply:\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\", Type = DisplayType.FertiliserType)]",
                "        public string FertiliserType { get; set; }",
                "",
                "        [Description(\" Minimum number of days between applications:\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double ReturnDays {get; set;}",
                "",
                "        [Description(\" Depth to calculate soil mineral N (mm):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double DepthToMonitor {get; set;}",
                "",
                "        [Description(\" Limit the depth to the rooting depth?\")]",
                "        [Display(VisibleCallback = \"FertOnAndOnlyOnCrops\")]",
                "        public bool LimitMonitoringDepth {get; set;}",
                "",
                "        //Class members",
                "        [JsonIgnore] public bool SeasonIsOpen {get; set;}",
                "        [JsonIgnore] private bool CropIsActive {get; set;}",
                "        [JsonIgnore] private bool SpreaderIsAvailable {get; set;}",
                "        [JsonIgnore] private bool SoilNitrogenIsLow {get; set;}",
                "        [JsonIgnore] private bool FertiliserIsAvailable {get; set;}",
                "",
                "        [JsonIgnore] public double MonitoredLayerSoilN {get; set;}",
                "        [JsonIgnore] public double MonitoredDepth {get; set;}",
                "",
                "        [JsonIgnore] public double SeasonAppliedAmount {get; set;}",
                "        [JsonIgnore] public double DaysSinceLastApplication {get; set;}",
                "",
                "        //Internal Variables",
                "        private bool FertOnAndOnlyOnCrops",
                "        { get {return FertiliserIsEnabled && OnlyApplyOntoCrop; }}",
                "",
                "",
                "        [EventSubscribe(\"StartOfSimulation\")]",
                "        private void OnStartOfSimulation(object sender, EventArgs e)",
                "        {",
                "            // initialise some variables",
                "            DaysSinceLastApplication = ReturnDays;",
                "            if (!OnlyApplyOntoCrop)",
                "            {",
                "                LimitMonitoringDepth = false;",
                "            }",
                "",
                "            MonitoredDepth = DepthToMonitor;",
                "        }",
                "",
                "        [EventSubscribe(\"StartOfDay\")]",
                "        private void OnStartOfDay(object sender, EventArgs e)",
                "        {",
                "            // check whether we are starting a new season, zero amount",
                "            if (DateUtilities.DatesAreEqual(SeasonStartDate, clock.Today))",
                "            {",
                "                SeasonAppliedAmount = 0.0;",
                "            }",
                "        }",
                "",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "            // get the current amount of nitrogen in the soil",
                "            if (LimitMonitoringDepth)",
                "            { // get the current rooting depth, no less than 50mm, no more than DepthToMonitor",
                "                MonitoredDepth = DepthToMonitor;",
                "                if (SCRUM.IsAlive)",
                "                {",
                "                    MonitoredDepth = Math.Min(DepthToMonitor, Math.Max(50.0, SCRUM.Root.Depth));",
                "                }",
                "            }",
                "",
                "            calculateSoilMineralNitrogen(MonitoredDepth);",
                "",
                "            // check N status and management conditions, if we can fertilise at all",
                "            if (FertiliserIsEnabled)",
                "            {",
                "                DaysSinceLastApplication += 1;",
                "",
                "                // are we within the irrigation season?",
                "                SeasonIsOpen = false;",
                "                if (DateUtilities.WithinDates(SeasonStartDate, clock.Today, SeasonEndDate))",
                "                {",
                "                    SeasonIsOpen = true;",
                "                }",
                "",
                "                // is there a crop in the ground that needs fertiliser?",
                "                CropIsActive = true;",
                "                if (OnlyApplyOntoCrop)",
                "                {",
                "                    CropIsActive = false;",
                "                    if (SCRUM.IsAlive)",
                "                    {",
                "                        CropIsActive = true;",
                "                    }",
                "                }",
                "",
                "                // is the spreader available?",
                "                SpreaderIsAvailable = false;",
                "                if (DaysSinceLastApplication >= ReturnDays)",
                "                {",
                "                    SpreaderIsAvailable = true;",
                "                }",
                "",
                "                // is the soil N low enough to require fertiliser?",
                "                SoilNitrogenIsLow = false;",
                "                if (MonitoredLayerSoilN <= TriggerSoilN)",
                "                {",
                "                    SoilNitrogenIsLow = true;",
                "                }",
                "",
                "                // is there N fertiliser available, within allocation?",
                "                FertiliserIsAvailable = false;",
                "                if (SeasonAppliedAmount < SeasonsAllocation)",
                "                {",
                "                    FertiliserIsAvailable = true;",
                "                }",
                "",
                "                //Lets bloody well fertilise then!!!!",
                "                if (SeasonIsOpen && CropIsActive && SpreaderIsAvailable && SoilNitrogenIsLow && FertiliserIsAvailable)",
                "                {",
                "                    AmountToApply = Math.Min(AmountToApply, SeasonsAllocation - SeasonAppliedAmount);",
                "                    AmountToApply = Math.Max(AmountToApply, 0.0);",
                "                    Fertiliser.Apply(amount: AmountToApply, type: FertiliserType, depth: 10.0);",
                "                    DaysSinceLastApplication = 0;",
                "                    SeasonAppliedAmount += AmountToApply;",
                "                    summary.WriteMessage(this, \"Automatic N fertiliser applied, \" + AmountToApply.ToString(\"#0.0\") + \" kgN/ha\", MessageType.Diagnostic);",
                "                }",
                "            }",
                "        }",
                "",
                "        // computes the amount of mineral N in the soil down to a given depth",
                "        private void calculateSoilMineralNitrogen(double depthToCalculate)",
                "        {",
                "            MonitoredLayerSoilN = 0.0;",
                "            double accumulatedDepth = 0.0;",
                "            for (int layer = 0; accumulatedDepth <= depthToCalculate; layer++)",
                "            {",
                "                double layerFraction = (depthToCalculate - accumulatedDepth)/soilPhysical.Thickness[layer];",
                "                layerFraction = Math.Min(1.0, Math.Max(0.0, layerFraction));",
                "                MonitoredLayerSoilN += (soilNutrient.MineralN[layer])*layerFraction;",
                "                accumulatedDepth += soilPhysical.Thickness[layer];",
                "            }",
                "        }",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "FertiliserIsEnabled",
                  "Value": "True"
                },
                {
                  "Key": "SeasonStartDate",
                  "Value": "1-Aug"
                },
                {
                  "Key": "SeasonEndDate",
                  "Value": "30-Apr"
                },
                {
                  "Key": "OnlyApplyOntoCrop",
                  "Value": "False"
                },
                {
                  "Key": "SeasonsAllocation",
                  "Value": "1000"
                },
                {
                  "Key": "TriggerSoilN",
                  "Value": "50"
                },
                {
                  "Key": "AmountToApply",
                  "Value": "25"
                },
                {
                  "Key": "FertiliserType",
                  "Value": "UreaN"
                },
                {
                  "Key": "ReturnDays",
                  "Value": "3"
                },
                {
                  "Key": "DepthToMonitor",
                  "Value": "300"
                },
                {
                  "Key": "LimitMonitoringDepth",
                  "Value": "False"
                }
              ],
              "Name": "AutomaticFertiliser",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Report, Models",
              "VariableNames": [
                "[Clock].Today",
                "[SCRUM].SowingData.Cultivar",
                "",
                "// SCRUM Biomass",
                "[SCRUM].Total.Wt",
                "[SCRUM].Total.N",
                "[SCRUM].TotalDMAtHarvest",
                "[SCRUM].Product.Live.Wt",
                "[SCRUM].Product.Live.N",
                "[SCRUM].Product.Live.NConc",
                "[SCRUM].Product.DMAtHarvest",
                "[SCRUM].Product.ExpectedYield",
                "[SCRUM].Product.DryMatterContent",
                "[SCRUM].Product.Yield ",
                "[SCRUM].Stover.Live.Wt",
                "[SCRUM].Stover.Live.N",
                "[SCRUM].Stover.Live.NConc",
                "[SCRUM].Stover.DMAtHarvest",
                "[SCRUM].Stover.Height",
                "[SCRUM].Stover.LAI",
                "[SCRUM].Stover.LAIDead",
                "[SCRUM].Stover.LAITotal",
                "[SCRUM].Stover.CoverDead",
                "[SCRUM].Stover.CoverGreen",
                "[SCRUM].Stover.CoverTotal",
                "[SCRUM].Root.Live.Wt",
                "[SCRUM].Root.Live.N",
                "[SCRUM].Root.Live.NConc",
                "[SCRUM].Root.DMatHarvest",
                "[SCRUM].Root.Depth",
                "",
                "// SCRUM Phenology",
                "[SCRUM].Phenology.AccumulatedEmergedTt",
                "[SCRUM].Phenology.AccumulatedTt",
                "[SCRUM].Phenology.CurrentPhaseName",
                "[SCRUM].Phenology.CurrentStageName",
                "[SCRUM].Phenology.Stage",
                "[SCRUM].Phenology.ThermalTime",
                "",
                "// SCRUM Allocation",
                "[SCRUM].Product.DMDemands.Structural.DMDemandFunction.PartitionFraction",
                "[SCRUM].Stover.DMDemands.Structural.DMDemandFunction.PartitionFraction",
                "[SCRUM].Root.DMDemands.Structural.DMDemandFunction.PartitionFraction",
                "[SCRUM].Arbitrator.DM.TotalPlantDemand",
                "[SCRUM].Arbitrator.DM.TotalFixationSupply",
                "[SCRUM].Arbitrator.N.TotalPlantDemand",
                "[SCRUM].Arbitrator.N.TotalPlantSupply",
                "[SCRUM].Arbitrator.N.TotalPlantSupply",
                "[SCRUM].Product.Allocated.Wt",
                "[SCRUM].Stover.Allocated.Wt",
                "[SCRUM].Root.Allocated.Wt",
                "",
                "// SCRUM limiting factors",
                "[SCRUM].Arbitrator.DM.NutrientLimitation",
                "[SCRUM].Arbitrator.DM.SinkLimitation",
                "[SCRUM].Arbitrator.FN",
                "[SCRUM].Stover.Fn",
                "[SCRUM].Stover.Fw",
                "",
                "// Water balance",
                "sum([Soil].SoilWater.SWmm) as SoilTotalWater",
                "[Soil].SoilWater.Drainage",
                "[Soil].SoilWater.Es",
                "[Soil].SoilWater.Runoff",
                "[Irrigation].IrrigationApplied",
                "[SCRUM].Stover.WaterDemand",
                "[SCRUM].Stover.Transpiration",
                "[SCRUM].Root.WaterUptake",
                "",
                "[AutomaticIrrigation].Script.AmountToApply",
                "[AutomaticIrrigation].Script.MonitoredLayerLL",
                "[AutomaticIrrigation].Script.MonitoredLayerDUL",
                "[AutomaticIrrigation].Script.MonitoredLayerSW",
                "[AutomaticIrrigation].Script.MonitoredLayerTarget",
                "[AutomaticIrrigation].Script.MonitoredLayerTrigger",
                "",
                "// Nitrogen balance",
                "sum([Soil].Nutrient.MineralN) as TotalSoilNitrogen",
                "[Fertiliser].NitrogenApplied",
                "[Soil].SoilWater.LeachNO3",
                "[Soil].Nutrient.DenitrifiedN",
                "[SCRUM].Root.NUptake",
                "",
                "[AutomaticFertiliser].Script.MonitoredLayerSoilN",
                "[AutomaticFertiliser].Script.AmountToApply"
              ],
              "EventNames": [
                "[Clock].DoReport"
              ],
              "GroupByVariableName": null,
              "Name": "Report",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.SimplePlantModels.ScrumCropInstance, Models",
              "HarvestIndex": 0.45,
              "MoistureContent": 0.14,
              "RootProportion": 0.1,
              "MaxRootDepth": 1005.0,
              "MaxHeight": 700.0,
              "MaxCover": 0.97,
              "ExtinctionCoefficient": 0.55,
              "rCover": 1.0,
              "TypicalHarvestStage": "Ripe",
              "SeedlingNConc": 0.05,
              "ProductHarvestNConc": 0.015,
              "StoverHarvestNConc": 0.01,
              "RootNConc": 0.01,
              "LegumeFactor": 0.0,
              "BaseTemperature": 0.0,
              "OptimumTemperature": 30.0,
              "MaxTemperature": 40.0,
              "Tt_SowToEmergence": 100.0,
              "GSMax": 0.008,
              "R50": 150.0,
              "ConsiderWaterStress": true,
              "EstablishDate": null,
              "EstablishStage": null,
              "PlantingDepth": 0.0,
              "ExpectedYield": 0.0,
              "HarvestDate": "0001-01-01T00:00:00",
              "Tt_EstablishmentToHarvest": 0.0,
              "HarvestStage": null,
              "FieldLoss": 0.0,
              "ResidueRemoval": 0.0,
              "ResidueIncorporation": 0.0,
              "ResidueIncorporationDepth": 0.0,
              "Factor_XoBiomass": 0.5,
              "Factor_bBiomass": 0.2,
              "Factor_XoCover": 0.4,
              "Factor_bCover": 0.2,
              "Factor_XoHeight": 0.7,
              "Factor_bHeight": 0.2,
              "Tt_EmergenceToMaturity": 0.0,
              "Name": "ScrumCereal",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Crop Biomass (g/m2)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "YieldCheck",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32768,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Product.Live.Wt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Product",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32704,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 1,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Product.DMAtHarvest",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "ParamDryYield",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 1,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Product.ExpectedYield",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "ParamProductFreshYield",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Crop Biomass (g/m2)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Plant Biomass components",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Live.Wt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Stover",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -8388608,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.Live.Wt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32768,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Product.Live.Wt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Product",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Total.Wt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Total",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Crop Nitrogen (g/m2)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Plant Nitrogen components",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Live.N",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Stover",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -8388608,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.Live.N",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32704,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Product.Live.N",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Product",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Total.N",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Total",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Crop Nitrogen (g/m2)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Plant Nitrogen conc",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Live.NConc",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Stover",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -8388608,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.Live.NConc",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32704,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Product.Live.NConc",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Product",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Water (mm)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Length (mm)",
              "Position": 2,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Water supply and demand",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777088,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.WaterSupply",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Supply",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -8372224,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.WaterUptake",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Uptake",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65536,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.WaterDemand",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Demand",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Transpiration",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Transpiration",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65281,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "Soil.SoilWater.Eo",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Potential",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -32768,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.Depth",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root Depth",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -16711936,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Height",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Canopy Height",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Cover ",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 2,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Crop structure",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 0,
              "MarkerSize": 2,
              "Line": 4,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "SCRUM.Phenology.AccumulatedTt",
              "YFieldName": "SCRUM.Root.Depth",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root Depth",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65536,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 0,
              "MarkerSize": 2,
              "Line": 4,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "SCRUM.Phenology.AccumulatedTt",
              "YFieldName": "SCRUM.Stover.CoverTotal",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "CoverTotal",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -1663232,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 0,
              "MarkerSize": 2,
              "Line": 4,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "SCRUM.Phenology.AccumulatedTt",
              "YFieldName": "SCRUM.Stover.CoverDead",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "CoverDead",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 0,
              "MarkerSize": 2,
              "Line": 4,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "SCRUM.Phenology.AccumulatedTt",
              "YFieldName": "SCRUM.Stover.CoverGreen",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "CoverGreen",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -3376729,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 0,
              "MarkerSize": 2,
              "Line": 4,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "SCRUM.Phenology.AccumulatedTt",
              "YFieldName": "SCRUM.Stover.Height",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Height",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Nitrogen (g/m2)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "N supply and demand",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16776961,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.N.TotalPlantDemand",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "N demand",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65536,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.N.TotalPlantSupply",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "N supply",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "DM (g/m2/d)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "DM supply and demand",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16776961,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.DM.TotalFixationSupply",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Fixation supply",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.DM.TotalPlantDemand",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Total demand",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32704,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.DM.SinkLimitation",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Sink limation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65408,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.DM.NutrientLimitation",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Nutrient limitation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Water (mm)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Irrigation",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16776961,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "AutomaticIrrigation.Script.MonitoredLayerTarget",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Refill target",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "AutomaticIrrigation.Script.MonitoredLayerTrigger",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Trigger deficit",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65536,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "AutomaticIrrigation.Script.MonitoredLayerSW",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Top SWmm",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "AutomaticIrrigation.Script.MonitoredLayerDUL",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Top DULmm",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32768,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "Irrigation.IrrigationApplied",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Irrigation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -8388353,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "AutomaticIrrigation.Script.AmountToApply",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Amount to apply",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": 0.0,
              "Maximum": "NaN",
              "Interval": "NaN"
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Stress Factors",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16776961,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Fw",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "FW",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.FN",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "FN",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "SCRUM.Phenology.AccumulatedEmergedTt",
              "Position": 2,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 5,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Phenology",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Phenology.Stage",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Stage",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -1663232,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Phenology.AccumulatedEmergedTt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Emerged Tt",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Phenology.AccumulatedTt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Tt",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -3376729,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Height",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Height",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "LAI",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.LAI",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "LAIGreen",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -1663232,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.LAIDead",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "LAIDead",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 2,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.LAITotal",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "LAITotal",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Cover ",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 3,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "AccumTt",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Phenology.AccumulatedTt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "AccumTt",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Nitrogen (g/m2)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "SoilN",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16776961,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "TotalSoilNitrogen",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Total soil N",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -11094807,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "AutomaticFertiliser.Script.MonitoredLayerSoilN",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Monitored layer N",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65536,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "Fertiliser.NitrogenApplied",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Fertiliser N",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Core.Simulation, Models",
      "Descriptors": null,
      "Name": "SCRUMRepeatPlantingFromManager",
      "ResourceName": null,
      "Children": [
        {
          "$type": "Models.Memo, Models",
          "Text": "This example specifies a SCRUMCropInstance and sows it on the same date each year.   The necessary components in the Field are:\n* the SCRUM model\n* A SCRUMCropInstance, named SCRUMCereal in this case but the name can be anything\n* A manager model called \"Sow Cereal same date each year\" that sets the management information for SCRUMCereal and establishs it on the same date each year.  \n",
          "Name": "Description",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Climate.Weather, Models",
          "ConstantsFile": null,
          "FileName": "%root%/Tests/WeatherFiles/lincoln.met",
          "ExcelWorkSheetName": null,
          "Name": "Weather",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Clock, Models",
          "Start": "1998-10-14T00:00:00",
          "End": "2006-03-01T00:00:00",
          "Name": "Clock",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Summary, Models",
          "Verbosity": 100,
          "Name": "Summary",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
          "Name": "Soil Arbitrator",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Zone, Models",
          "Area": 1.0,
          "Slope": 0.0,
          "AspectAngle": 0.0,
          "Altitude": 50.0,
          "Name": "Field",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Soils.Soil, Models",
              "RecordNumber": 0,
              "ASCOrder": null,
              "ASCSubOrder": null,
              "SoilType": null,
              "LocalName": null,
              "Site": null,
              "NearestTown": null,
              "Region": null,
              "State": null,
              "Country": null,
              "NaturalVegetation": null,
              "ApsoilNumber": null,
              "Latitude": 0.0,
              "Longitude": 0.0,
              "LocationAccuracy": null,
              "YearOfSampling": null,
              "DataSource": null,
              "Comments": null,
              "Name": "Soil",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Soils.Chemical, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "PH": [
                    6.6,
                    6.2,
                    5.7,
                    5.5,
                    5.5,
                    5.5
                  ],
                  "PHUnits": 0,
                  "EC": null,
                  "ESP": null,
                  "CEC": [
                    12.440000000000001,
                    11.6525,
                    11.045,
                    10.662500000000001,
                    9.4025,
                    9.4025
                  ],
                  "ECMetadata": null,
                  "CLMetadata": null,
                  "CECMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "ESPMetadata": null,
                  "PHMetadata": null,
                  "Name": "Chemical",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Water, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.33,
                    0.33,
                    0.31,
                    0.15,
                    0.1,
                    0.06
                  ],
                  "InitialPAWmm": 180.0,
                  "RelativeTo": "LL15",
                  "FilledFromTop": false,
                  "Name": "Water",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Physical, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "ParticleSizeSand": [
                    5.0,
                    5.0,
                    5.0,
                    5.0,
                    5.0,
                    5.0
                  ],
                  "ParticleSizeSilt": [
                    65.0,
                    65.0,
                    65.0,
                    65.0,
                    65.0,
                    65.0
                  ],
                  "ParticleSizeClay": [
                    30.0,
                    30.0,
                    30.0,
                    30.0,
                    30.0,
                    30.0
                  ],
                  "Rocks": [
                    0.0,
                    0.0,
                    0.1353355580274379,
                    0.0,
                    0.1353355580274379,
                    0.1353355580274379
                  ],
                  "Texture": null,
                  "BD": [
                    1.2,
                    1.2,
                    1.2,
                    1.2,
                    1.2,
                    1.2
                  ],
                  "AirDry": [
                    0.08,
                    0.13,
                    0.1,
                    0.06,
                    0.04,
                    0.02
                  ],
                  "LL15": [
                    0.13,
                    0.13,
                    0.1,
                    0.06,
                    0.04,
                    0.02
                  ],
                  "DUL": [
                    0.33,
                    0.33,
                    0.31,
                    0.15,
                    0.1,
                    0.06
                  ],
                  "SAT": [
                    0.5,
                    0.5,
                    0.44,
                    0.46,
                    0.44,
                    0.44
                  ],
                  "KS": null,
                  "BDMetadata": null,
                  "AirDryMetadata": null,
                  "LL15Metadata": null,
                  "DULMetadata": null,
                  "SATMetadata": null,
                  "KSMetadata": null,
                  "RocksMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "TextureMetadata": null,
                  "ParticleSizeSandMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "ParticleSizeSiltMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "ParticleSizeClayMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "Name": "Physical",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.13,
                        0.13,
                        0.1,
                        0.08,
                        0.11,
                        0.11
                      ],
                      "KL": [
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "KLMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "XFMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "Name": "SCRUMSoil",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.13,
                        0.13,
                        0.27,
                        0.27,
                        0.3,
                        0.3
                      ],
                      "KL": [
                        0.1,
                        0.06,
                        0.03,
                        0.01,
                        0.0,
                        0.0
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        0.1,
                        0.0,
                        0.0,
                        0.0
                      ],
                      "LLMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "KLMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "XFMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "Name": "PotatoSoil",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.WaterModel.WaterBalance, Models",
                  "SummerDate": "1-Nov",
                  "SummerU": 9.0,
                  "SummerCona": 4.4,
                  "WinterDate": "1-Apr",
                  "WinterU": 9.0,
                  "WinterCona": 4.4,
                  "DiffusConst": 88.0,
                  "DiffusSlope": 35.4,
                  "Salb": 0.18,
                  "CN2Bare": 68.0,
                  "CNRed": 20.0,
                  "CNCov": 0.8,
                  "DischargeWidth": 0.0,
                  "CatchmentArea": 0.0,
                  "PSIDul": -100.0,
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "SWCON": [
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55
                  ],
                  "KLAT": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "Name": "SoilWater",
                  "ResourceName": "WaterBalance",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Nutrients.Nutrient, Models",
                  "Name": "Nutrient",
                  "ResourceName": "Nutrient",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Organic, Models",
                  "FOMCNRatio": 30.0,
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "Carbon": [
                    1.82,
                    1.47,
                    1.2,
                    1.03,
                    0.47,
                    0.47
                  ],
                  "CarbonUnits": 0,
                  "SoilCNRatio": [
                    11.5,
                    11.5,
                    11.5,
                    11.5,
                    11.5,
                    11.5
                  ],
                  "FBiom": [
                    0.025,
                    0.025,
                    0.015,
                    0.01,
                    0.01,
                    0.01
                  ],
                  "FInert": [
                    0.3,
                    0.4,
                    0.75,
                    0.9,
                    0.96,
                    0.96
                  ],
                  "FOM": [
                    1243.9310541346904,
                    833.8319214727269,
                    457.61666105087295,
                    251.1453484552152,
                    137.83148958311097,
                    75.64352530338392
                  ],
                  "CarbonMetadata": null,
                  "FOMMetadata": null,
                  "Name": "Organic",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.LayerStructure, Models",
                  "Thickness": [
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0
                  ],
                  "Name": "LayerStructure",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    225.0,
                    12.5,
                    1.3888888888888928,
                    1.3888888888888928,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "ConcInSolution": null,
                  "Name": "NO3",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "ConcInSolution": null,
                  "Name": "NH4",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 1,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "ConcInSolution": null,
                  "Name": "Urea",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.SoilTemp.SoilTemperature, Models",
                  "Thickness": null,
                  "InitialValues": null,
                  "Name": "Temperature",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Surface.SurfaceOrganicMatter, Models",
              "SurfOM": [],
              "Canopies": [],
              "InitialResidueName": "wheat",
              "InitialResidueType": "wheat",
              "InitialResidueMass": 2000.0,
              "InitialStandingFraction": 0.0,
              "InitialCPR": 0.0,
              "InitialCNR": 80.0,
              "Name": "SurfaceOrganicMatter",
              "ResourceName": "SurfaceOrganicMatter",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.MicroClimate, Models",
              "a_interception": 0.0,
              "b_interception": 1.0,
              "c_interception": 0.0,
              "d_interception": 0.0,
              "SoilHeatFluxFraction": 0.4,
              "MinimumHeightDiffForNewLayer": 0.0,
              "NightInterceptionFraction": 0.5,
              "ReferenceHeight": 2.0,
              "Name": "MicroClimate",
              "ResourceName": "MicroClimate",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using System;",
                "using System.Linq;",
                "using APSIM.Shared.Utilities;",
                "using Models.Core;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.PMF.SimplePlantModels;",
                "using Models.Utilities;",
                "",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    public class Script : Model",
                "    {",
                "        [Link] Clock clock;",
                "        [Link] Zone zone;",
                "        [Link(Type = LinkType.Scoped, ByName = true)]",
                "        public Plant scrum = null;",
                "",
                "        [Separator(\"Define the SCRUM crop to plant and its basic management\")]",
                "",
                "        /// <summary>SCRUM crop to stablish</summary>",
                "        [Description(\"Chose the crop to plant:\")]",
                "        [Display(Type = DisplayType.SCRUMcropName)]",
                "        public string CropName { get; set; }",
                "",
                "        [Separator(\"Specify establishment and harvest conditions for this crop\")]",
                "",
                "        /// <summary>Date to establishment the crop</summary>",
                "        [Description(\"Establishment date (dd-mmm or dd/mm/yyyy):\")]",
                "        public string EstablishDate { get; set; }",
                "",
                "        /// <summary>Stages at which the SCRUM is established</summary>",
                "        [Description(\"Choose the establishment stage\")]",
                "        [Display(Type = DisplayType.ScrumEstablishStages)]",
                "        public string EstablishStage {get; set;}",
                "",
                "        /// <summary>Depth at which the crop/seeds are planted.</summary>",
                "        [Description(\" Planting depth (mm):\")]",
                "        public double PlantingDepth { get; set; }",
                "",
                "        /// <summary>Choice on how the duration of crop is defined</summary>",
                "        [Description(\"Choose how the crop cycle is defined:\")]",
                "        public HarvestTimingOption HarvestTimeOption {get; set;}",
                "",
                "        private bool isHarvestDateDefined { get { return HarvestTimeOption == HarvestTimingOption.SettingDate; } }",
                "        private bool isThermalTimeDefined { get { return HarvestTimeOption == HarvestTimingOption.SettingThermalTime; } }",
                "",
                "        /// <summary>Date to establishment the crop</summary>",
                "        [Description(\"  Harvest date (dd/mm/yyyy):\")]",
                "        [Display(VisibleCallback = \"isHarvestDateDefined\")]",
                "        public DateTime HarvestDate { get; set; }",
                "",
                "        /// <summary>Thermal time from establishment to harvest (if blank or zero must specify harvest date)</summary>",
                "        [Description(\"  Thermal time from establishment to harvest (oCd):\")]",
                "        [Display(VisibleCallback = \"isThermalTimeDefined\")]",
                "        public double Tt_EstablishToHarvest { get; set; }",
                "",
                "        /// <summary>Stage at which the crop is to be harvested at</summary>",
                "        [Description(\"Choose the stage to harvest the crop:\")]",
                "        [Display(Type = DisplayType.ScrumHarvestStages)]",
                "        public string HarvestStage {get; set;}",
                "",
                "        [Separator(\"Specify an appropriate potential yield for the crop (based on assumed genotype, sowing date, and local conditions)\\n\" +",
                "                   \"  *SCRUM will reduce yield if water or N stress are predicted\")]",
                "",
                "        /// <summary>Expected crop yield (t FW/ha)</summary>",
                "        [Description(\"Potential crop yield, fresh weight (t/ha)\")]",
                "        public double ExpectedYield {get; set;}",
                "",
                "        [Separator(\"Specify proportions of field loss and residue removal at harvest\")]",
                "",
                "        /// <summary>Proportion of product that is left in the field at harvest (due to disease, market, ect.)</summary>",
                "        [Description(\"Proportion of product lost in the field at harvest (0-1):\")]",
                "        public double FieldLoss { get; set; }",
                "",
                "        /// <summary>Proportion of stover that is removed from the field at harvest (e.g., bailing)</summary>",
                "        [Description(\"Proportion of stover removed from the field at harvest (0-1):\")]",
                "        public double ResidueRemoval { get; set; }",
                "",
                "        /// <summaryProportion of residues that is incorporated by cultivation after harvest</summary>",
                "        [Description(\"Proportion of residue incorporated to soil at harvest (0-1):\")]",
                "        public double ResidueIncorporation { get; set; }",
                "",
                "        /// <summary>Depth down to which the residues that are incorporated to by cultivation after harvest</summary>",
                "        [Description(\"Depth to incorporate residues (mm):\")]",
                "        public double ResidueIncorporationDepth { get; set; }",
                "",
                "        private ScrumManagementInstance management;",
                "",
                "",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "            if (DateUtilities.DatesAreEqual(EstablishDate, clock.Today))",
                "            {",
                "                if (isHarvestDateDefined && (HarvestDate <= clock.Today))",
                "                {",
                "                    throw new Exception(\"Harvest date is earlier than establishment date\");",
                "                }",
                "",
                "                management = new ScrumManagementInstance(cropName: CropName,",
                "                                                         establishDate: clock.Today,",
                "                                                         establishStage: EstablishStage,",
                "                                                         plantingDepth: PlantingDepth,",
                "                                                         harvestStage: HarvestStage,",
                "                                                         expectedYield: ExpectedYield,",
                "                                                         harvestDate: isHarvestDateDefined? HarvestDate : null,",
                "                                                         ttEstablishmentToHarvest: isThermalTimeDefined? Tt_EstablishToHarvest: double.NaN,",
                "                                                         fieldLoss: FieldLoss,",
                "                                                         residueRemoval: ResidueRemoval,",
                "                                                         residueIncorporation: ResidueIncorporation,",
                "                                                         residueIncorporationDepth: ResidueIncorporationDepth);",
                "                ScrumCropInstance currentCrop = zone.FindDescendant<ScrumCropInstance>(CropName);",
                "                currentCrop.Establish(management);",
                "            }",
                "        }",
                "",
                "        /// <summary>Flag how harvest time is defined.</summary>",
                "        public enum HarvestTimingOption",
                "        {",
                "            /// <summary>A date is to be used.</summary>",
                "            SettingDate,",
                "            /// <summary>A given thermal time sum is to be used.</summary>",
                "            SettingThermalTime",
                "        }",
                "    }",
                "}",
                ""
              ],
              "Parameters": [
                {
                  "Key": "CropName",
                  "Value": "ScrumCereal"
                },
                {
                  "Key": "EstablishDate",
                  "Value": "01-Sep"
                },
                {
                  "Key": "EstablishStage",
                  "Value": "Seed"
                },
                {
                  "Key": "PlantingDepth",
                  "Value": "15"
                },
                {
                  "Key": "HarvestTimeOption",
                  "Value": "SettingThermalTime"
                },
                {
                  "Key": "HarvestDate",
                  "Value": "01/01/0001 00:00:00"
                },
                {
                  "Key": "Tt_EstablishToHarvest",
                  "Value": "1000"
                },
                {
                  "Key": "HarvestStage",
                  "Value": "Maturity"
                },
                {
                  "Key": "ExpectedYield",
                  "Value": "8"
                },
                {
                  "Key": "FieldLoss",
                  "Value": "0"
                },
                {
                  "Key": "ResidueRemoval",
                  "Value": "0"
                },
                {
                  "Key": "ResidueIncorporation",
                  "Value": "1"
                },
                {
                  "Key": "ResidueIncorporationDepth",
                  "Value": "100"
                }
              ],
              "Name": "Sow Cereal same date each year",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "Name": "SCRUM",
              "ResourceName": "SCRUM",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Irrigation, Models",
              "Name": "Irrigation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Fertiliser, Models",
              "Name": "Fertiliser",
              "ResourceName": "Fertiliser",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "// This script can be used to apply irrigation automatically, based soil water status",
                "// Blame to RCichota, last updated in 18/Mar/2025",
                "",
                "using System;",
                "using System.Xml.Serialization;",
                "using Newtonsoft.Json;",
                "using APSIM.Shared.Utilities;",
                "using Models.Core;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.Interfaces;",
                "using Models.Soils.Nutrients;",
                "",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    [System.Xml.Serialization.XmlInclude(typeof(Model))]",
                "    public class Script : Model",
                "    {",
                "        //Communication to other modules",
                "        [Link] private Clock clock;",
                "        [Link] private ISummary summary;",
                "        [Link] private IPhysical soilPhysical;",
                "        [Link] private ISoilWater waterBalance;",
                "        [Link] private Irrigation Irrigation;",
                "        [Link] private Plant SCRUM;",
                "",
                "        //User inputs from properties tab",
                "        [Separator(\"Generic irrigation management\")]",
                "        [Description(\" Enable automatic irrigation management?              \")]",
                "        public bool IrrigationIsEnabled {get; set;}",
                "",
                "        [Description(\" Date to start the irrigation season (dd-mmm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public string SeasonStartDate {get; set;}",
                "",
                "        [Description(\" Date to end the irrigation season (dd-mmm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public string SeasonEndDate {get; set;}",
                "",
                "        [Description(\" Only irrigate if there is a crop on the field?\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public bool OnlyApplyOntoCrop {get; set;}",
                "",
                "        [Description(\" Season allocation (mm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double SeasonsAllocation {get; set;}",
                "",
                "        [Description(\" Fraction of PAWC to trigger irrigation (0-1):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double TriggerFraction {get; set;}",
                "",
                "        [Description(\" Fraction of PAWC to refill soil to (0-1):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double RefillFraction {get; set;}",
                "",
                "        [Description(\" Maximum irrigation amount per application (mm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double MaximumIrrigationAmount {get; set;}",
                "",
                "        [Description(\" Minimum number of days between irrigations:\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double ReturnDays {get; set;}",
                "",
                "        [Description(\" Depth to calculate PAWC (mm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double DepthToMonitor {get; set;}",
                "",
                "        [Description(\" Limit the depth to the rooting depth?\")]",
                "        [Display(VisibleCallback = \"IrrigOnAndOnlyOnCrops\")]",
                "        public bool LimitMonitoringDepth {get; set;}",
                "",
                "        //Class members",
                "        [JsonIgnore] public bool SeasonIsOpen {get; set;}",
                "        [JsonIgnore] private bool CropIsActive {get; set;}",
                "        [JsonIgnore] private bool IrrigatorIsAvailable {get; set;}",
                "        [JsonIgnore] private bool SoilIsDry {get; set;}",
                "        [JsonIgnore] private bool WaterIsAvailable {get; set;}",
                "",
                "        [JsonIgnore] public double MonitoredLayerTrigger {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerTarget {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerDUL {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerLL {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerSW {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerPAWC {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerPAW {get; set;}",
                "        [JsonIgnore] public double MonitoredDepth {get; set;}",
                "",
                "        [JsonIgnore] public double AmountToApply {get; set;}",
                "        [JsonIgnore] public double SeasonAppliedAmount {get; set;}",
                "        [JsonIgnore] public double DaysSinceLastApplication {get; set;}",
                "",
                "        //Internal Variables",
                "        private bool IrrigOnAndOnlyOnCrops",
                "        { get {return IrrigationIsEnabled && OnlyApplyOntoCrop; }}",
                "        private double lastLayerFraction;",
                "        private int lastLayer;",
                "",
                "",
                "        [EventSubscribe(\"StartOfSimulation\")]",
                "        private void OnStartOfSimulation(object sender, EventArgs e)",
                "        {",
                "            // initialise some variables",
                "            DaysSinceLastApplication = ReturnDays;",
                "            if (!OnlyApplyOntoCrop)",
                "            {",
                "                LimitMonitoringDepth = false;",
                "            }",
                "",
                "            // calculate soil water variables",
                "            calculateWaterThresholds(DepthToMonitor);",
                "            MonitoredLayerTrigger = MonitoredLayerLL + MonitoredLayerPAWC*TriggerFraction;",
                "            MonitoredLayerTarget = MonitoredLayerLL + MonitoredLayerPAWC*RefillFraction;",
                "            MonitoredDepth = DepthToMonitor;",
                "        }",
                "",
                "        [EventSubscribe(\"StartOfDay\")]",
                "        private void OnStartOfDay(object sender, EventArgs e)",
                "        {",
                "            // check whether we are starting a new season, zero amount",
                "            if (DateUtilities.DatesAreEqual(SeasonStartDate, clock.Today))",
                "            {",
                "                SeasonAppliedAmount = 0.0;",
                "            }",
                "        }",
                "",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "            // get the current amount of water in the soil",
                "            if (LimitMonitoringDepth)",
                "            { // get the current rooting depth, no less than 50mm, no more than DepthToMonitor",
                "                MonitoredDepth = DepthToMonitor;",
                "                if (SCRUM.IsAlive)",
                "                {",
                "                    MonitoredDepth = Math.Min(DepthToMonitor, Math.Max(50.0, SCRUM.Root.Depth));",
                "                }",
                "",
                "                // re-calculate the soil water variables",
                "                calculateWaterThresholds(MonitoredDepth);",
                "                MonitoredLayerTrigger = MonitoredLayerLL + MonitoredLayerPAWC*TriggerFraction;",
                "                MonitoredLayerTarget = MonitoredLayerLL + MonitoredLayerPAWC*RefillFraction;",
                "            }",
                "",
                "            calculateSoilWater(MonitoredDepth);",
                "",
                "            // check water status and management conditions, if we can irrigate at all",
                "            if (IrrigationIsEnabled)",
                "            {",
                "                DaysSinceLastApplication += 1;",
                "",
                "                // are we within the irrigation season?",
                "                SeasonIsOpen = false;",
                "                if (DateUtilities.WithinDates(SeasonStartDate, clock.Today, SeasonEndDate))",
                "                {",
                "                    SeasonIsOpen = true;",
                "                }",
                "",
                "                // is there a crop in the ground that needs irrigation?",
                "                CropIsActive = true;",
                "                if (OnlyApplyOntoCrop)",
                "                {",
                "                    CropIsActive = false;",
                "                    if (SCRUM.IsAlive)",
                "                    {",
                "                        CropIsActive = true;",
                "                    }",
                "                }",
                "",
                "                // is the irrigator available?",
                "                IrrigatorIsAvailable = false;",
                "                if (DaysSinceLastApplication >= ReturnDays)",
                "                {",
                "                    IrrigatorIsAvailable = true;",
                "                }",
                "",
                "                // is the soil dry enough to require irrigation?",
                "                SoilIsDry = false;",
                "                if (MonitoredLayerSW <= MonitoredLayerTrigger)",
                "                {",
                "                    SoilIsDry = true;",
                "                }",
                "",
                "                // is there water available, within allocation?",
                "                WaterIsAvailable = false;",
                "                if (SeasonAppliedAmount < SeasonsAllocation)",
                "                {",
                "                    WaterIsAvailable = true;",
                "                }",
                "",
                "                //Lets bloody well irrigate then!!!!",
                "                if (SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry && WaterIsAvailable)",
                "                {",
                "                    AmountToApply = MonitoredLayerTarget - MonitoredLayerSW;",
                "                    AmountToApply = Math.Min(AmountToApply, MaximumIrrigationAmount);",
                "                    AmountToApply = Math.Min(AmountToApply, SeasonsAllocation - SeasonAppliedAmount);",
                "                    AmountToApply = Math.Max(AmountToApply, 0.0);",
                "                    Irrigation.Apply(amount: AmountToApply, depth: 0.0);",
                "                    DaysSinceLastApplication = 0;",
                "                    SeasonAppliedAmount += AmountToApply;",
                "                    summary.WriteMessage(this, \"Automatic irrigation  applied, \" + AmountToApply.ToString(\"#0.0\") + \" mm\", MessageType.Diagnostic);",
                "                }",
                "            }",
                "        }",
                "",
                "        // computes the water thresholds in the soil down to a given depth",
                "        private void calculateWaterThresholds(double depthToCalculate)",
                "        {",
                "            MonitoredLayerLL = 0.0;",
                "            MonitoredLayerDUL = 0.0;",
                "            double accumulatedDepth = 0.0;",
                "            lastLayerFraction = 0.0;",
                "            lastLayer = 0;",
                "            for (int layer = 0; accumulatedDepth <= depthToCalculate; layer++)",
                "            {",
                "                double layerFraction = (depthToCalculate - accumulatedDepth)/soilPhysical.Thickness[layer];",
                "                layerFraction = Math.Min(1.0, Math.Max(0.0, layerFraction));",
                "                MonitoredLayerLL += soilPhysical.LL15mm[layer]*layerFraction;",
                "                MonitoredLayerDUL += soilPhysical.DULmm[layer]*layerFraction;",
                "                accumulatedDepth += soilPhysical.Thickness[layer];",
                "                if (accumulatedDepth >= depthToCalculate)",
                "                {",
                "                    lastLayerFraction = layerFraction;",
                "                    lastLayer = layer;",
                "                }",
                "            }",
                "",
                "            MonitoredLayerPAWC = MonitoredLayerDUL - MonitoredLayerLL;",
                "        }",
                "",
                "        // computes the amount of water in the soil down to a given depth",
                "        private void calculateSoilWater(double depthToCalculate)",
                "        {",
                "            MonitoredLayerSW = 0.0;",
                "            double accumulatedDepth = 0.0;",
                "            for (int layer = 0; accumulatedDepth <= depthToCalculate; layer++)",
                "            {",
                "                if (layer < lastLayer)",
                "                {",
                "                    MonitoredLayerSW += waterBalance.SWmm[layer];",
                "                }",
                "                else",
                "                {",
                "                    MonitoredLayerSW += waterBalance.SWmm[layer]*lastLayerFraction;",
                "                }",
                "",
                "                accumulatedDepth += soilPhysical.Thickness[layer];",
                "            }",
                "",
                "            MonitoredLayerPAW = Math.Max(0.0, MonitoredLayerSW - MonitoredLayerLL);",
                "        }",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "IrrigationIsEnabled",
                  "Value": "True"
                },
                {
                  "Key": "SeasonStartDate",
                  "Value": "1-Sep"
                },
                {
                  "Key": "SeasonEndDate",
                  "Value": "30-Apr"
                },
                {
                  "Key": "OnlyApplyOntoCrop",
                  "Value": "True"
                },
                {
                  "Key": "SeasonsAllocation",
                  "Value": "1000"
                },
                {
                  "Key": "TriggerFraction",
                  "Value": "0.8"
                },
                {
                  "Key": "RefillFraction",
                  "Value": "0.95"
                },
                {
                  "Key": "MaximumIrrigationAmount",
                  "Value": "40"
                },
                {
                  "Key": "ReturnDays",
                  "Value": "3"
                },
                {
                  "Key": "DepthToMonitor",
                  "Value": "600"
                },
                {
                  "Key": "LimitMonitoringDepth",
                  "Value": "True"
                }
              ],
              "Name": "AutomaticIrrigation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "// This script can be used to apply N fertiliser automatically, based soil mineral N status",
                "// Blame to RCichota, last updated in 18/Mar/2025",
                "",
                "using System;",
                "using System.Xml.Serialization;",
                "using Newtonsoft.Json;",
                "using APSIM.Shared.Utilities;",
                "using Models.Core;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.Interfaces;",
                "using Models.Soils.Nutrients;",
                "",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    [System.Xml.Serialization.XmlInclude(typeof(Model))]",
                "    public class Script : Model",
                "    {",
                "        //Communication to other modules",
                "        [Link] private Clock clock;",
                "        [Link] private ISummary summary;",
                "        [Link] private IPhysical soilPhysical;",
                "        [Link] private INutrient soilNutrient;",
                "        [Link] private Fertiliser Fertiliser;",
                "        [Link] private Plant SCRUM;",
                "",
                "        //User inputs from properties tab",
                "        [Separator(\"Generic N fertiliser management\")]",
                "        [Description(\" Enable automatic fertiliser management?                           \")]",
                "        public bool FertiliserIsEnabled {get; set;}",
                "",
                "        [Description(\" Date to start the fertiliser season (dd-mmm):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public string SeasonStartDate {get; set;}",
                "",
                "        [Description(\" Date to end the fertiliser season (dd-mmm):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public string SeasonEndDate {get; set;}",
                "",
                "        [Description(\" Only fertilise if there is a crop on the field?\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public bool OnlyApplyOntoCrop {get; set;}",
                "",
                "        [Description(\" Season allocation (kg N/ha):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double SeasonsAllocation {get; set;}",
                "",
                "        [Description(\" Minimum soil mineral N, trigger an application (kg N/ha):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double TriggerSoilN {get; set;}",
                "",
                "        [Description(\" Fertiliser N amount per application (kg N/ha):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double AmountToApply {get; set;}",
                "",
                "        [Description(\" Type of fertiliser to apply:\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\", Type = DisplayType.FertiliserType)]",
                "        public string FertiliserType { get; set; }",
                "",
                "        [Description(\" Minimum number of days between applications:\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double ReturnDays {get; set;}",
                "",
                "        [Description(\" Depth to calculate soil mineral N (mm):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double DepthToMonitor {get; set;}",
                "",
                "        [Description(\" Limit the depth to the rooting depth?\")]",
                "        [Display(VisibleCallback = \"FertOnAndOnlyOnCrops\")]",
                "        public bool LimitMonitoringDepth {get; set;}",
                "",
                "        //Class members",
                "        [JsonIgnore] public bool SeasonIsOpen {get; set;}",
                "        [JsonIgnore] private bool CropIsActive {get; set;}",
                "        [JsonIgnore] private bool SpreaderIsAvailable {get; set;}",
                "        [JsonIgnore] private bool SoilNitrogenIsLow {get; set;}",
                "        [JsonIgnore] private bool FertiliserIsAvailable {get; set;}",
                "",
                "        [JsonIgnore] public double MonitoredLayerSoilN {get; set;}",
                "        [JsonIgnore] public double MonitoredDepth {get; set;}",
                "",
                "        [JsonIgnore] public double SeasonAppliedAmount {get; set;}",
                "        [JsonIgnore] public double DaysSinceLastApplication {get; set;}",
                "",
                "        //Internal Variables",
                "        private bool FertOnAndOnlyOnCrops",
                "        { get {return FertiliserIsEnabled && OnlyApplyOntoCrop; }}",
                "",
                "",
                "        [EventSubscribe(\"StartOfSimulation\")]",
                "        private void OnStartOfSimulation(object sender, EventArgs e)",
                "        {",
                "            // initialise some variables",
                "            DaysSinceLastApplication = ReturnDays;",
                "            if (!OnlyApplyOntoCrop)",
                "            {",
                "                LimitMonitoringDepth = false;",
                "            }",
                "",
                "            MonitoredDepth = DepthToMonitor;",
                "        }",
                "",
                "        [EventSubscribe(\"StartOfDay\")]",
                "        private void OnStartOfDay(object sender, EventArgs e)",
                "        {",
                "            // check whether we are starting a new season, zero amount",
                "            if (DateUtilities.DatesAreEqual(SeasonStartDate, clock.Today))",
                "            {",
                "                SeasonAppliedAmount = 0.0;",
                "            }",
                "        }",
                "",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "            // get the current amount of nitrogen in the soil",
                "            if (LimitMonitoringDepth)",
                "            { // get the current rooting depth, no less than 50mm, no more than DepthToMonitor",
                "                MonitoredDepth = DepthToMonitor;",
                "                if (SCRUM.IsAlive)",
                "                {",
                "                    MonitoredDepth = Math.Min(DepthToMonitor, Math.Max(50.0, SCRUM.Root.Depth));",
                "                }",
                "            }",
                "",
                "            calculateSoilMineralNitrogen(MonitoredDepth);",
                "",
                "            // check N status and management conditions, if we can fertilise at all",
                "            if (FertiliserIsEnabled)",
                "            {",
                "                DaysSinceLastApplication += 1;",
                "",
                "                // are we within the irrigation season?",
                "                SeasonIsOpen = false;",
                "                if (DateUtilities.WithinDates(SeasonStartDate, clock.Today, SeasonEndDate))",
                "                {",
                "                    SeasonIsOpen = true;",
                "                }",
                "",
                "                // is there a crop in the ground that needs fertiliser?",
                "                CropIsActive = true;",
                "                if (OnlyApplyOntoCrop)",
                "                {",
                "                    CropIsActive = false;",
                "                    if (SCRUM.IsAlive)",
                "                    {",
                "                        CropIsActive = true;",
                "                    }",
                "                }",
                "",
                "                // is the spreader available?",
                "                SpreaderIsAvailable = false;",
                "                if (DaysSinceLastApplication >= ReturnDays)",
                "                {",
                "                    SpreaderIsAvailable = true;",
                "                }",
                "",
                "                // is the soil N low enough to require fertiliser?",
                "                SoilNitrogenIsLow = false;",
                "                if (MonitoredLayerSoilN <= TriggerSoilN)",
                "                {",
                "                    SoilNitrogenIsLow = true;",
                "                }",
                "",
                "                // is there N fertiliser available, within allocation?",
                "                FertiliserIsAvailable = false;",
                "                if (SeasonAppliedAmount < SeasonsAllocation)",
                "                {",
                "                    FertiliserIsAvailable = true;",
                "                }",
                "",
                "                //Lets bloody well fertilise then!!!!",
                "                if (SeasonIsOpen && CropIsActive && SpreaderIsAvailable && SoilNitrogenIsLow && FertiliserIsAvailable)",
                "                {",
                "                    AmountToApply = Math.Min(AmountToApply, SeasonsAllocation - SeasonAppliedAmount);",
                "                    AmountToApply = Math.Max(AmountToApply, 0.0);",
                "                    Fertiliser.Apply(amount: AmountToApply, type: FertiliserType, depth: 10.0);",
                "                    DaysSinceLastApplication = 0;",
                "                    SeasonAppliedAmount += AmountToApply;",
                "                    summary.WriteMessage(this, \"Automatic N fertiliser applied, \" + AmountToApply.ToString(\"#0.0\") + \" kgN/ha\", MessageType.Diagnostic);",
                "                }",
                "            }",
                "        }",
                "",
                "        // computes the amount of mineral N in the soil down to a given depth",
                "        private void calculateSoilMineralNitrogen(double depthToCalculate)",
                "        {",
                "            MonitoredLayerSoilN = 0.0;",
                "            double accumulatedDepth = 0.0;",
                "            for (int layer = 0; accumulatedDepth <= depthToCalculate; layer++)",
                "            {",
                "                double layerFraction = (depthToCalculate - accumulatedDepth)/soilPhysical.Thickness[layer];",
                "                layerFraction = Math.Min(1.0, Math.Max(0.0, layerFraction));",
                "                MonitoredLayerSoilN += (soilNutrient.MineralN[layer])*layerFraction;",
                "                accumulatedDepth += soilPhysical.Thickness[layer];",
                "            }",
                "        }",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "FertiliserIsEnabled",
                  "Value": "True"
                },
                {
                  "Key": "SeasonStartDate",
                  "Value": "1-Aug"
                },
                {
                  "Key": "SeasonEndDate",
                  "Value": "30-Apr"
                },
                {
                  "Key": "OnlyApplyOntoCrop",
                  "Value": "False"
                },
                {
                  "Key": "SeasonsAllocation",
                  "Value": "1000"
                },
                {
                  "Key": "TriggerSoilN",
                  "Value": "75"
                },
                {
                  "Key": "AmountToApply",
                  "Value": "25"
                },
                {
                  "Key": "FertiliserType",
                  "Value": "UreaN"
                },
                {
                  "Key": "ReturnDays",
                  "Value": "3"
                },
                {
                  "Key": "DepthToMonitor",
                  "Value": "300"
                },
                {
                  "Key": "LimitMonitoringDepth",
                  "Value": "False"
                }
              ],
              "Name": "AutomaticFertiliser",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Report, Models",
              "VariableNames": [
                "[Clock].Today",
                "[SCRUM].SowingData.Cultivar",
                "",
                "// SCRUM Biomass",
                "[SCRUM].Total.Wt",
                "[SCRUM].Total.N",
                "[SCRUM].TotalDMAtHarvest",
                "[SCRUM].Product.Live.Wt",
                "[SCRUM].Product.Live.N",
                "[SCRUM].Product.Live.NConc",
                "[SCRUM].Product.DMAtHarvest",
                "[SCRUM].Product.ExpectedYield",
                "[SCRUM].Product.DryMatterContent",
                "[SCRUM].Product.Yield ",
                "[SCRUM].Stover.Live.Wt",
                "[SCRUM].Stover.Live.N",
                "[SCRUM].Stover.Live.NConc",
                "[SCRUM].Stover.DMAtHarvest",
                "[SCRUM].Stover.Height",
                "[SCRUM].Stover.LAI",
                "[SCRUM].Stover.LAIDead",
                "[SCRUM].Stover.LAITotal",
                "[SCRUM].Stover.CoverDead",
                "[SCRUM].Stover.CoverGreen",
                "[SCRUM].Stover.CoverTotal",
                "[SCRUM].Root.Live.Wt",
                "[SCRUM].Root.Live.N",
                "[SCRUM].Root.Live.NConc",
                "[SCRUM].Root.DMatHarvest",
                "[SCRUM].Root.Depth",
                "",
                "// SCRUM Phenology",
                "[SCRUM].Phenology.AccumulatedEmergedTt",
                "[SCRUM].Phenology.AccumulatedTt",
                "[SCRUM].Phenology.CurrentPhaseName",
                "[SCRUM].Phenology.CurrentStageName",
                "[SCRUM].Phenology.Stage",
                "[SCRUM].Phenology.ThermalTime",
                "",
                "// SCRUM Allocation",
                "[SCRUM].Product.DMDemands.Structural.DMDemandFunction.PartitionFraction",
                "[SCRUM].Stover.DMDemands.Structural.DMDemandFunction.PartitionFraction",
                "[SCRUM].Root.DMDemands.Structural.DMDemandFunction.PartitionFraction",
                "[SCRUM].Arbitrator.DM.TotalPlantDemand",
                "[SCRUM].Arbitrator.DM.TotalFixationSupply",
                "[SCRUM].Arbitrator.N.TotalPlantDemand",
                "[SCRUM].Arbitrator.N.TotalPlantSupply",
                "[SCRUM].Arbitrator.N.TotalPlantSupply",
                "[SCRUM].Product.Allocated.Wt",
                "[SCRUM].Stover.Allocated.Wt",
                "[SCRUM].Root.Allocated.Wt",
                "",
                "// SCRUM limiting factors",
                "[SCRUM].Arbitrator.DM.NutrientLimitation",
                "[SCRUM].Arbitrator.DM.SinkLimitation",
                "[SCRUM].Arbitrator.FN",
                "[SCRUM].Stover.Fn",
                "[SCRUM].Stover.Fw",
                "",
                "// Water balance",
                "sum([Soil].SoilWater.SWmm) as SoilTotalWater",
                "[Soil].SoilWater.Drainage",
                "[Soil].SoilWater.Es",
                "[Soil].SoilWater.Runoff",
                "[Irrigation].IrrigationApplied",
                "[SCRUM].Stover.WaterDemand",
                "[SCRUM].Stover.Transpiration",
                "[SCRUM].Root.WaterUptake",
                "",
                "[AutomaticIrrigation].Script.AmountToApply",
                "[AutomaticIrrigation].Script.MonitoredLayerLL",
                "[AutomaticIrrigation].Script.MonitoredLayerDUL",
                "[AutomaticIrrigation].Script.MonitoredLayerSW",
                "[AutomaticIrrigation].Script.MonitoredLayerTarget",
                "[AutomaticIrrigation].Script.MonitoredLayerTrigger",
                "",
                "// Nitrogen balance",
                "sum([Soil].Nutrient.MineralN) as TotalSoilNitrogen",
                "[Fertiliser].NitrogenApplied",
                "[Soil].SoilWater.LeachNO3",
                "[Soil].Nutrient.DenitrifiedN",
                "[SCRUM].Root.NUptake",
                "",
                "[AutomaticFertiliser].Script.MonitoredLayerSoilN",
                "[AutomaticFertiliser].Script.AmountToApply"
              ],
              "EventNames": [
                "[Clock].DoReport"
              ],
              "GroupByVariableName": null,
              "Name": "Report",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.SimplePlantModels.ScrumCropInstance, Models",
              "HarvestIndex": 0.45,
              "MoistureContent": 0.14,
              "RootProportion": 0.1,
              "MaxRootDepth": 1005.0,
              "MaxHeight": 700.0,
              "MaxCover": 0.97,
              "ExtinctionCoefficient": 0.55,
              "rCover": 1.0,
              "TypicalHarvestStage": "Ripe",
              "SeedlingNConc": 0.05,
              "ProductHarvestNConc": 0.015,
              "StoverHarvestNConc": 0.01,
              "RootNConc": 0.01,
              "LegumeFactor": 0.0,
              "BaseTemperature": 0.0,
              "OptimumTemperature": 30.0,
              "MaxTemperature": 40.0,
              "Tt_SowToEmergence": 100.0,
              "GSMax": 0.008,
              "R50": 150.0,
              "ConsiderWaterStress": true,
              "EstablishDate": "0001-01-01T00:00:00",
              "EstablishStage": null,
              "PlantingDepth": 0.0,
              "ExpectedYield": 0.0,
              "HarvestDate": "0001-01-01T00:00:00",
              "Tt_EstablishmentToHarvest": 0.0,
              "HarvestStage": null,
              "FieldLoss": 0.0,
              "ResidueRemoval": 0.0,
              "ResidueIncorporation": 0.0,
              "ResidueIncorporationDepth": 0.0,
              "Factor_XoBiomass": 0.5,
              "Factor_bBiomass": 0.2,
              "Factor_XoCover": 0.4,
              "Factor_bCover": 0.2,
              "Factor_XoHeight": 0.7,
              "Factor_bHeight": 0.2,
              "Tt_EmergenceToMaturity": 0.0,
              "Name": "ScrumCereal",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Crop Biomass (g/m2)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Plant Biomass components",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Live.Wt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Stover",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -8388608,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.Live.Wt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32768,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Product.Live.Wt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Product",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Total.Wt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Total",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Crop Nitrogen (g/m2)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Plant Nitrogen components",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Live.N",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Stover",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -8388608,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.Live.N",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32704,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Product.Live.N",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Product",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Total.N",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Total",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Crop Nitrogen (g/m2)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Plant Nitrogen conc",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Live.NConc",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Stover",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -8388608,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.Live.NConc",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32704,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Product.Live.NConc",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Product",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Water (mm)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Length (mm)",
              "Position": 2,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Water supply and demand",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777088,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.WaterSupply",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Supply",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -8372224,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.WaterUptake",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Uptake",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65536,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.WaterDemand",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Demand",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Transpiration",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Transpiration",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65281,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "Soil.SoilWater.Eo",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Potential",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -32768,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.Depth",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root Depth",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -16711936,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Height",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Canopy Height",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Cover ",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 2,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Crop structure",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 0,
              "MarkerSize": 2,
              "Line": 4,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "SCRUM.Phenology.AccumulatedTt",
              "YFieldName": "SCRUM.Root.Depth",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root Depth",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65536,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 0,
              "MarkerSize": 2,
              "Line": 4,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "SCRUM.Phenology.AccumulatedTt",
              "YFieldName": "SCRUM.Stover.CoverTotal",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "CoverTotal",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -1663232,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 0,
              "MarkerSize": 2,
              "Line": 4,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "SCRUM.Phenology.AccumulatedTt",
              "YFieldName": "SCRUM.Stover.CoverDead",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "CoverDead",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 0,
              "MarkerSize": 2,
              "Line": 4,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "SCRUM.Phenology.AccumulatedTt",
              "YFieldName": "SCRUM.Stover.CoverGreen",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "CoverGreen",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -3376729,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 0,
              "MarkerSize": 2,
              "Line": 4,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "SCRUM.Phenology.AccumulatedTt",
              "YFieldName": "SCRUM.Stover.Height",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Height",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Nitrogen (g/m2)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "N supply and demand",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16776961,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.N.TotalPlantDemand",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "N demand",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65536,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.N.TotalPlantSupply",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "N supply",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "DM (g/m2/d)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "DM supply and demand",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16776961,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.DM.TotalFixationSupply",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Fixation supply",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.DM.TotalPlantDemand",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Total demand",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32704,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.DM.SinkLimitation",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Sink limation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65408,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.DM.NutrientLimitation",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Nutrient limitation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Water (mm)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Irrigation",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16776961,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "AutomaticIrrigation.Script.MonitoredLayerTarget",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Refill target",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "AutomaticIrrigation.Script.MonitoredLayerTrigger",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Trigger deficit",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65536,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "AutomaticIrrigation.Script.MonitoredLayerSW",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Top SWmm",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "AutomaticIrrigation.Script.MonitoredLayerDUL",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Top DULmm",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32768,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "Irrigation.IrrigationApplied",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Irrigation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -8388353,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "AutomaticIrrigation.Script.AmountToApply",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Amount to apply",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": 0.0,
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Stress Factors",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16776961,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Fw",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "FW",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.FN",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "FN",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "SCRUM.Phenology.AccumulatedEmergedTt",
              "Position": 2,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 5,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Phenology",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Phenology.Stage",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Stage",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -1663232,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Phenology.AccumulatedEmergedTt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Emerged Tt",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Phenology.AccumulatedTt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Tt",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -3376729,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Height",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Height",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "LAI",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.LAI",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "LAIGreen",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -1663232,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.LAIDead",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "LAIDead",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 2,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.LAITotal",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "LAITotal",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Cover ",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 3,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "AccumTt",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Phenology.AccumulatedTt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "AccumTt",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Core.Simulation, Models",
      "Descriptors": null,
      "Name": "SCRUMRotationFromManager",
      "ResourceName": null,
      "Children": [
        {
          "$type": "Models.Memo, Models",
          "Text": "This example specifies a simple rotation of two seperate crops simulated using SCRUM.  The necessary components in the Field are:\n* the SCRUM model\n* A SCRUMCropInstance (SCRUMCereal) that parameterises the first crop and a manager script (\"Sow Cereal on Oct2000 harvest apr2001\") that sets the management informaiton for this crop and establishes it on the appropriate date.\n* A SCRUMCropInstance (SCRUMLegume) that parameterises the second crop and a manager script (\"Sow legume Jun2001 harvest after 600 oCd\") that sets the management informaiton for this crop and establishes it on the appropriate date.\n",
          "Name": "Description",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Climate.Weather, Models",
          "ConstantsFile": null,
          "FileName": "%root%/Tests/WeatherFiles/lincoln.met",
          "ExcelWorkSheetName": null,
          "Name": "Weather",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Clock, Models",
          "Start": "2000-07-01T00:00:00",
          "End": "2002-01-01T00:00:00",
          "Name": "Clock",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Summary, Models",
          "Verbosity": 100,
          "Name": "Summary",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
          "Name": "Soil Arbitrator",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Zone, Models",
          "Area": 1.0,
          "Slope": 0.0,
          "AspectAngle": 0.0,
          "Altitude": 50.0,
          "Name": "Field",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Soils.Soil, Models",
              "RecordNumber": 0,
              "ASCOrder": null,
              "ASCSubOrder": null,
              "SoilType": null,
              "LocalName": null,
              "Site": null,
              "NearestTown": null,
              "Region": null,
              "State": null,
              "Country": null,
              "NaturalVegetation": null,
              "ApsoilNumber": null,
              "Latitude": 0.0,
              "Longitude": 0.0,
              "LocationAccuracy": null,
              "YearOfSampling": null,
              "DataSource": null,
              "Comments": null,
              "Name": "Soil",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Soils.Chemical, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "PH": [
                    6.6,
                    6.2,
                    5.7,
                    5.5,
                    5.5,
                    5.5
                  ],
                  "PHUnits": 0,
                  "EC": null,
                  "ESP": null,
                  "CEC": [
                    12.440000000000001,
                    11.6525,
                    11.045,
                    10.662500000000001,
                    9.4025,
                    9.4025
                  ],
                  "ECMetadata": null,
                  "CLMetadata": null,
                  "CECMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "ESPMetadata": null,
                  "PHMetadata": null,
                  "Name": "Chemical",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Water, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.33,
                    0.33,
                    0.31,
                    0.15,
                    0.1,
                    0.06
                  ],
                  "InitialPAWmm": 180.0,
                  "RelativeTo": "LL15",
                  "FilledFromTop": false,
                  "Name": "Water",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Physical, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "ParticleSizeSand": [
                    5.0,
                    5.0,
                    5.0,
                    5.0,
                    5.0,
                    5.0
                  ],
                  "ParticleSizeSilt": [
                    65.0,
                    65.0,
                    65.0,
                    65.0,
                    65.0,
                    65.0
                  ],
                  "ParticleSizeClay": [
                    30.0,
                    30.0,
                    30.0,
                    30.0,
                    30.0,
                    30.0
                  ],
                  "Rocks": [
                    0.0,
                    0.0,
                    0.1353355580274379,
                    0.0,
                    0.1353355580274379,
                    0.1353355580274379
                  ],
                  "Texture": null,
                  "BD": [
                    1.2,
                    1.2,
                    1.2,
                    1.2,
                    1.2,
                    1.2
                  ],
                  "AirDry": [
                    0.08,
                    0.13,
                    0.1,
                    0.06,
                    0.04,
                    0.02
                  ],
                  "LL15": [
                    0.13,
                    0.13,
                    0.1,
                    0.06,
                    0.04,
                    0.02
                  ],
                  "DUL": [
                    0.33,
                    0.33,
                    0.31,
                    0.15,
                    0.1,
                    0.06
                  ],
                  "SAT": [
                    0.5,
                    0.5,
                    0.44,
                    0.46,
                    0.44,
                    0.44
                  ],
                  "KS": null,
                  "BDMetadata": null,
                  "AirDryMetadata": null,
                  "LL15Metadata": null,
                  "DULMetadata": null,
                  "SATMetadata": null,
                  "KSMetadata": null,
                  "RocksMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "TextureMetadata": null,
                  "ParticleSizeSandMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "ParticleSizeSiltMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "ParticleSizeClayMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "Name": "Physical",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.13,
                        0.13,
                        0.1,
                        0.08,
                        0.11,
                        0.11
                      ],
                      "KL": [
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "KLMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "XFMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "Name": "SCRUMSoil",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.13,
                        0.13,
                        0.27,
                        0.27,
                        0.3,
                        0.3
                      ],
                      "KL": [
                        0.1,
                        0.06,
                        0.03,
                        0.01,
                        0.0,
                        0.0
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        0.1,
                        0.0,
                        0.0,
                        0.0
                      ],
                      "LLMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "KLMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "XFMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "Name": "PotatoSoil",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.WaterModel.WaterBalance, Models",
                  "SummerDate": "1-Nov",
                  "SummerU": 9.0,
                  "SummerCona": 4.4,
                  "WinterDate": "1-Apr",
                  "WinterU": 9.0,
                  "WinterCona": 4.4,
                  "DiffusConst": 88.0,
                  "DiffusSlope": 35.4,
                  "Salb": 0.18,
                  "CN2Bare": 68.0,
                  "CNRed": 20.0,
                  "CNCov": 0.8,
                  "DischargeWidth": 0.0,
                  "CatchmentArea": 0.0,
                  "PSIDul": -100.0,
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "SWCON": [
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55
                  ],
                  "KLAT": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "Name": "SoilWater",
                  "ResourceName": "WaterBalance",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Nutrients.Nutrient, Models",
                  "Name": "Nutrient",
                  "ResourceName": "Nutrient",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Organic, Models",
                  "FOMCNRatio": 30.0,
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "Carbon": [
                    1.82,
                    1.47,
                    1.2,
                    1.03,
                    0.47,
                    0.47
                  ],
                  "CarbonUnits": 0,
                  "SoilCNRatio": [
                    11.5,
                    11.5,
                    11.5,
                    11.5,
                    11.5,
                    11.5
                  ],
                  "FBiom": [
                    0.025,
                    0.025,
                    0.015,
                    0.01,
                    0.01,
                    0.01
                  ],
                  "FInert": [
                    0.3,
                    0.4,
                    0.75,
                    0.9,
                    0.96,
                    0.96
                  ],
                  "FOM": [
                    1243.9310541346904,
                    833.8319214727269,
                    457.61666105087295,
                    251.1453484552152,
                    137.83148958311097,
                    75.64352530338392
                  ],
                  "CarbonMetadata": null,
                  "FOMMetadata": null,
                  "Name": "Organic",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.LayerStructure, Models",
                  "Thickness": [
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0,
                    100.0
                  ],
                  "Name": "LayerStructure",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    225.0,
                    12.5,
                    1.389,
                    1.389,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "ConcInSolution": null,
                  "Name": "NO3",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "ConcInSolution": null,
                  "Name": "NH4",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 1,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "ConcInSolution": null,
                  "Name": "Urea",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.SoilTemp.SoilTemperature, Models",
                  "Thickness": null,
                  "InitialValues": null,
                  "Name": "Temperature",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Surface.SurfaceOrganicMatter, Models",
              "SurfOM": [],
              "Canopies": [],
              "InitialResidueName": "wheat",
              "InitialResidueType": "wheat",
              "InitialResidueMass": 2000.0,
              "InitialStandingFraction": 0.0,
              "InitialCPR": 0.0,
              "InitialCNR": 80.0,
              "Name": "SurfaceOrganicMatter",
              "ResourceName": "SurfaceOrganicMatter",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.MicroClimate, Models",
              "a_interception": 0.0,
              "b_interception": 1.0,
              "c_interception": 0.0,
              "d_interception": 0.0,
              "SoilHeatFluxFraction": 0.4,
              "MinimumHeightDiffForNewLayer": 0.0,
              "NightInterceptionFraction": 0.5,
              "ReferenceHeight": 2.0,
              "Name": "MicroClimate",
              "ResourceName": "MicroClimate",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "Name": "SCRUM",
              "ResourceName": "SCRUM",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using System;",
                "using System.Linq;",
                "using APSIM.Shared.Utilities;",
                "using Models.Core;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.PMF.SimplePlantModels;",
                "using Models.Utilities;",
                "",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    public class Script : Model",
                "    {",
                "        [Link] Clock clock;",
                "        [Link] Zone zone;",
                "        [Link(Type = LinkType.Scoped, ByName = true)]",
                "        public Plant scrum = null;",
                "",
                "        [Separator(\"Define the SCRUM crop to plant and its basic management\")]",
                "",
                "        /// <summary>SCRUM crop to stablish</summary>",
                "        [Description(\"Chose the crop to plant:\")]",
                "        [Display(Type = DisplayType.SCRUMcropName)]",
                "        public string CropName { get; set; }",
                "",
                "        [Separator(\"Specify establishment and harvest conditions for this crop\")]",
                "",
                "        /// <summary>Date to establishment the crop</summary>",
                "        [Description(\"Establishment date (dd-mmm or dd/mm/yyyy):\")]",
                "        public string EstablishDate { get; set; }",
                "",
                "        /// <summary>Stages at which the SCRUM is established</summary>",
                "        [Description(\"Choose the establishment stage\")]",
                "        [Display(Type = DisplayType.ScrumEstablishStages)]",
                "        public string EstablishStage {get; set;}",
                "",
                "        /// <summary>Depth at which the crop/seeds are planted.</summary>",
                "        [Description(\" Planting depth (mm):\")]",
                "        public double PlantingDepth { get; set; }",
                "",
                "        /// <summary>Choice on how the duration of crop is defined</summary>",
                "        [Description(\"Choose how the crop cycle is defined:\")]",
                "        public HarvestTimingOption HarvestTimeOption {get; set;}",
                "",
                "        private bool isHarvestDateDefined { get { return HarvestTimeOption == HarvestTimingOption.SettingDate; } }",
                "        private bool isThermalTimeDefined { get { return HarvestTimeOption == HarvestTimingOption.SettingThermalTime; } }",
                "",
                "        /// <summary>Date to establishment the crop</summary>",
                "        [Description(\"  Harvest date (dd/mm/yyyy):\")]",
                "        [Display(VisibleCallback = \"isHarvestDateDefined\")]",
                "        public DateTime HarvestDate { get; set; }",
                "",
                "        /// <summary>Thermal time from establishment to harvest (if blank or zero must specify harvest date)</summary>",
                "        [Description(\"  Thermal time from establishment to harvest (oCd):\")]",
                "        [Display(VisibleCallback = \"isThermalTimeDefined\")]",
                "        public double Tt_EstablishToHarvest { get; set; }",
                "",
                "        /// <summary>Stage at which the crop is to be harvested at</summary>",
                "        [Description(\"Choose the stage to harvest the crop:\")]",
                "        [Display(Type = DisplayType.ScrumHarvestStages)]",
                "        public string HarvestStage {get; set;}",
                "",
                "        [Separator(\"Specify an appropriate potential yield for the crop (based on assumed genotype, sowing date, and local conditions)\\n\" +",
                "                   \"  *SCRUM will reduce yield if water or N stress are predicted\")]",
                "",
                "        /// <summary>Expected crop yield (t FW/ha)</summary>",
                "        [Description(\"Potential crop yield, fresh weight (t/ha)\")]",
                "        public double ExpectedYield {get; set;}",
                "",
                "        [Separator(\"Specify proportions of field loss and residue removal at harvest\")]",
                "",
                "        /// <summary>Proportion of product that is left in the field at harvest (due to disease, market, ect.)</summary>",
                "        [Description(\"Proportion of product lost in the field at harvest (0-1):\")]",
                "        public double FieldLoss { get; set; }",
                "",
                "        /// <summary>Proportion of stover that is removed from the field at harvest (e.g., bailing)</summary>",
                "        [Description(\"Proportion of stover removed from the field at harvest (0-1):\")]",
                "        public double ResidueRemoval { get; set; }",
                "",
                "        /// <summaryProportion of residues that is incorporated by cultivation after harvest</summary>",
                "        [Description(\"Proportion of residue incorporated to soil at harvest (0-1):\")]",
                "        public double ResidueIncorporation { get; set; }",
                "",
                "        /// <summary>Depth down to which the residues that are incorporated to by cultivation after harvest</summary>",
                "        [Description(\"Depth to incorporate residues (mm):\")]",
                "        public double ResidueIncorporationDepth { get; set; }",
                "",
                "        private ScrumManagementInstance management;",
                "",
                "",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "            if (DateUtilities.DatesAreEqual(EstablishDate, clock.Today))",
                "            {",
                "                if (isHarvestDateDefined && (HarvestDate <= clock.Today))",
                "                {",
                "                    throw new Exception(\"Harvest date is earlier than establishment date\");",
                "                }",
                "",
                "                management = new ScrumManagementInstance(cropName: CropName,",
                "                                                         establishDate: clock.Today,",
                "                                                         establishStage: EstablishStage,",
                "                                                         plantingDepth: PlantingDepth,",
                "                                                         harvestStage: HarvestStage,",
                "                                                         expectedYield: ExpectedYield,",
                "                                                         harvestDate: isHarvestDateDefined? HarvestDate : null,",
                "                                                         ttEstablishmentToHarvest: isThermalTimeDefined? Tt_EstablishToHarvest: double.NaN,",
                "                                                         fieldLoss: FieldLoss,",
                "                                                         residueRemoval: ResidueRemoval,",
                "                                                         residueIncorporation: ResidueIncorporation,",
                "                                                         residueIncorporationDepth: ResidueIncorporationDepth);",
                "                ScrumCropInstance currentCrop = zone.FindDescendant<ScrumCropInstance>(CropName);",
                "                currentCrop.Establish(management);",
                "            }",
                "        }",
                "",
                "        /// <summary>Flag how harvest time is defined.</summary>",
                "        public enum HarvestTimingOption",
                "        {",
                "            /// <summary>A date is to be used.</summary>",
                "            SettingDate,",
                "            /// <summary>A given thermal time sum is to be used.</summary>",
                "            SettingThermalTime",
                "        }",
                "    }",
                "}",
                ""
              ],
              "Parameters": [
                {
                  "Key": "CropName",
                  "Value": "ScrumCereal"
                },
                {
                  "Key": "EstablishDate",
                  "Value": "14/10/2000"
                },
                {
                  "Key": "EstablishStage",
                  "Value": "Seed"
                },
                {
                  "Key": "PlantingDepth",
                  "Value": "15"
                },
                {
                  "Key": "HarvestTimeOption",
                  "Value": "SettingDate"
                },
                {
                  "Key": "HarvestDate",
                  "Value": "04/14/2001 00:00:00"
                },
                {
                  "Key": "Tt_EstablishToHarvest",
                  "Value": "1000"
                },
                {
                  "Key": "HarvestStage",
                  "Value": "Maturity"
                },
                {
                  "Key": "ExpectedYield",
                  "Value": "8"
                },
                {
                  "Key": "FieldLoss",
                  "Value": "0"
                },
                {
                  "Key": "ResidueRemoval",
                  "Value": "0"
                },
                {
                  "Key": "ResidueIncorporation",
                  "Value": "1"
                },
                {
                  "Key": "ResidueIncorporationDepth",
                  "Value": "150"
                }
              ],
              "Name": "Sow Cereal on Oct2000 harvest apr2001",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using System;",
                "using System.Linq;",
                "using APSIM.Shared.Utilities;",
                "using Models.Core;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.PMF.SimplePlantModels;",
                "using Models.Utilities;",
                "",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    public class Script : Model",
                "    {",
                "        [Link] Clock clock;",
                "        [Link] Zone zone;",
                "        [Link(Type = LinkType.Scoped, ByName = true)]",
                "        public Plant scrum = null;",
                "",
                "        [Separator(\"Define the SCRUM crop to plant and its basic management\")]",
                "",
                "        /// <summary>SCRUM crop to stablish</summary>",
                "        [Description(\"Chose the crop to plant:\")]",
                "        [Display(Type = DisplayType.SCRUMcropName)]",
                "        public string CropName { get; set; }",
                "",
                "        [Separator(\"Specify establishment and harvest conditions for this crop\")]",
                "",
                "        /// <summary>Date to establishment the crop</summary>",
                "        [Description(\"Establishment date (dd-mmm or dd/mm/yyyy):\")]",
                "        public string EstablishDate { get; set; }",
                "",
                "        /// <summary>Stages at which the SCRUM is established</summary>",
                "        [Description(\"Choose the establishment stage\")]",
                "        [Display(Type = DisplayType.ScrumEstablishStages)]",
                "        public string EstablishStage {get; set;}",
                "",
                "        /// <summary>Depth at which the crop/seeds are planted.</summary>",
                "        [Description(\" Planting depth (mm):\")]",
                "        public double PlantingDepth { get; set; }",
                "",
                "        /// <summary>Choice on how the duration of crop is defined</summary>",
                "        [Description(\"Choose how the crop cycle is defined:\")]",
                "        public HarvestTimingOption HarvestTimeOption {get; set;}",
                "",
                "        private bool isHarvestDateDefined { get { return HarvestTimeOption == HarvestTimingOption.SettingDate; } }",
                "        private bool isThermalTimeDefined { get { return HarvestTimeOption == HarvestTimingOption.SettingThermalTime; } }",
                "",
                "        /// <summary>Date to establishment the crop</summary>",
                "        [Description(\"  Harvest date (dd/mm/yyyy):\")]",
                "        [Display(VisibleCallback = \"isHarvestDateDefined\")]",
                "        public DateTime HarvestDate { get; set; }",
                "",
                "        /// <summary>Thermal time from establishment to harvest (if blank or zero must specify harvest date)</summary>",
                "        [Description(\"  Thermal time from establishment to harvest (oCd):\")]",
                "        [Display(VisibleCallback = \"isThermalTimeDefined\")]",
                "        public double Tt_EstablishToHarvest { get; set; }",
                "",
                "        /// <summary>Stage at which the crop is to be harvested at</summary>",
                "        [Description(\"Choose the stage to harvest the crop:\")]",
                "        [Display(Type = DisplayType.ScrumHarvestStages)]",
                "        public string HarvestStage {get; set;}",
                "",
                "        [Separator(\"Specify an appropriate potential yield for the crop (based on assumed genotype, sowing date, and local conditions)\\n\" +",
                "                   \"  *SCRUM will reduce yield if water or N stress are predicted\")]",
                "",
                "        /// <summary>Expected crop yield (t FW/ha)</summary>",
                "        [Description(\"Potential crop yield, fresh weight (t/ha)\")]",
                "        public double ExpectedYield {get; set;}",
                "",
                "        [Separator(\"Specify proportions of field loss and residue removal at harvest\")]",
                "",
                "        /// <summary>Proportion of product that is left in the field at harvest (due to disease, market, ect.)</summary>",
                "        [Description(\"Proportion of product lost in the field at harvest (0-1):\")]",
                "        public double FieldLoss { get; set; }",
                "",
                "        /// <summary>Proportion of stover that is removed from the field at harvest (e.g., bailing)</summary>",
                "        [Description(\"Proportion of stover removed from the field at harvest (0-1):\")]",
                "        public double ResidueRemoval { get; set; }",
                "",
                "        /// <summaryProportion of residues that is incorporated by cultivation after harvest</summary>",
                "        [Description(\"Proportion of residue incorporated to soil at harvest (0-1):\")]",
                "        public double ResidueIncorporation { get; set; }",
                "",
                "        /// <summary>Depth down to which the residues that are incorporated to by cultivation after harvest</summary>",
                "        [Description(\"Depth to incorporate residues (mm):\")]",
                "        public double ResidueIncorporationDepth { get; set; }",
                "",
                "        private ScrumManagementInstance management;",
                "",
                "",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "            if (DateUtilities.DatesAreEqual(EstablishDate, clock.Today))",
                "            {",
                "                if (isHarvestDateDefined && (HarvestDate <= clock.Today))",
                "                {",
                "                    throw new Exception(\"Harvest date is earlier than establishment date\");",
                "                }",
                "",
                "                management = new ScrumManagementInstance(cropName: CropName,",
                "                                                         establishDate: clock.Today,",
                "                                                         establishStage: EstablishStage,",
                "                                                         plantingDepth: PlantingDepth,",
                "                                                         harvestStage: HarvestStage,",
                "                                                         expectedYield: ExpectedYield,",
                "                                                         harvestDate: isHarvestDateDefined? HarvestDate : null,",
                "                                                         ttEstablishmentToHarvest: isThermalTimeDefined? Tt_EstablishToHarvest: double.NaN,",
                "                                                         fieldLoss: FieldLoss,",
                "                                                         residueRemoval: ResidueRemoval,",
                "                                                         residueIncorporation: ResidueIncorporation,",
                "                                                         residueIncorporationDepth: ResidueIncorporationDepth);",
                "                ScrumCropInstance currentCrop = zone.FindDescendant<ScrumCropInstance>(CropName);",
                "                currentCrop.Establish(management);",
                "            }",
                "        }",
                "",
                "        /// <summary>Flag how harvest time is defined.</summary>",
                "        public enum HarvestTimingOption",
                "        {",
                "            /// <summary>A date is to be used.</summary>",
                "            SettingDate,",
                "            /// <summary>A given thermal time sum is to be used.</summary>",
                "            SettingThermalTime",
                "        }",
                "    }",
                "}",
                ""
              ],
              "Parameters": [
                {
                  "Key": "CropName",
                  "Value": "ScrumLegume"
                },
                {
                  "Key": "EstablishDate",
                  "Value": "01/06/2001"
                },
                {
                  "Key": "EstablishStage",
                  "Value": "Seed"
                },
                {
                  "Key": "PlantingDepth",
                  "Value": "15"
                },
                {
                  "Key": "HarvestTimeOption",
                  "Value": "SettingThermalTime"
                },
                {
                  "Key": "HarvestDate",
                  "Value": "01/01/0001 00:00:00"
                },
                {
                  "Key": "Tt_EstablishToHarvest",
                  "Value": "600"
                },
                {
                  "Key": "HarvestStage",
                  "Value": "LateReproductive"
                },
                {
                  "Key": "ExpectedYield",
                  "Value": "3"
                },
                {
                  "Key": "FieldLoss",
                  "Value": "0.1"
                },
                {
                  "Key": "ResidueRemoval",
                  "Value": "0.6"
                },
                {
                  "Key": "ResidueIncorporation",
                  "Value": "0.5"
                },
                {
                  "Key": "ResidueIncorporationDepth",
                  "Value": "50"
                }
              ],
              "Name": "Sow legume Jun2001 harvest after 600 oCd",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Irrigation, Models",
              "Name": "Irrigation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Fertiliser, Models",
              "Name": "Fertiliser",
              "ResourceName": "Fertiliser",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "// This script can be used to apply irrigation automatically, based soil water status",
                "// Blame to RCichota, last updated in 18/Mar/2025",
                "",
                "using System;",
                "using System.Xml.Serialization;",
                "using Newtonsoft.Json;",
                "using APSIM.Shared.Utilities;",
                "using Models.Core;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.Interfaces;",
                "using Models.Soils.Nutrients;",
                "",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    [System.Xml.Serialization.XmlInclude(typeof(Model))]",
                "    public class Script : Model",
                "    {",
                "        //Communication to other modules",
                "        [Link] private Clock clock;",
                "        [Link] private ISummary summary;",
                "        [Link] private IPhysical soilPhysical;",
                "        [Link] private ISoilWater waterBalance;",
                "        [Link] private Irrigation Irrigation;",
                "        [Link] private Plant SCRUM;",
                "",
                "        //User inputs from properties tab",
                "        [Separator(\"Generic irrigation management\")]",
                "        [Description(\" Enable automatic irrigation management?              \")]",
                "        public bool IrrigationIsEnabled {get; set;}",
                "",
                "        [Description(\" Date to start the irrigation season (dd-mmm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public string SeasonStartDate {get; set;}",
                "",
                "        [Description(\" Date to end the irrigation season (dd-mmm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public string SeasonEndDate {get; set;}",
                "",
                "        [Description(\" Only irrigate if there is a crop on the field?\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public bool OnlyApplyOntoCrop {get; set;}",
                "",
                "        [Description(\" Season allocation (mm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double SeasonsAllocation {get; set;}",
                "",
                "        [Description(\" Fraction of PAWC to trigger irrigation (0-1):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double TriggerFraction {get; set;}",
                "",
                "        [Description(\" Fraction of PAWC to refill soil to (0-1):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double RefillFraction {get; set;}",
                "",
                "        [Description(\" Maximum irrigation amount per application (mm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double MaximumIrrigationAmount {get; set;}",
                "",
                "        [Description(\" Minimum number of days between irrigations:\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double ReturnDays {get; set;}",
                "",
                "        [Description(\" Depth to calculate PAWC (mm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double DepthToMonitor {get; set;}",
                "",
                "        [Description(\" Limit the depth to the rooting depth?\")]",
                "        [Display(VisibleCallback = \"IrrigOnAndOnlyOnCrops\")]",
                "        public bool LimitMonitoringDepth {get; set;}",
                "",
                "        //Class members",
                "        [JsonIgnore] public bool SeasonIsOpen {get; set;}",
                "        [JsonIgnore] private bool CropIsActive {get; set;}",
                "        [JsonIgnore] private bool IrrigatorIsAvailable {get; set;}",
                "        [JsonIgnore] private bool SoilIsDry {get; set;}",
                "        [JsonIgnore] private bool WaterIsAvailable {get; set;}",
                "",
                "        [JsonIgnore] public double MonitoredLayerTrigger {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerTarget {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerDUL {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerLL {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerSW {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerPAWC {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerPAW {get; set;}",
                "        [JsonIgnore] public double MonitoredDepth {get; set;}",
                "",
                "        [JsonIgnore] public double AmountToApply {get; set;}",
                "        [JsonIgnore] public double SeasonAppliedAmount {get; set;}",
                "        [JsonIgnore] public double DaysSinceLastApplication {get; set;}",
                "",
                "        //Internal Variables",
                "        private bool IrrigOnAndOnlyOnCrops",
                "        { get {return IrrigationIsEnabled && OnlyApplyOntoCrop; }}",
                "        private double lastLayerFraction;",
                "        private int lastLayer;",
                "",
                "",
                "        [EventSubscribe(\"StartOfSimulation\")]",
                "        private void OnStartOfSimulation(object sender, EventArgs e)",
                "        {",
                "            // initialise some variables",
                "            DaysSinceLastApplication = ReturnDays;",
                "            if (!OnlyApplyOntoCrop)",
                "            {",
                "                LimitMonitoringDepth = false;",
                "            }",
                "",
                "            // calculate soil water variables",
                "            calculateWaterThresholds(DepthToMonitor);",
                "            MonitoredLayerTrigger = MonitoredLayerLL + MonitoredLayerPAWC*TriggerFraction;",
                "            MonitoredLayerTarget = MonitoredLayerLL + MonitoredLayerPAWC*RefillFraction;",
                "            MonitoredDepth = DepthToMonitor;",
                "        }",
                "",
                "        [EventSubscribe(\"StartOfDay\")]",
                "        private void OnStartOfDay(object sender, EventArgs e)",
                "        {",
                "            // check whether we are starting a new season, zero amount",
                "            if (DateUtilities.DatesAreEqual(SeasonStartDate, clock.Today))",
                "            {",
                "                SeasonAppliedAmount = 0.0;",
                "            }",
                "        }",
                "",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "            // get the current amount of water in the soil",
                "            if (LimitMonitoringDepth)",
                "            { // get the current rooting depth, no less than 50mm, no more than DepthToMonitor",
                "                MonitoredDepth = DepthToMonitor;",
                "                if (SCRUM.IsAlive)",
                "                {",
                "                    MonitoredDepth = Math.Min(DepthToMonitor, Math.Max(50.0, SCRUM.Root.Depth));",
                "                }",
                "",
                "                // re-calculate the soil water variables",
                "                calculateWaterThresholds(MonitoredDepth);",
                "                MonitoredLayerTrigger = MonitoredLayerLL + MonitoredLayerPAWC*TriggerFraction;",
                "                MonitoredLayerTarget = MonitoredLayerLL + MonitoredLayerPAWC*RefillFraction;",
                "            }",
                "",
                "            calculateSoilWater(MonitoredDepth);",
                "",
                "            // check water status and management conditions, if we can irrigate at all",
                "            if (IrrigationIsEnabled)",
                "            {",
                "                DaysSinceLastApplication += 1;",
                "",
                "                // are we within the irrigation season?",
                "                SeasonIsOpen = false;",
                "                if (DateUtilities.WithinDates(SeasonStartDate, clock.Today, SeasonEndDate))",
                "                {",
                "                    SeasonIsOpen = true;",
                "                }",
                "",
                "                // is there a crop in the ground that needs irrigation?",
                "                CropIsActive = true;",
                "                if (OnlyApplyOntoCrop)",
                "                {",
                "                    CropIsActive = false;",
                "                    if (SCRUM.IsAlive)",
                "                    {",
                "                        CropIsActive = true;",
                "                    }",
                "                }",
                "",
                "                // is the irrigator available?",
                "                IrrigatorIsAvailable = false;",
                "                if (DaysSinceLastApplication >= ReturnDays)",
                "                {",
                "                    IrrigatorIsAvailable = true;",
                "                }",
                "",
                "                // is the soil dry enough to require irrigation?",
                "                SoilIsDry = false;",
                "                if (MonitoredLayerSW <= MonitoredLayerTrigger)",
                "                {",
                "                    SoilIsDry = true;",
                "                }",
                "",
                "                // is there water available, within allocation?",
                "                WaterIsAvailable = false;",
                "                if (SeasonAppliedAmount < SeasonsAllocation)",
                "                {",
                "                    WaterIsAvailable = true;",
                "                }",
                "",
                "                //Lets bloody well irrigate then!!!!",
                "                if (SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry && WaterIsAvailable)",
                "                {",
                "                    AmountToApply = MonitoredLayerTarget - MonitoredLayerSW;",
                "                    AmountToApply = Math.Min(AmountToApply, MaximumIrrigationAmount);",
                "                    AmountToApply = Math.Min(AmountToApply, SeasonsAllocation - SeasonAppliedAmount);",
                "                    AmountToApply = Math.Max(AmountToApply, 0.0);",
                "                    Irrigation.Apply(amount: AmountToApply, depth: 0.0);",
                "                    DaysSinceLastApplication = 0;",
                "                    SeasonAppliedAmount += AmountToApply;",
                "                    summary.WriteMessage(this, \"Automatic irrigation  applied, \" + AmountToApply.ToString(\"#0.0\") + \" mm\", MessageType.Diagnostic);",
                "                }",
                "            }",
                "        }",
                "",
                "        // computes the water thresholds in the soil down to a given depth",
                "        private void calculateWaterThresholds(double depthToCalculate)",
                "        {",
                "            MonitoredLayerLL = 0.0;",
                "            MonitoredLayerDUL = 0.0;",
                "            double accumulatedDepth = 0.0;",
                "            lastLayerFraction = 0.0;",
                "            lastLayer = 0;",
                "            for (int layer = 0; accumulatedDepth <= depthToCalculate; layer++)",
                "            {",
                "                double layerFraction = (depthToCalculate - accumulatedDepth)/soilPhysical.Thickness[layer];",
                "                layerFraction = Math.Min(1.0, Math.Max(0.0, layerFraction));",
                "                MonitoredLayerLL += soilPhysical.LL15mm[layer]*layerFraction;",
                "                MonitoredLayerDUL += soilPhysical.DULmm[layer]*layerFraction;",
                "                accumulatedDepth += soilPhysical.Thickness[layer];",
                "                if (accumulatedDepth >= depthToCalculate)",
                "                {",
                "                    lastLayerFraction = layerFraction;",
                "                    lastLayer = layer;",
                "                }",
                "            }",
                "",
                "            MonitoredLayerPAWC = MonitoredLayerDUL - MonitoredLayerLL;",
                "        }",
                "",
                "        // computes the amount of water in the soil down to a given depth",
                "        private void calculateSoilWater(double depthToCalculate)",
                "        {",
                "            MonitoredLayerSW = 0.0;",
                "            double accumulatedDepth = 0.0;",
                "            for (int layer = 0; accumulatedDepth <= depthToCalculate; layer++)",
                "            {",
                "                if (layer < lastLayer)",
                "                {",
                "                    MonitoredLayerSW += waterBalance.SWmm[layer];",
                "                }",
                "                else",
                "                {",
                "                    MonitoredLayerSW += waterBalance.SWmm[layer]*lastLayerFraction;",
                "                }",
                "",
                "                accumulatedDepth += soilPhysical.Thickness[layer];",
                "            }",
                "",
                "            MonitoredLayerPAW = Math.Max(0.0, MonitoredLayerSW - MonitoredLayerLL);",
                "        }",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "IrrigationIsEnabled",
                  "Value": "True"
                },
                {
                  "Key": "SeasonStartDate",
                  "Value": "1-Sep"
                },
                {
                  "Key": "SeasonEndDate",
                  "Value": "30-Apr"
                },
                {
                  "Key": "OnlyApplyOntoCrop",
                  "Value": "True"
                },
                {
                  "Key": "SeasonsAllocation",
                  "Value": "1000"
                },
                {
                  "Key": "TriggerFraction",
                  "Value": "0.8"
                },
                {
                  "Key": "RefillFraction",
                  "Value": "0.95"
                },
                {
                  "Key": "MaximumIrrigationAmount",
                  "Value": "40"
                },
                {
                  "Key": "ReturnDays",
                  "Value": "3"
                },
                {
                  "Key": "DepthToMonitor",
                  "Value": "600"
                },
                {
                  "Key": "LimitMonitoringDepth",
                  "Value": "True"
                }
              ],
              "Name": "AutomaticIrrigation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "// This script can be used to apply N fertiliser automatically, based soil mineral N status",
                "// Blame to RCichota, last updated in 18/Mar/2025",
                "",
                "using System;",
                "using System.Xml.Serialization;",
                "using Newtonsoft.Json;",
                "using APSIM.Shared.Utilities;",
                "using Models.Core;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.Interfaces;",
                "using Models.Soils.Nutrients;",
                "",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    [System.Xml.Serialization.XmlInclude(typeof(Model))]",
                "    public class Script : Model",
                "    {",
                "        //Communication to other modules",
                "        [Link] private Clock clock;",
                "        [Link] private ISummary summary;",
                "        [Link] private IPhysical soilPhysical;",
                "        [Link] private INutrient soilNutrient;",
                "        [Link] private Fertiliser Fertiliser;",
                "        [Link] private Plant SCRUM;",
                "",
                "        //User inputs from properties tab",
                "        [Separator(\"Generic N fertiliser management\")]",
                "        [Description(\" Enable automatic fertiliser management?                           \")]",
                "        public bool FertiliserIsEnabled {get; set;}",
                "",
                "        [Description(\" Date to start the fertiliser season (dd-mmm):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public string SeasonStartDate {get; set;}",
                "",
                "        [Description(\" Date to end the fertiliser season (dd-mmm):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public string SeasonEndDate {get; set;}",
                "",
                "        [Description(\" Only fertilise if there is a crop on the field?\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public bool OnlyApplyOntoCrop {get; set;}",
                "",
                "        [Description(\" Season allocation (kg N/ha):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double SeasonsAllocation {get; set;}",
                "",
                "        [Description(\" Minimum soil mineral N, trigger an application (kg N/ha):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double TriggerSoilN {get; set;}",
                "",
                "        [Description(\" Fertiliser N amount per application (kg N/ha):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double AmountToApply {get; set;}",
                "",
                "        [Description(\" Type of fertiliser to apply:\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\", Type = DisplayType.FertiliserType)]",
                "        public string FertiliserType { get; set; }",
                "",
                "        [Description(\" Minimum number of days between applications:\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double ReturnDays {get; set;}",
                "",
                "        [Description(\" Depth to calculate soil mineral N (mm):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double DepthToMonitor {get; set;}",
                "",
                "        [Description(\" Limit the depth to the rooting depth?\")]",
                "        [Display(VisibleCallback = \"FertOnAndOnlyOnCrops\")]",
                "        public bool LimitMonitoringDepth {get; set;}",
                "",
                "        //Class members",
                "        [JsonIgnore] public bool SeasonIsOpen {get; set;}",
                "        [JsonIgnore] private bool CropIsActive {get; set;}",
                "        [JsonIgnore] private bool SpreaderIsAvailable {get; set;}",
                "        [JsonIgnore] private bool SoilNitrogenIsLow {get; set;}",
                "        [JsonIgnore] private bool FertiliserIsAvailable {get; set;}",
                "",
                "        [JsonIgnore] public double MonitoredLayerSoilN {get; set;}",
                "        [JsonIgnore] public double MonitoredDepth {get; set;}",
                "",
                "        [JsonIgnore] public double SeasonAppliedAmount {get; set;}",
                "        [JsonIgnore] public double DaysSinceLastApplication {get; set;}",
                "",
                "        //Internal Variables",
                "        private bool FertOnAndOnlyOnCrops",
                "        { get {return FertiliserIsEnabled && OnlyApplyOntoCrop; }}",
                "",
                "",
                "        [EventSubscribe(\"StartOfSimulation\")]",
                "        private void OnStartOfSimulation(object sender, EventArgs e)",
                "        {",
                "            // initialise some variables",
                "            DaysSinceLastApplication = ReturnDays;",
                "            if (!OnlyApplyOntoCrop)",
                "            {",
                "                LimitMonitoringDepth = false;",
                "            }",
                "",
                "            MonitoredDepth = DepthToMonitor;",
                "        }",
                "",
                "        [EventSubscribe(\"StartOfDay\")]",
                "        private void OnStartOfDay(object sender, EventArgs e)",
                "        {",
                "            // check whether we are starting a new season, zero amount",
                "            if (DateUtilities.DatesAreEqual(SeasonStartDate, clock.Today))",
                "            {",
                "                SeasonAppliedAmount = 0.0;",
                "            }",
                "        }",
                "",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "            // get the current amount of nitrogen in the soil",
                "            if (LimitMonitoringDepth)",
                "            { // get the current rooting depth, no less than 50mm, no more than DepthToMonitor",
                "                MonitoredDepth = DepthToMonitor;",
                "                if (SCRUM.IsAlive)",
                "                {",
                "                    MonitoredDepth = Math.Min(DepthToMonitor, Math.Max(50.0, SCRUM.Root.Depth));",
                "                }",
                "            }",
                "",
                "            calculateSoilMineralNitrogen(MonitoredDepth);",
                "",
                "            // check N status and management conditions, if we can fertilise at all",
                "            if (FertiliserIsEnabled)",
                "            {",
                "                DaysSinceLastApplication += 1;",
                "",
                "                // are we within the irrigation season?",
                "                SeasonIsOpen = false;",
                "                if (DateUtilities.WithinDates(SeasonStartDate, clock.Today, SeasonEndDate))",
                "                {",
                "                    SeasonIsOpen = true;",
                "                }",
                "",
                "                // is there a crop in the ground that needs fertiliser?",
                "                CropIsActive = true;",
                "                if (OnlyApplyOntoCrop)",
                "                {",
                "                    CropIsActive = false;",
                "                    if (SCRUM.IsAlive)",
                "                    {",
                "                        CropIsActive = true;",
                "                    }",
                "                }",
                "",
                "                // is the spreader available?",
                "                SpreaderIsAvailable = false;",
                "                if (DaysSinceLastApplication >= ReturnDays)",
                "                {",
                "                    SpreaderIsAvailable = true;",
                "                }",
                "",
                "                // is the soil N low enough to require fertiliser?",
                "                SoilNitrogenIsLow = false;",
                "                if (MonitoredLayerSoilN <= TriggerSoilN)",
                "                {",
                "                    SoilNitrogenIsLow = true;",
                "                }",
                "",
                "                // is there N fertiliser available, within allocation?",
                "                FertiliserIsAvailable = false;",
                "                if (SeasonAppliedAmount < SeasonsAllocation)",
                "                {",
                "                    FertiliserIsAvailable = true;",
                "                }",
                "",
                "                //Lets bloody well fertilise then!!!!",
                "                if (SeasonIsOpen && CropIsActive && SpreaderIsAvailable && SoilNitrogenIsLow && FertiliserIsAvailable)",
                "                {",
                "                    AmountToApply = Math.Min(AmountToApply, SeasonsAllocation - SeasonAppliedAmount);",
                "                    AmountToApply = Math.Max(AmountToApply, 0.0);",
                "                    Fertiliser.Apply(amount: AmountToApply, type: FertiliserType, depth: 10.0);",
                "                    DaysSinceLastApplication = 0;",
                "                    SeasonAppliedAmount += AmountToApply;",
                "                    summary.WriteMessage(this, \"Automatic N fertiliser applied, \" + AmountToApply.ToString(\"#0.0\") + \" kgN/ha\", MessageType.Diagnostic);",
                "                }",
                "            }",
                "        }",
                "",
                "        // computes the amount of mineral N in the soil down to a given depth",
                "        private void calculateSoilMineralNitrogen(double depthToCalculate)",
                "        {",
                "            MonitoredLayerSoilN = 0.0;",
                "            double accumulatedDepth = 0.0;",
                "            for (int layer = 0; accumulatedDepth <= depthToCalculate; layer++)",
                "            {",
                "                double layerFraction = (depthToCalculate - accumulatedDepth)/soilPhysical.Thickness[layer];",
                "                layerFraction = Math.Min(1.0, Math.Max(0.0, layerFraction));",
                "                MonitoredLayerSoilN += (soilNutrient.MineralN[layer])*layerFraction;",
                "                accumulatedDepth += soilPhysical.Thickness[layer];",
                "            }",
                "        }",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "FertiliserIsEnabled",
                  "Value": "True"
                },
                {
                  "Key": "SeasonStartDate",
                  "Value": "1-Aug"
                },
                {
                  "Key": "SeasonEndDate",
                  "Value": "30-Apr"
                },
                {
                  "Key": "OnlyApplyOntoCrop",
                  "Value": "False"
                },
                {
                  "Key": "SeasonsAllocation",
                  "Value": "1000"
                },
                {
                  "Key": "TriggerSoilN",
                  "Value": "50"
                },
                {
                  "Key": "AmountToApply",
                  "Value": "25"
                },
                {
                  "Key": "FertiliserType",
                  "Value": "UreaN"
                },
                {
                  "Key": "ReturnDays",
                  "Value": "3"
                },
                {
                  "Key": "DepthToMonitor",
                  "Value": "300"
                },
                {
                  "Key": "LimitMonitoringDepth",
                  "Value": "False"
                }
              ],
              "Name": "AutomaticFertiliser",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Report, Models",
              "VariableNames": [
                "[Clock].Today",
                "[SCRUM].SowingData.Cultivar",
                "",
                "// SCRUM Biomass",
                "[SCRUM].Total.Wt",
                "[SCRUM].Total.N",
                "[SCRUM].TotalDMAtHarvest",
                "[SCRUM].Product.Live.Wt",
                "[SCRUM].Product.Live.N",
                "[SCRUM].Product.Live.NConc",
                "[SCRUM].Product.DMAtHarvest",
                "[SCRUM].Product.ExpectedYield",
                "[SCRUM].Product.DryMatterContent",
                "[SCRUM].Product.Yield ",
                "[SCRUM].Stover.Live.Wt",
                "[SCRUM].Stover.Live.N",
                "[SCRUM].Stover.Live.NConc",
                "[SCRUM].Stover.DMAtHarvest",
                "[SCRUM].Stover.Height",
                "[SCRUM].Stover.LAI",
                "[SCRUM].Stover.LAIDead",
                "[SCRUM].Stover.LAITotal",
                "[SCRUM].Stover.CoverDead",
                "[SCRUM].Stover.CoverGreen",
                "[SCRUM].Stover.CoverTotal",
                "[SCRUM].Root.Live.Wt",
                "[SCRUM].Root.Live.N",
                "[SCRUM].Root.Live.NConc",
                "[SCRUM].Root.DMatHarvest",
                "[SCRUM].Root.Depth",
                "",
                "// SCRUM Phenology",
                "[SCRUM].Phenology.AccumulatedEmergedTt",
                "[SCRUM].Phenology.AccumulatedTt",
                "[SCRUM].Phenology.CurrentPhaseName",
                "[SCRUM].Phenology.CurrentStageName",
                "[SCRUM].Phenology.Stage",
                "[SCRUM].Phenology.ThermalTime",
                "",
                "// SCRUM Allocation",
                "[SCRUM].Product.DMDemands.Structural.DMDemandFunction.PartitionFraction",
                "[SCRUM].Stover.DMDemands.Structural.DMDemandFunction.PartitionFraction",
                "[SCRUM].Root.DMDemands.Structural.DMDemandFunction.PartitionFraction",
                "[SCRUM].Arbitrator.DM.TotalPlantDemand",
                "[SCRUM].Arbitrator.DM.TotalFixationSupply",
                "[SCRUM].Arbitrator.N.TotalPlantDemand",
                "[SCRUM].Arbitrator.N.TotalPlantSupply",
                "[SCRUM].Arbitrator.N.TotalPlantSupply",
                "[SCRUM].Product.Allocated.Wt",
                "[SCRUM].Stover.Allocated.Wt",
                "[SCRUM].Root.Allocated.Wt",
                "",
                "// SCRUM limiting factors",
                "[SCRUM].Arbitrator.DM.NutrientLimitation",
                "[SCRUM].Arbitrator.DM.SinkLimitation",
                "[SCRUM].Arbitrator.FN",
                "[SCRUM].Stover.Fn",
                "[SCRUM].Stover.Fw",
                "",
                "// Water balance",
                "sum([Soil].SoilWater.SWmm) as SoilTotalWater",
                "[Soil].SoilWater.Drainage",
                "[Soil].SoilWater.Es",
                "[Soil].SoilWater.Runoff",
                "[Irrigation].IrrigationApplied",
                "[SCRUM].Stover.WaterDemand",
                "[SCRUM].Stover.Transpiration",
                "[SCRUM].Root.WaterUptake",
                "",
                "[AutomaticIrrigation].Script.AmountToApply",
                "[AutomaticIrrigation].Script.MonitoredLayerLL",
                "[AutomaticIrrigation].Script.MonitoredLayerDUL",
                "[AutomaticIrrigation].Script.MonitoredLayerSW",
                "[AutomaticIrrigation].Script.MonitoredLayerTarget",
                "[AutomaticIrrigation].Script.MonitoredLayerTrigger",
                "",
                "// Nitrogen balance",
                "sum([Soil].Nutrient.MineralN) as TotalSoilNitrogen",
                "[Fertiliser].NitrogenApplied",
                "[Soil].SoilWater.LeachNO3",
                "[Soil].Nutrient.DenitrifiedN",
                "[SCRUM].Root.NUptake",
                "",
                "[AutomaticFertiliser].Script.MonitoredLayerSoilN",
                "[AutomaticFertiliser].Script.AmountToApply"
              ],
              "EventNames": [
                "[Clock].DoReport"
              ],
              "GroupByVariableName": null,
              "Name": "Report",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.SimplePlantModels.ScrumCropInstance, Models",
              "HarvestIndex": 0.45,
              "MoistureContent": 0.14,
              "RootProportion": 0.1,
              "MaxRootDepth": 1005.0,
              "MaxHeight": 700.0,
              "MaxCover": 0.9,
              "ExtinctionCoefficient": 0.55,
              "rCover": 1.0,
              "TypicalHarvestStage": "Ripe",
              "SeedlingNConc": 0.05,
              "ProductHarvestNConc": 0.015,
              "StoverHarvestNConc": 0.01,
              "RootNConc": 0.01,
              "LegumeFactor": 1.0,
              "BaseTemperature": 0.0,
              "OptimumTemperature": 30.0,
              "MaxTemperature": 40.0,
              "Tt_SowToEmergence": 200.0,
              "GSMax": 0.008,
              "R50": 150.0,
              "ConsiderWaterStress": true,
              "EstablishDate": "0001-01-01T00:00:00",
              "EstablishStage": null,
              "PlantingDepth": 0.0,
              "ExpectedYield": 0.0,
              "HarvestDate": "0001-01-01T00:00:00",
              "Tt_EstablishmentToHarvest": 0.0,
              "HarvestStage": null,
              "FieldLoss": 0.0,
              "ResidueRemoval": 0.0,
              "ResidueIncorporation": 0.0,
              "ResidueIncorporationDepth": 0.0,
              "Factor_XoBiomass": 0.5,
              "Factor_bBiomass": 0.2,
              "Factor_XoCover": 0.4,
              "Factor_bCover": 0.2,
              "Factor_XoHeight": 0.7,
              "Factor_bHeight": 0.2,
              "Tt_EmergenceToMaturity": 0.0,
              "Name": "ScrumLegume",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.SimplePlantModels.ScrumCropInstance, Models",
              "HarvestIndex": 0.45,
              "MoistureContent": 0.14,
              "RootProportion": 0.1,
              "MaxRootDepth": 1005.0,
              "MaxHeight": 700.0,
              "MaxCover": 0.97,
              "ExtinctionCoefficient": 0.55,
              "rCover": 1.0,
              "TypicalHarvestStage": "Ripe",
              "SeedlingNConc": 0.05,
              "ProductHarvestNConc": 0.015,
              "StoverHarvestNConc": 0.01,
              "RootNConc": 0.01,
              "LegumeFactor": 0.0,
              "BaseTemperature": 0.0,
              "OptimumTemperature": 30.0,
              "MaxTemperature": 40.0,
              "Tt_SowToEmergence": 100.0,
              "GSMax": 0.008,
              "R50": 150.0,
              "ConsiderWaterStress": true,
              "EstablishDate": "0001-01-01T00:00:00",
              "EstablishStage": null,
              "PlantingDepth": 0.0,
              "ExpectedYield": 0.0,
              "HarvestDate": "0001-01-01T00:00:00",
              "Tt_EstablishmentToHarvest": 0.0,
              "HarvestStage": null,
              "FieldLoss": 0.0,
              "ResidueRemoval": 0.0,
              "ResidueIncorporation": 0.0,
              "ResidueIncorporationDepth": 0.0,
              "Factor_XoBiomass": 0.5,
              "Factor_bBiomass": 0.2,
              "Factor_XoCover": 0.4,
              "Factor_bCover": 0.2,
              "Factor_XoHeight": 0.7,
              "Factor_bHeight": 0.2,
              "Tt_EmergenceToMaturity": 0.0,
              "Name": "ScrumCereal",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Crop Biomass (g/m2)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Plant Biomass components",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Live.Wt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Stover",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -8388608,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.Live.Wt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32768,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Product.Live.Wt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Product",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Total.Wt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Total",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32704,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 1,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.DMAtHarvest",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "ParamDryYield",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 2,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.TotalBiomassAtStartReproductive",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "ParamTotalBiomStartReproductive",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 3,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.TotalBiomassAtStartSenescence",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "ParamTotalBiomStartSen",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 1,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.TotalDMAtMaturity",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "ParamTotalDMAtMaturity",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65536,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "SCRUM.Phenology.AccumulatedEmergedTt",
              "YFieldName": "SCRUM.Arbitrator.DM.TotalFixationSupply",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": true,
              "CumulativeX": false,
              "Filter": null,
              "Name": "DM Fixation Supply",
              "ResourceName": null,
              "Children": [],
              "Enabled": false,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Crop Nitrogen (g/m2)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Plant Nitrogen components",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Live.N",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Stover",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -8388608,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.Live.N",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32704,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Product.Live.N",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Product",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Total.N",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Total",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Crop Nitrogen (g/m2)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Plant Nitrogen conc",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Live.NConc",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Stover",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -8388608,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.Live.NConc",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32704,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Product.Live.NConc",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Product",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Water (mm)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Length (mm)",
              "Position": 2,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Water supply and demand",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777088,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.WaterSupply",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Supply",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -8372224,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.WaterUptake",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Uptake",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65536,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.WaterDemand",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Demand",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Transpiration",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Transpiration",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65281,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "Soil.SoilWater.Eo",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Potential",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -32768,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.Depth",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root Depth",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -16711936,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Height",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Canopy Height",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Cover ",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 2,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 5,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Crop structure",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.Depth",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root Depth",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65536,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.CoverTotal",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "CoverTotal",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -1663232,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.CoverDead",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "CoverDead",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.CoverGreen",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "CoverGreen",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -3376729,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Height",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Height",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Nitrogen (g/m2)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "N supply and demand",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16776961,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.N.TotalPlantDemand",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "N demand",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65536,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.N.TotalPlantSupply",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "N supply",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "DM (g/m2/d)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "DM supply and demand",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16776961,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.DM.TotalFixationSupply",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Fixation supply",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.DM.TotalPlantDemand",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Total demand",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32704,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.DM.SinkLimitation",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Sink limation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65408,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.DM.NutrientLimitation",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Nutrient limitation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Water (mm)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Irrigation",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16776961,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "AutomaticIrrigation.Script.MonitoredLayerTarget",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Refill target",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "AutomaticIrrigation.Script.MonitoredLayerTrigger",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Trigger deficit",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -65536,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "AutomaticIrrigation.Script.MonitoredLayerSW",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Top SWmm",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "AutomaticIrrigation.Script.MonitoredLayerDUL",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Top DULmm",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32768,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "Irrigation.IrrigationApplied",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Irrigation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -8388353,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "AutomaticIrrigation.Script.AmountToApply",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Amount to apply",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": 0.0,
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Stress Factors",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16776961,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Fw",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "FW",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Arbitrator.FN",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "FN",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Cover ",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "SCRUM.Phenology.AccumulatedEmergedTt",
              "Position": 2,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 5,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Phenology",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Phenology.Stage",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Stage",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -1663232,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Phenology.AccumulatedEmergedTt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Emerged Tt",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Phenology.AccumulatedTt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Tt",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -3376729,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Height",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Height",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "LAI",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.LAI",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "LAIGreen",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -1663232,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.LAIDead",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "LAIDead",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 2,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.LAITotal",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "LAITotal",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Cover ",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 3,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "AccumTt",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Phenology.AccumulatedTt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "AccumTt",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Core.Simulation, Models",
      "Descriptors": null,
      "Name": "SCRUMRotationComponent",
      "ResourceName": null,
      "Children": [
        {
          "$type": "Models.Memo, Models",
          "Text": "This example specifies a more detailed rotation is simulated using SCRUM.  The necessary components in the Field are:\n* the SCRUM model\n* A set of scrum SCRUMCropInstances to represent each of the crops in the rotation (Potato, Wheat, OatForage, Carrot and TrunipForrage)\n* A SCRUMRotation Model that sets the management for each of the crops in the rotation.  To facilitate the process of setting up a rotation this component uses a grid input with a column for each crop (The header Name must match the SCRUMCropInstance Name) and a row for each of the parameters required to define the managment for each crop.  Note that the grid reads and writes to a .csv file and rotation parameters may be changed through the userinterface view or by editing and saving the .csv file.\n",
          "Name": "Description",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Clock, Models",
          "Start": null,
          "End": "1969-09-21T00:00:00",
          "Name": "Clock",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Climate.Weather, Models",
          "ConstantsFile": null,
          "FileName": "%root%/Tests/WeatherFiles/lincoln.met",
          "ExcelWorkSheetName": null,
          "Name": "Weather",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Summary, Models",
          "Verbosity": 100,
          "Name": "Summary",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
          "Name": "Soil Arbitrator",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Manager, Models",
          "CodeArray": [
            "using Models.Soils;",
            "using System.Data;",
            "using System.IO;",
            "using APSIM.Shared.Utilities;",
            "using System.Xml.Serialization;",
            "using Models;",
            "using Models.PMF;",
            "using System.Text;",
            "using System.Collections.Generic;",
            "using Models.Core;",
            "using System;",
            "using Newtonsoft.Json;",
            "      ",
            "",
            "namespace Models",
            "{",
            "    [Serializable] ",
            "    public class Script : Model",
            "    {",
            "        [JsonIgnore] public string Rotation { get; set; }",
            "        [JsonIgnore] public string Irrigation { get; set; }",
            "        [JsonIgnore] public string Nitrogen { get; set; }",
            "        ",
            "        [JsonIgnore] public string TreatmentName { get; set; }",
            "        ",
            "        [EventSubscribe(\"StartOfSimulation\")]",
            "        private void OnStartOfSimulation(object sender, EventArgs e)",
            "        {",
            "            TreatmentName = Rotation + \"_\" + Irrigation + \"_\" + Nitrogen;",
            "        }",
            "    }",
            "}",
            "       "
          ],
          "Parameters": [],
          "Name": "TreatmentID",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Zone, Models",
          "Area": 1.0,
          "Slope": 0.0,
          "AspectAngle": 0.0,
          "Altitude": 50.0,
          "Name": "Field",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Soils.Soil, Models",
              "RecordNumber": 0,
              "ASCOrder": null,
              "ASCSubOrder": null,
              "SoilType": null,
              "LocalName": null,
              "Site": "-",
              "NearestTown": "-",
              "Region": "Plains",
              "State": "Canterbury",
              "Country": "New Zealand",
              "NaturalVegetation": null,
              "ApsoilNumber": null,
              "Latitude": 0.0,
              "Longitude": 0.0,
              "LocationAccuracy": null,
              "YearOfSampling": null,
              "DataSource": "Generic profile descriptions provided by Trevor Webb and data for functional horizions based on SWAMP project results",
              "Comments": "Bulk density values were measured on the fine earth fraction so values entered into apsim soil are adjusted down to account for stone content (assuming stones are inert from all soil process so their mass and volume is removed from model paramaters).  SAT, DUL, LL15 and Air dry have been adjusted down to account for stone content.  OC has not been adjusted so the model will get the correct carbon and N amounts using the adjusted BD.",
              "Name": "Soil",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Soils.Chemical, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    200.0,
                    100.0,
                    300.0,
                    200.0,
                    100.0,
                    300.0
                  ],
                  "PH": [
                    6.0,
                    6.0,
                    6.0,
                    6.0,
                    6.0,
                    6.0,
                    6.0,
                    6.0
                  ],
                  "PHUnits": 0,
                  "EC": null,
                  "ESP": null,
                  "CEC": [
                    14.36825,
                    14.609,
                    11.6165,
                    9.206750000000001,
                    8.89175,
                    8.89175,
                    8.89175,
                    8.89175
                  ],
                  "ECMetadata": null,
                  "CLMetadata": null,
                  "CECMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "ESPMetadata": null,
                  "PHMetadata": null,
                  "Name": "Chemical",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Physical, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    200.0,
                    100.0,
                    200.0,
                    100.0,
                    300.0
                  ],
                  "ParticleSizeSand": [
                    5.0,
                    5.0,
                    5.0,
                    5.0,
                    5.0,
                    5.0,
                    5.0,
                    5.0
                  ],
                  "ParticleSizeSilt": [
                    65.0,
                    65.0,
                    65.0,
                    65.0,
                    65.0,
                    65.0,
                    65.0,
                    65.0
                  ],
                  "ParticleSizeClay": [
                    30.0,
                    30.0,
                    30.0,
                    30.0,
                    30.0,
                    30.0,
                    30.0,
                    30.0
                  ],
                  "Rocks": [
                    0.2764092538286087,
                    0.3178559791463017,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.141630021423373
                  ],
                  "Texture": null,
                  "BD": [
                    1.0,
                    1.0,
                    1.59,
                    1.57,
                    1.57,
                    1.6,
                    1.6,
                    1.601
                  ],
                  "AirDry": [
                    0.05,
                    0.05,
                    0.157,
                    0.173,
                    0.173,
                    0.165,
                    0.165,
                    0.115
                  ],
                  "LL15": [
                    0.1,
                    0.1,
                    0.157,
                    0.173,
                    0.173,
                    0.165,
                    0.165,
                    0.115
                  ],
                  "DUL": [
                    0.27,
                    0.27,
                    0.29,
                    0.3,
                    0.3,
                    0.3,
                    0.3,
                    0.3
                  ],
                  "SAT": [
                    0.419,
                    0.395,
                    0.36,
                    0.366,
                    0.366,
                    0.358,
                    0.358,
                    0.316
                  ],
                  "KS": null,
                  "BDMetadata": null,
                  "AirDryMetadata": null,
                  "LL15Metadata": null,
                  "DULMetadata": null,
                  "SATMetadata": null,
                  "KSMetadata": null,
                  "RocksMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "TextureMetadata": null,
                  "ParticleSizeSandMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "ParticleSizeSiltMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "ParticleSizeClayMetadata": [
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated",
                    "Calculated"
                  ],
                  "Name": "Physical",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.1,
                        0.1,
                        0.157,
                        0.173,
                        0.173,
                        0.165,
                        0.165,
                        0.115
                      ],
                      "KL": [
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1,
                        0.1
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "KLMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "XFMetadata": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "Name": "SCRUMSoil",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.WaterModel.WaterBalance, Models",
                  "SummerDate": "1-oct",
                  "SummerU": 9.0,
                  "SummerCona": 4.4,
                  "WinterDate": "1-Apr",
                  "WinterU": 2.0,
                  "WinterCona": 1.5,
                  "DiffusConst": 88.0,
                  "DiffusSlope": 35.0,
                  "Salb": 0.13,
                  "CN2Bare": 73.0,
                  "CNRed": 20.0,
                  "CNCov": 0.8,
                  "DischargeWidth": "NaN",
                  "CatchmentArea": "NaN",
                  "PSIDul": -100.0,
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    200.0,
                    100.0,
                    200.0,
                    100.0,
                    300.0
                  ],
                  "SWCON": [
                    0.9,
                    0.6,
                    0.4,
                    0.4,
                    0.4,
                    0.9,
                    0.9,
                    0.9
                  ],
                  "KLAT": null,
                  "Name": "SoilWater",
                  "ResourceName": "WaterBalance",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Nutrients.Nutrient, Models",
                  "Name": "Nutrient",
                  "ResourceName": "Nutrient",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Organic, Models",
                  "FOMCNRatio": 31.5,
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    200.0,
                    100.0,
                    200.0,
                    100.0,
                    300.0
                  ],
                  "Carbon": [
                    2.677,
                    2.784,
                    1.454,
                    0.383,
                    0.243,
                    0.243,
                    0.243,
                    0.243
                  ],
                  "CarbonUnits": 0,
                  "SoilCNRatio": [
                    11.0,
                    11.0,
                    11.0,
                    11.0,
                    11.0,
                    11.0,
                    11.0,
                    11.0
                  ],
                  "FBiom": [
                    0.025,
                    0.025,
                    0.015,
                    0.01,
                    0.01,
                    0.01,
                    0.01,
                    0.01
                  ],
                  "FInert": [
                    0.45,
                    0.6,
                    0.75,
                    0.9,
                    0.96,
                    0.96,
                    0.96,
                    0.96
                  ],
                  "FOM": [
                    536.9336095200046,
                    359.91736185153144,
                    197.52683621638468,
                    132.40619794584117,
                    108.4050261563909,
                    72.66606212364664,
                    59.493939765704596,
                    32.65096642049581
                  ],
                  "CarbonMetadata": null,
                  "FOMMetadata": null,
                  "Name": "Organic",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Water, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    200.0,
                    100.0,
                    200.0,
                    100.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.27,
                    0.27,
                    0.29,
                    0.3,
                    0.3,
                    0.3,
                    0.3,
                    0.22499999999999995
                  ],
                  "InitialPAWmm": 202.5,
                  "RelativeTo": "LL15",
                  "FilledFromTop": true,
                  "Name": "Water",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    200.0,
                    100.0,
                    300.0,
                    200.0,
                    100.0,
                    300.0
                  ],
                  "InitialValues": [
                    35.0,
                    15.0,
                    6.079664570230607,
                    6.079664570230616,
                    0.8492569002123127,
                    0.3125,
                    0.625,
                    0.20820320632937486
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "ConcInSolution": null,
                  "Name": "NO3",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    200.0,
                    100.0,
                    300.0,
                    200.0,
                    100.0,
                    300.0
                  ],
                  "InitialValues": [
                    6.18,
                    3.09,
                    0.6729559748427676,
                    0.6729559748427664,
                    0.5520169851380039,
                    0.28125,
                    0.0625,
                    0.02082032063293809
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "ConcInSolution": null,
                  "Name": "NH4",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    200.0,
                    100.0,
                    300.0,
                    200.0,
                    100.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 1,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "ConcInSolution": null,
                  "Name": "Urea",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.SoilTemp.SoilTemperature, Models",
                  "Thickness": null,
                  "InitialValues": null,
                  "Name": "Temperature",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Surface.SurfaceOrganicMatter, Models",
              "SurfOM": [],
              "Canopies": [],
              "InitialResidueName": "grass",
              "InitialResidueType": "grass",
              "InitialResidueMass": 2500.0,
              "InitialStandingFraction": 0.0,
              "InitialCPR": 0.0,
              "InitialCNR": 15.0,
              "Name": "SurfaceOrganicMatter",
              "ResourceName": "SurfaceOrganicMatter",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.MicroClimate, Models",
              "a_interception": 0.0,
              "b_interception": 1.0,
              "c_interception": 0.0,
              "d_interception": 0.0,
              "SoilHeatFluxFraction": 0.4,
              "MinimumHeightDiffForNewLayer": 0.0,
              "NightInterceptionFraction": 0.5,
              "ReferenceHeight": 2.0,
              "Name": "MicroClimate",
              "ResourceName": "MicroClimate",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Irrigation, Models",
              "Name": "Irrigation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Fertiliser, Models",
              "Name": "Fertiliser",
              "ResourceName": "Fertiliser",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "Name": "SCRUM",
              "ResourceName": "SCRUM",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.SimplePlantModels.ScrumCropInstance, Models",
              "HarvestIndex": 0.9,
              "MoistureContent": 0.78,
              "RootProportion": 0.1,
              "MaxRootDepth": 600.0,
              "MaxHeight": 100.0,
              "MaxCover": 0.95,
              "ExtinctionCoefficient": 0.55,
              "rCover": 1.0,
              "TypicalHarvestStage": "LateReproductive",
              "SeedlingNConc": 0.04,
              "ProductHarvestNConc": 0.012,
              "StoverHarvestNConc": 0.009,
              "RootNConc": 0.01,
              "LegumeFactor": 0.0,
              "BaseTemperature": 5.0,
              "OptimumTemperature": 30.0,
              "MaxTemperature": 40.0,
              "Tt_SowToEmergence": 300.0,
              "GSMax": 0.008,
              "R50": 150.0,
              "ConsiderWaterStress": true,
              "EstablishDate": "0001-01-01T00:00:00",
              "EstablishStage": null,
              "PlantingDepth": 0.0,
              "ExpectedYield": 0.0,
              "HarvestDate": null,
              "Tt_EstablishmentToHarvest": 0.0,
              "HarvestStage": null,
              "FieldLoss": 0.0,
              "ResidueRemoval": 0.0,
              "ResidueIncorporation": 0.0,
              "ResidueIncorporationDepth": 0.0,
              "Factor_XoBiomass": 0.5,
              "Factor_bBiomass": 0.2,
              "Factor_XoCover": 0.4,
              "Factor_bCover": 0.2,
              "Factor_XoHeight": 0.7,
              "Factor_bHeight": 0.2,
              "Tt_EmergenceToMaturity": 0.0,
              "Name": "Potato",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.SimplePlantModels.ScrumCropInstance, Models",
              "HarvestIndex": 0.5,
              "MoistureContent": 0.14,
              "RootProportion": 0.1,
              "MaxRootDepth": 2000.0,
              "MaxHeight": 1800.0,
              "MaxCover": 0.97,
              "ExtinctionCoefficient": 0.55,
              "rCover": 1.0,
              "TypicalHarvestStage": "Ripe",
              "SeedlingNConc": 0.03,
              "ProductHarvestNConc": 0.012,
              "StoverHarvestNConc": 0.009,
              "RootNConc": 0.01,
              "LegumeFactor": 0.0,
              "BaseTemperature": 0.0,
              "OptimumTemperature": 30.0,
              "MaxTemperature": 40.0,
              "Tt_SowToEmergence": 100.0,
              "GSMax": 0.008,
              "R50": 150.0,
              "ConsiderWaterStress": true,
              "EstablishDate": "0001-01-01T00:00:00",
              "EstablishStage": null,
              "PlantingDepth": 0.0,
              "ExpectedYield": 0.0,
              "HarvestDate": null,
              "Tt_EstablishmentToHarvest": 0.0,
              "HarvestStage": null,
              "FieldLoss": 0.0,
              "ResidueRemoval": 0.0,
              "ResidueIncorporation": 0.0,
              "ResidueIncorporationDepth": 0.0,
              "Factor_XoBiomass": 0.5,
              "Factor_bBiomass": 0.2,
              "Factor_XoCover": 0.4,
              "Factor_bCover": 0.2,
              "Factor_XoHeight": 0.7,
              "Factor_bHeight": 0.2,
              "Tt_EmergenceToMaturity": 0.0,
              "Name": "Wheat",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.SimplePlantModels.ScrumCropInstance, Models",
              "HarvestIndex": 0.95,
              "MoistureContent": 0.0,
              "RootProportion": 0.1,
              "MaxRootDepth": 1000.0,
              "MaxHeight": 700.0,
              "MaxCover": 0.97,
              "ExtinctionCoefficient": 0.8,
              "rCover": 1.0,
              "TypicalHarvestStage": "EarlyReproductive",
              "SeedlingNConc": 0.05,
              "ProductHarvestNConc": 0.03,
              "StoverHarvestNConc": 0.02,
              "RootNConc": 0.01,
              "LegumeFactor": 0.0,
              "BaseTemperature": 5.0,
              "OptimumTemperature": 30.0,
              "MaxTemperature": 40.0,
              "Tt_SowToEmergence": 100.0,
              "GSMax": 0.008,
              "R50": 150.0,
              "ConsiderWaterStress": true,
              "EstablishDate": "0001-01-01T00:00:00",
              "EstablishStage": null,
              "PlantingDepth": 0.0,
              "ExpectedYield": 0.0,
              "HarvestDate": null,
              "Tt_EstablishmentToHarvest": 0.0,
              "HarvestStage": null,
              "FieldLoss": 0.0,
              "ResidueRemoval": 0.0,
              "ResidueIncorporation": 0.0,
              "ResidueIncorporationDepth": 0.0,
              "Factor_XoBiomass": 0.5,
              "Factor_bBiomass": 0.2,
              "Factor_XoCover": 0.4,
              "Factor_bCover": 0.2,
              "Factor_XoHeight": 0.7,
              "Factor_bHeight": 0.2,
              "Tt_EmergenceToMaturity": 0.0,
              "Name": "OatForage",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.SimplePlantModels.ScrumCropInstance, Models",
              "HarvestIndex": 0.7,
              "MoistureContent": 0.88,
              "RootProportion": 0.1,
              "MaxRootDepth": 1000.0,
              "MaxHeight": 400.0,
              "MaxCover": 0.9,
              "ExtinctionCoefficient": 0.7,
              "rCover": 1.0,
              "TypicalHarvestStage": "LateReproductive",
              "SeedlingNConc": 0.03,
              "ProductHarvestNConc": 0.012,
              "StoverHarvestNConc": 0.009,
              "RootNConc": 0.01,
              "LegumeFactor": 0.0,
              "BaseTemperature": 3.0,
              "OptimumTemperature": 30.0,
              "MaxTemperature": 40.0,
              "Tt_SowToEmergence": 300.0,
              "GSMax": 0.008,
              "R50": 150.0,
              "ConsiderWaterStress": true,
              "EstablishDate": "0001-01-01T00:00:00",
              "EstablishStage": null,
              "PlantingDepth": 0.0,
              "ExpectedYield": 0.0,
              "HarvestDate": null,
              "Tt_EstablishmentToHarvest": 0.0,
              "HarvestStage": null,
              "FieldLoss": 0.0,
              "ResidueRemoval": 0.0,
              "ResidueIncorporation": 0.0,
              "ResidueIncorporationDepth": 0.0,
              "Factor_XoBiomass": 0.5,
              "Factor_bBiomass": 0.2,
              "Factor_XoCover": 0.4,
              "Factor_bCover": 0.2,
              "Factor_XoHeight": 0.7,
              "Factor_bHeight": 0.2,
              "Tt_EmergenceToMaturity": 0.0,
              "Name": "Carrot",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.SimplePlantModels.ScrumCropInstance, Models",
              "HarvestIndex": 0.8,
              "MoistureContent": 0.0,
              "RootProportion": 0.1,
              "MaxRootDepth": 1000.0,
              "MaxHeight": 400.0,
              "MaxCover": 0.95,
              "ExtinctionCoefficient": 0.85,
              "rCover": 1.0,
              "TypicalHarvestStage": "Vegetative",
              "SeedlingNConc": 0.03,
              "ProductHarvestNConc": 0.012,
              "StoverHarvestNConc": 0.009,
              "RootNConc": 0.01,
              "LegumeFactor": 0.0,
              "BaseTemperature": 3.0,
              "OptimumTemperature": 30.0,
              "MaxTemperature": 40.0,
              "Tt_SowToEmergence": 200.0,
              "GSMax": 0.008,
              "R50": 150.0,
              "ConsiderWaterStress": true,
              "EstablishDate": "0001-01-01T00:00:00",
              "EstablishStage": null,
              "PlantingDepth": 0.0,
              "ExpectedYield": 0.0,
              "HarvestDate": null,
              "Tt_EstablishmentToHarvest": 0.0,
              "HarvestStage": null,
              "FieldLoss": 0.0,
              "ResidueRemoval": 0.0,
              "ResidueIncorporation": 0.0,
              "ResidueIncorporationDepth": 0.0,
              "Factor_XoBiomass": 0.5,
              "Factor_bBiomass": 0.2,
              "Factor_XoCover": 0.4,
              "Factor_bCover": 0.2,
              "Factor_XoHeight": 0.7,
              "Factor_bHeight": 0.2,
              "Tt_EmergenceToMaturity": 0.0,
              "Name": "TurnipForage",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Report, Models",
              "VariableNames": [
                "[Clock].Today",
                "[SCRUM].SowingData.Cultivar",
                "",
                "// SCRUM Biomass",
                "[SCRUM].Total.Wt",
                "[SCRUM].Total.N",
                "[SCRUM].TotalDMAtHarvest",
                "[SCRUM].Product.Live.Wt",
                "[SCRUM].Product.Live.N",
                "[SCRUM].Product.Live.NConc",
                "[SCRUM].Product.DMAtHarvest",
                "[SCRUM].Product.ExpectedYield",
                "[SCRUM].Product.DryMatterContent",
                "[SCRUM].Product.Yield ",
                "[SCRUM].Stover.Live.Wt",
                "[SCRUM].Stover.Live.N",
                "[SCRUM].Stover.Live.NConc",
                "[SCRUM].Stover.DMAtHarvest",
                "[SCRUM].Stover.Height",
                "[SCRUM].Stover.LAI",
                "[SCRUM].Stover.LAIDead",
                "[SCRUM].Stover.LAITotal",
                "[SCRUM].Stover.CoverDead",
                "[SCRUM].Stover.CoverGreen",
                "[SCRUM].Stover.CoverTotal",
                "[SCRUM].Root.Live.Wt",
                "[SCRUM].Root.Live.N",
                "[SCRUM].Root.Live.NConc",
                "[SCRUM].Root.DMatHarvest",
                "[SCRUM].Root.Depth",
                "",
                "// SCRUM Phenology",
                "[SCRUM].Phenology.AccumulatedEmergedTt",
                "[SCRUM].Phenology.AccumulatedTt",
                "[SCRUM].Phenology.CurrentPhaseName",
                "[SCRUM].Phenology.CurrentStageName",
                "[SCRUM].Phenology.Stage",
                "[SCRUM].Phenology.ThermalTime",
                "",
                "// SCRUM Allocation",
                "[SCRUM].Product.DMDemands.Structural.DMDemandFunction.PartitionFraction",
                "[SCRUM].Stover.DMDemands.Structural.DMDemandFunction.PartitionFraction",
                "[SCRUM].Root.DMDemands.Structural.DMDemandFunction.PartitionFraction",
                "[SCRUM].Arbitrator.DM.TotalPlantDemand",
                "[SCRUM].Arbitrator.DM.TotalFixationSupply",
                "[SCRUM].Arbitrator.N.TotalPlantDemand",
                "[SCRUM].Arbitrator.N.TotalPlantSupply",
                "[SCRUM].Arbitrator.N.TotalPlantSupply",
                "[SCRUM].Product.Allocated.Wt",
                "[SCRUM].Stover.Allocated.Wt",
                "[SCRUM].Root.Allocated.Wt",
                "",
                "// SCRUM limiting factors",
                "[SCRUM].Arbitrator.DM.NutrientLimitation",
                "[SCRUM].Arbitrator.DM.SinkLimitation",
                "[SCRUM].Arbitrator.FN",
                "[SCRUM].Stover.Fn",
                "[SCRUM].Stover.Fw",
                "",
                "// Water balance",
                "sum([Soil].SoilWater.SWmm) as SoilTotalWater",
                "[Soil].SoilWater.Drainage",
                "[Soil].SoilWater.Es",
                "[Soil].SoilWater.Runoff",
                "[Irrigation].IrrigationApplied",
                "[SCRUM].Stover.WaterDemand",
                "[SCRUM].Stover.Transpiration",
                "[SCRUM].Root.WaterUptake",
                "",
                "[AutomaticIrrigation].Script.AmountToApply",
                "[AutomaticIrrigation].Script.MonitoredLayerLL",
                "[AutomaticIrrigation].Script.MonitoredLayerDUL",
                "[AutomaticIrrigation].Script.MonitoredLayerSW",
                "[AutomaticIrrigation].Script.MonitoredLayerTarget",
                "[AutomaticIrrigation].Script.MonitoredLayerTrigger",
                "",
                "// Nitrogen balance",
                "sum([Soil].Nutrient.MineralN) as TotalSoilNitrogen",
                "[Fertiliser].NitrogenApplied",
                "[Soil].SoilWater.LeachNO3",
                "[Soil].Nutrient.DenitrifiedN",
                "[SCRUM].Root.NUptake",
                "",
                "[AutomaticFertiliser].Script.MonitoredLayerSoilN",
                "[AutomaticFertiliser].Script.AmountToApply"
              ],
              "EventNames": [
                "[Clock].DoReport"
              ],
              "GroupByVariableName": null,
              "Name": "Report",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.SimplePlantModels.ScrumRotation, Models",
              "CoefficientFile": "Rotation1.csv",
              "Name": "ScrumRotation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "// This script can be used to apply irrigation automatically, based soil water status",
                "// Blame to RCichota, last updated in 18/Mar/2025",
                "",
                "using System;",
                "using System.Xml.Serialization;",
                "using Newtonsoft.Json;",
                "using APSIM.Shared.Utilities;",
                "using Models.Core;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.Interfaces;",
                "using Models.Soils.Nutrients;",
                "",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    [System.Xml.Serialization.XmlInclude(typeof(Model))]",
                "    public class Script : Model",
                "    {",
                "        //Communication to other modules",
                "        [Link] private Clock clock;",
                "        [Link] private ISummary summary;",
                "        [Link] private IPhysical soilPhysical;",
                "        [Link] private ISoilWater waterBalance;",
                "        [Link] private Irrigation Irrigation;",
                "        [Link] private Plant SCRUM;",
                "",
                "        //User inputs from properties tab",
                "        [Separator(\"Generic irrigation management\")]",
                "        [Description(\" Enable automatic irrigation management?              \")]",
                "        public bool IrrigationIsEnabled {get; set;}",
                "",
                "        [Description(\" Date to start the irrigation season (dd-mmm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public string SeasonStartDate {get; set;}",
                "",
                "        [Description(\" Date to end the irrigation season (dd-mmm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public string SeasonEndDate {get; set;}",
                "",
                "        [Description(\" Only irrigate if there is a crop on the field?\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public bool OnlyApplyOntoCrop {get; set;}",
                "",
                "        [Description(\" Season allocation (mm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double SeasonsAllocation {get; set;}",
                "",
                "        [Description(\" Fraction of PAWC to trigger irrigation (0-1):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double TriggerFraction {get; set;}",
                "",
                "        [Description(\" Fraction of PAWC to refill soil to (0-1):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double RefillFraction {get; set;}",
                "",
                "        [Description(\" Maximum irrigation amount per application (mm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double MaximumIrrigationAmount {get; set;}",
                "",
                "        [Description(\" Minimum number of days between irrigations:\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double ReturnDays {get; set;}",
                "",
                "        [Description(\" Depth to calculate PAWC (mm):\")]",
                "        [Display(VisibleCallback = \"IrrigationIsEnabled\")]",
                "        public double DepthToMonitor {get; set;}",
                "",
                "        [Description(\" Limit the depth to the rooting depth?\")]",
                "        [Display(VisibleCallback = \"IrrigOnAndOnlyOnCrops\")]",
                "        public bool LimitMonitoringDepth {get; set;}",
                "",
                "        //Class members",
                "        [JsonIgnore] public bool SeasonIsOpen {get; set;}",
                "        [JsonIgnore] private bool CropIsActive {get; set;}",
                "        [JsonIgnore] private bool IrrigatorIsAvailable {get; set;}",
                "        [JsonIgnore] private bool SoilIsDry {get; set;}",
                "        [JsonIgnore] private bool WaterIsAvailable {get; set;}",
                "",
                "        [JsonIgnore] public double MonitoredLayerTrigger {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerTarget {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerDUL {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerLL {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerSW {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerPAWC {get; set;}",
                "        [JsonIgnore] public double MonitoredLayerPAW {get; set;}",
                "        [JsonIgnore] public double MonitoredDepth {get; set;}",
                "",
                "        [JsonIgnore] public double AmountToApply {get; set;}",
                "        [JsonIgnore] public double SeasonAppliedAmount {get; set;}",
                "        [JsonIgnore] public double DaysSinceLastApplication {get; set;}",
                "",
                "        //Internal Variables",
                "        private bool IrrigOnAndOnlyOnCrops",
                "        { get {return IrrigationIsEnabled && OnlyApplyOntoCrop; }}",
                "        private double lastLayerFraction;",
                "        private int lastLayer;",
                "",
                "",
                "        [EventSubscribe(\"StartOfSimulation\")]",
                "        private void OnStartOfSimulation(object sender, EventArgs e)",
                "        {",
                "            // initialise some variables",
                "            DaysSinceLastApplication = ReturnDays;",
                "            if (!OnlyApplyOntoCrop)",
                "            {",
                "                LimitMonitoringDepth = false;",
                "            }",
                "",
                "            // calculate soil water variables",
                "            calculateWaterThresholds(DepthToMonitor);",
                "            MonitoredLayerTrigger = MonitoredLayerLL + MonitoredLayerPAWC*TriggerFraction;",
                "            MonitoredLayerTarget = MonitoredLayerLL + MonitoredLayerPAWC*RefillFraction;",
                "            MonitoredDepth = DepthToMonitor;",
                "        }",
                "",
                "        [EventSubscribe(\"StartOfDay\")]",
                "        private void OnStartOfDay(object sender, EventArgs e)",
                "        {",
                "            // check whether we are starting a new season, zero amount",
                "            if (DateUtilities.DatesAreEqual(SeasonStartDate, clock.Today))",
                "            {",
                "                SeasonAppliedAmount = 0.0;",
                "            }",
                "        }",
                "",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "            // get the current amount of water in the soil",
                "            if (LimitMonitoringDepth)",
                "            { // get the current rooting depth, no less than 50mm, no more than DepthToMonitor",
                "                MonitoredDepth = DepthToMonitor;",
                "                if (SCRUM.IsAlive)",
                "                {",
                "                    MonitoredDepth = Math.Min(DepthToMonitor, Math.Max(50.0, SCRUM.Root.Depth));",
                "                }",
                "",
                "                // re-calculate the soil water variables",
                "                calculateWaterThresholds(MonitoredDepth);",
                "                MonitoredLayerTrigger = MonitoredLayerLL + MonitoredLayerPAWC*TriggerFraction;",
                "                MonitoredLayerTarget = MonitoredLayerLL + MonitoredLayerPAWC*RefillFraction;",
                "            }",
                "",
                "            calculateSoilWater(MonitoredDepth);",
                "",
                "            // check water status and management conditions, if we can irrigate at all",
                "            if (IrrigationIsEnabled)",
                "            {",
                "                DaysSinceLastApplication += 1;",
                "",
                "                // are we within the irrigation season?",
                "                SeasonIsOpen = false;",
                "                if (DateUtilities.WithinDates(SeasonStartDate, clock.Today, SeasonEndDate))",
                "                {",
                "                    SeasonIsOpen = true;",
                "                }",
                "",
                "                // is there a crop in the ground that needs irrigation?",
                "                CropIsActive = true;",
                "                if (OnlyApplyOntoCrop)",
                "                {",
                "                    CropIsActive = false;",
                "                    if (SCRUM.IsAlive)",
                "                    {",
                "                        CropIsActive = true;",
                "                    }",
                "                }",
                "",
                "                // is the irrigator available?",
                "                IrrigatorIsAvailable = false;",
                "                if (DaysSinceLastApplication >= ReturnDays)",
                "                {",
                "                    IrrigatorIsAvailable = true;",
                "                }",
                "",
                "                // is the soil dry enough to require irrigation?",
                "                SoilIsDry = false;",
                "                if (MonitoredLayerSW <= MonitoredLayerTrigger)",
                "                {",
                "                    SoilIsDry = true;",
                "                }",
                "",
                "                // is there water available, within allocation?",
                "                WaterIsAvailable = false;",
                "                if (SeasonAppliedAmount < SeasonsAllocation)",
                "                {",
                "                    WaterIsAvailable = true;",
                "                }",
                "",
                "                //Lets bloody well irrigate then!!!!",
                "                if (SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry && WaterIsAvailable)",
                "                {",
                "                    AmountToApply = MonitoredLayerTarget - MonitoredLayerSW;",
                "                    AmountToApply = Math.Min(AmountToApply, MaximumIrrigationAmount);",
                "                    AmountToApply = Math.Min(AmountToApply, SeasonsAllocation - SeasonAppliedAmount);",
                "                    AmountToApply = Math.Max(AmountToApply, 0.0);",
                "                    Irrigation.Apply(amount: AmountToApply, depth: 0.0);",
                "                    DaysSinceLastApplication = 0;",
                "                    SeasonAppliedAmount += AmountToApply;",
                "                    summary.WriteMessage(this, \"Automatic irrigation  applied, \" + AmountToApply.ToString(\"#0.0\") + \" mm\", MessageType.Diagnostic);",
                "                }",
                "            }",
                "        }",
                "",
                "        // computes the water thresholds in the soil down to a given depth",
                "        private void calculateWaterThresholds(double depthToCalculate)",
                "        {",
                "            MonitoredLayerLL = 0.0;",
                "            MonitoredLayerDUL = 0.0;",
                "            double accumulatedDepth = 0.0;",
                "            lastLayerFraction = 0.0;",
                "            lastLayer = 0;",
                "            for (int layer = 0; accumulatedDepth <= depthToCalculate; layer++)",
                "            {",
                "                double layerFraction = (depthToCalculate - accumulatedDepth)/soilPhysical.Thickness[layer];",
                "                layerFraction = Math.Min(1.0, Math.Max(0.0, layerFraction));",
                "                MonitoredLayerLL += soilPhysical.LL15mm[layer]*layerFraction;",
                "                MonitoredLayerDUL += soilPhysical.DULmm[layer]*layerFraction;",
                "                accumulatedDepth += soilPhysical.Thickness[layer];",
                "                if (accumulatedDepth >= depthToCalculate)",
                "                {",
                "                    lastLayerFraction = layerFraction;",
                "                    lastLayer = layer;",
                "                }",
                "            }",
                "",
                "            MonitoredLayerPAWC = MonitoredLayerDUL - MonitoredLayerLL;",
                "        }",
                "",
                "        // computes the amount of water in the soil down to a given depth",
                "        private void calculateSoilWater(double depthToCalculate)",
                "        {",
                "            MonitoredLayerSW = 0.0;",
                "            double accumulatedDepth = 0.0;",
                "            for (int layer = 0; accumulatedDepth <= depthToCalculate; layer++)",
                "            {",
                "                if (layer < lastLayer)",
                "                {",
                "                    MonitoredLayerSW += waterBalance.SWmm[layer];",
                "                }",
                "                else",
                "                {",
                "                    MonitoredLayerSW += waterBalance.SWmm[layer]*lastLayerFraction;",
                "                }",
                "",
                "                accumulatedDepth += soilPhysical.Thickness[layer];",
                "            }",
                "",
                "            MonitoredLayerPAW = Math.Max(0.0, MonitoredLayerSW - MonitoredLayerLL);",
                "        }",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "IrrigationIsEnabled",
                  "Value": "True"
                },
                {
                  "Key": "SeasonStartDate",
                  "Value": "1-Sep"
                },
                {
                  "Key": "SeasonEndDate",
                  "Value": "30-Apr"
                },
                {
                  "Key": "OnlyApplyOntoCrop",
                  "Value": "True"
                },
                {
                  "Key": "SeasonsAllocation",
                  "Value": "2000"
                },
                {
                  "Key": "TriggerFraction",
                  "Value": "0.6"
                },
                {
                  "Key": "RefillFraction",
                  "Value": "0.9"
                },
                {
                  "Key": "MaximumIrrigationAmount",
                  "Value": "100"
                },
                {
                  "Key": "ReturnDays",
                  "Value": "2"
                },
                {
                  "Key": "DepthToMonitor",
                  "Value": "600"
                },
                {
                  "Key": "LimitMonitoringDepth",
                  "Value": "True"
                }
              ],
              "Name": "AutomaticIrrigation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "// This script can be used to apply N fertiliser automatically, based soil mineral N status",
                "// Blame to RCichota, last updated in 18/Mar/2025",
                "",
                "using System;",
                "using System.Xml.Serialization;",
                "using Newtonsoft.Json;",
                "using APSIM.Shared.Utilities;",
                "using Models.Core;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.Interfaces;",
                "using Models.Soils.Nutrients;",
                "",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    [System.Xml.Serialization.XmlInclude(typeof(Model))]",
                "    public class Script : Model",
                "    {",
                "        //Communication to other modules",
                "        [Link] private Clock clock;",
                "        [Link] private ISummary summary;",
                "        [Link] private IPhysical soilPhysical;",
                "        [Link] private INutrient soilNutrient;",
                "        [Link] private Fertiliser Fertiliser;",
                "        [Link] private Plant SCRUM;",
                "",
                "        //User inputs from properties tab",
                "        [Separator(\"Generic N fertiliser management\")]",
                "        [Description(\" Enable automatic fertiliser management?                           \")]",
                "        public bool FertiliserIsEnabled {get; set;}",
                "",
                "        [Description(\" Date to start the fertiliser season (dd-mmm):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public string SeasonStartDate {get; set;}",
                "",
                "        [Description(\" Date to end the fertiliser season (dd-mmm):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public string SeasonEndDate {get; set;}",
                "",
                "        [Description(\" Only fertilise if there is a crop on the field?\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public bool OnlyApplyOntoCrop {get; set;}",
                "",
                "        [Description(\" Season allocation (kg N/ha):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double SeasonsAllocation {get; set;}",
                "",
                "        [Description(\" Minimum soil mineral N, trigger an application (kg N/ha):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double TriggerSoilN {get; set;}",
                "",
                "        [Description(\" Fertiliser N amount per application (kg N/ha):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double AmountToApply {get; set;}",
                "",
                "        [Description(\" Type of fertiliser to apply:\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\", Type = DisplayType.FertiliserType)]",
                "        public string FertiliserType { get; set; }",
                "",
                "        [Description(\" Minimum number of days between applications:\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double ReturnDays {get; set;}",
                "",
                "        [Description(\" Depth to calculate soil mineral N (mm):\")]",
                "        [Display(VisibleCallback = \"FertiliserIsEnabled\")]",
                "        public double DepthToMonitor {get; set;}",
                "",
                "        [Description(\" Limit the depth to the rooting depth?\")]",
                "        [Display(VisibleCallback = \"FertOnAndOnlyOnCrops\")]",
                "        public bool LimitMonitoringDepth {get; set;}",
                "",
                "        //Class members",
                "        [JsonIgnore] public bool SeasonIsOpen {get; set;}",
                "        [JsonIgnore] private bool CropIsActive {get; set;}",
                "        [JsonIgnore] private bool SpreaderIsAvailable {get; set;}",
                "        [JsonIgnore] private bool SoilNitrogenIsLow {get; set;}",
                "        [JsonIgnore] private bool FertiliserIsAvailable {get; set;}",
                "",
                "        [JsonIgnore] public double MonitoredLayerSoilN {get; set;}",
                "        [JsonIgnore] public double MonitoredDepth {get; set;}",
                "",
                "        [JsonIgnore] public double SeasonAppliedAmount {get; set;}",
                "        [JsonIgnore] public double DaysSinceLastApplication {get; set;}",
                "",
                "        //Internal Variables",
                "        private bool FertOnAndOnlyOnCrops",
                "        { get {return FertiliserIsEnabled && OnlyApplyOntoCrop; }}",
                "",
                "",
                "        [EventSubscribe(\"StartOfSimulation\")]",
                "        private void OnStartOfSimulation(object sender, EventArgs e)",
                "        {",
                "            // initialise some variables",
                "            DaysSinceLastApplication = ReturnDays;",
                "            if (!OnlyApplyOntoCrop)",
                "            {",
                "                LimitMonitoringDepth = false;",
                "            }",
                "",
                "            MonitoredDepth = DepthToMonitor;",
                "        }",
                "",
                "        [EventSubscribe(\"StartOfDay\")]",
                "        private void OnStartOfDay(object sender, EventArgs e)",
                "        {",
                "            // check whether we are starting a new season, zero amount",
                "            if (DateUtilities.DatesAreEqual(SeasonStartDate, clock.Today))",
                "            {",
                "                SeasonAppliedAmount = 0.0;",
                "            }",
                "        }",
                "",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void OnDoManagement(object sender, EventArgs e)",
                "        {",
                "            // get the current amount of nitrogen in the soil",
                "            if (LimitMonitoringDepth)",
                "            { // get the current rooting depth, no less than 50mm, no more than DepthToMonitor",
                "                MonitoredDepth = DepthToMonitor;",
                "                if (SCRUM.IsAlive)",
                "                {",
                "                    MonitoredDepth = Math.Min(DepthToMonitor, Math.Max(50.0, SCRUM.Root.Depth));",
                "                }",
                "            }",
                "",
                "            calculateSoilMineralNitrogen(MonitoredDepth);",
                "",
                "            // check N status and management conditions, if we can fertilise at all",
                "            if (FertiliserIsEnabled)",
                "            {",
                "                DaysSinceLastApplication += 1;",
                "",
                "                // are we within the irrigation season?",
                "                SeasonIsOpen = false;",
                "                if (DateUtilities.WithinDates(SeasonStartDate, clock.Today, SeasonEndDate))",
                "                {",
                "                    SeasonIsOpen = true;",
                "                }",
                "",
                "                // is there a crop in the ground that needs fertiliser?",
                "                CropIsActive = true;",
                "                if (OnlyApplyOntoCrop)",
                "                {",
                "                    CropIsActive = false;",
                "                    if (SCRUM.IsAlive)",
                "                    {",
                "                        CropIsActive = true;",
                "                    }",
                "                }",
                "",
                "                // is the spreader available?",
                "                SpreaderIsAvailable = false;",
                "                if (DaysSinceLastApplication >= ReturnDays)",
                "                {",
                "                    SpreaderIsAvailable = true;",
                "                }",
                "",
                "                // is the soil N low enough to require fertiliser?",
                "                SoilNitrogenIsLow = false;",
                "                if (MonitoredLayerSoilN <= TriggerSoilN)",
                "                {",
                "                    SoilNitrogenIsLow = true;",
                "                }",
                "",
                "                // is there N fertiliser available, within allocation?",
                "                FertiliserIsAvailable = false;",
                "                if (SeasonAppliedAmount < SeasonsAllocation)",
                "                {",
                "                    FertiliserIsAvailable = true;",
                "                }",
                "",
                "                //Lets bloody well fertilise then!!!!",
                "                if (SeasonIsOpen && CropIsActive && SpreaderIsAvailable && SoilNitrogenIsLow && FertiliserIsAvailable)",
                "                {",
                "                    AmountToApply = Math.Min(AmountToApply, SeasonsAllocation - SeasonAppliedAmount);",
                "                    AmountToApply = Math.Max(AmountToApply, 0.0);",
                "                    Fertiliser.Apply(amount: AmountToApply, type: FertiliserType, depth: 10.0);",
                "                    DaysSinceLastApplication = 0;",
                "                    SeasonAppliedAmount += AmountToApply;",
                "                    summary.WriteMessage(this, \"Automatic N fertiliser applied, \" + AmountToApply.ToString(\"#0.0\") + \" kgN/ha\", MessageType.Diagnostic);",
                "                }",
                "            }",
                "        }",
                "",
                "        // computes the amount of mineral N in the soil down to a given depth",
                "        private void calculateSoilMineralNitrogen(double depthToCalculate)",
                "        {",
                "            MonitoredLayerSoilN = 0.0;",
                "            double accumulatedDepth = 0.0;",
                "            for (int layer = 0; accumulatedDepth <= depthToCalculate; layer++)",
                "            {",
                "                double layerFraction = (depthToCalculate - accumulatedDepth)/soilPhysical.Thickness[layer];",
                "                layerFraction = Math.Min(1.0, Math.Max(0.0, layerFraction));",
                "                MonitoredLayerSoilN += (soilNutrient.MineralN[layer])*layerFraction;",
                "                accumulatedDepth += soilPhysical.Thickness[layer];",
                "            }",
                "        }",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "FertiliserIsEnabled",
                  "Value": "True"
                },
                {
                  "Key": "SeasonStartDate",
                  "Value": "1-Aug"
                },
                {
                  "Key": "SeasonEndDate",
                  "Value": "30-Apr"
                },
                {
                  "Key": "OnlyApplyOntoCrop",
                  "Value": "False"
                },
                {
                  "Key": "SeasonsAllocation",
                  "Value": "1000"
                },
                {
                  "Key": "TriggerSoilN",
                  "Value": "75"
                },
                {
                  "Key": "AmountToApply",
                  "Value": "25"
                },
                {
                  "Key": "FertiliserType",
                  "Value": "UreaN"
                },
                {
                  "Key": "ReturnDays",
                  "Value": "3"
                },
                {
                  "Key": "DepthToMonitor",
                  "Value": "300"
                },
                {
                  "Key": "LimitMonitoringDepth",
                  "Value": "False"
                }
              ],
              "Name": "AutomaticFertiliser",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "SCRUM.SowingData.Cultivar",
              "Position": 2,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Yield",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Product.Yield",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Series",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.SowingData.Cultivar",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Series1",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "SCRUM.SowingData.Cultivar",
              "Position": 2,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Biomass",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Product.Live.Wt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Series",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.SowingData.Cultivar",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Series1",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": 0.0,
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "SCRUM.SowingData.Cultivar",
              "Position": 2,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "FW",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Fw",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Series",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.SowingData.Cultivar",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Series1",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": 0.0,
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "SCRUM.SowingData.Cultivar",
              "Position": 2,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "FN",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Fn",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Series",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.SowingData.Cultivar",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Series1",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "SCRUM.SowingData.Cultivar",
              "Position": 2,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Cover",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.CoverGreen",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Series",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.SowingData.Cultivar",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Series1",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "SCRUM.SowingData.Cultivar",
              "Position": 2,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "RootDepth",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.Depth",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Series",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.SowingData.Cultivar",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": false,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Series1",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Crop Nitrogen (g/m2)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": null,
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "LabelOnOneLine": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Plant Nitrogen conc",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16744448,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Stover.Live.NConc",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Stover",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.EventNamesOnGraph, Models",
                  "ColumnName": "SCRUM.Phenology.CurrentStageName",
                  "SimulationName": "SCRUMTestBase",
                  "Name": "EventNamesOnGraph",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -8388608,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Root.Live.NConc",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Root",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -32704,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "SCRUM.Product.Live.NConc",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Product",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "Enabled": true,
      "ReadOnly": false
    }
  ],
  "Enabled": true,
  "ReadOnly": false
}