{
  "$type": "Models.Core.Simulations, Models",
  "Version": 165,
  "Name": "Simulations",
  "ResourceName": null,
  "Children": [
    {
      "$type": "Models.Core.Simulation, Models",
      "Descriptors": null,
      "Name": "Wheat Maize Rotation",
      "ResourceName": null,
      "Children": [
        {
          "$type": "Models.Clock, Models",
          "Start": "1900-01-01T00:00:00",
          "End": "1910-01-01T00:00:00",
          "Name": "Clock",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Summary, Models",
          "Verbosity": 100,
          "Name": "SummaryFile",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Climate.Weather, Models",
          "ConstantsFile": null,
          "FileName": "%root%\\Examples\\WeatherFiles\\Dalby.met",
          "ExcelWorkSheetName": null,
          "Name": "Weather",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
          "Name": "SoilArbitrator",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Zone, Models",
          "Area": 1.0,
          "Slope": 0.0,
          "AspectAngle": 0.0,
          "Altitude": 50.0,
          "Name": "Field",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Report, Models",
              "VariableNames": [
                "[Clock].Today",
                "[RotationManager].CurrentState",
                "[Wheat].Phenology.Zadok.Stage",
                "[Wheat].Phenology.CurrentStageName",
                "[Wheat].IsAlive",
                "[Wheat].IsReadyForHarvesting",
                "[Wheat].AboveGround.Wt",
                "[Wheat].AboveGround.N",
                "[Wheat].Grain.Total.Wt*10 as WheatYield",
                "[Maize].Grain.Total.Wt*10 as MaizeYield",
                "[Wheat].Grain.Protein",
                "[Wheat].Grain.Size",
                "[Wheat].Grain.Number",
                "[Wheat].Grain.Total.Wt",
                "[Wheat].Grain.Total.N",
                "[Wheat].Total.Wt",
                "",
                "Sum([Soil].SoilWater.ESW) as ESW",
                "[Soil].SoilWater.Es as ESoil"
              ],
              "EventNames": [
                "[Clock].EndOfDay"
              ],
              "GroupByVariableName": null,
              "Name": "Report",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Fertiliser, Models",
              "Name": "Fertiliser",
              "ResourceName": "Fertiliser",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Soils.Soil, Models",
              "RecordNumber": 0,
              "ASCOrder": "Vertosol",
              "ASCSubOrder": "Black",
              "SoilType": "Clay",
              "LocalName": null,
              "Site": "Norwin",
              "NearestTown": "Norwin",
              "Region": "Darling Downs and Granite Belt",
              "State": "Queensland",
              "Country": "Australia",
              "NaturalVegetation": "Qld. Bluegrass, possible Qld. Blue gum",
              "ApsoilNumber": "900",
              "Latitude": -27.581836,
              "Longitude": 151.320206,
              "LocationAccuracy": " +/- 20m",
              "YearOfSampling": null,
              "DataSource": "CSIRO Sustainable Ecosystems, Toowoomba; Characteriesd as part of the GRDC funded project\"Doing it better, doing it smarter, managing soil water in Australian agriculture' 2011",
              "Comments": "OC, CLL for all crops estimated-based on Bongeen Mywybilla Soil No1",
              "Name": "Soil",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Soils.Physical, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "ParticleSizeClay": null,
                  "ParticleSizeSand": null,
                  "ParticleSizeSilt": null,
                  "Rocks": null,
                  "Texture": null,
                  "BD": [
                    1.01056473311131,
                    1.07145631083388,
                    1.09393858528057,
                    1.15861335018721,
                    1.17301160318016,
                    1.16287303586874,
                    1.18749547755906
                  ],
                  "AirDry": [
                    0.130250054518252,
                    0.198689390775399,
                    0.28,
                    0.28,
                    0.28,
                    0.28,
                    0.28
                  ],
                  "LL15": [
                    0.260500109036505,
                    0.248361738469248,
                    0.28,
                    0.28,
                    0.28,
                    0.28,
                    0.28
                  ],
                  "DUL": [
                    0.52100021807301,
                    0.496723476938497,
                    0.488437607673005,
                    0.480296969355493,
                    0.471583596524955,
                    0.457070570557793,
                    0.452331759845006
                  ],
                  "SAT": [
                    0.588654817693846,
                    0.565676863836273,
                    0.557192986686577,
                    0.532787415023694,
                    0.527354112007486,
                    0.531179986464627,
                    0.521888499034317
                  ],
                  "KS": [
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    20.0,
                    20.0
                  ],
                  "BDMetadata": null,
                  "AirDryMetadata": null,
                  "LL15Metadata": null,
                  "DULMetadata": null,
                  "SATMetadata": null,
                  "KSMetadata": null,
                  "RocksMetadata": null,
                  "TextureMetadata": null,
                  "ParticleSizeSandMetadata": null,
                  "ParticleSizeSiltMetadata": null,
                  "ParticleSizeClayMetadata": null,
                  "Name": "Physical",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.261,
                        0.248,
                        0.28,
                        0.306,
                        0.36,
                        0.392,
                        0.446
                      ],
                      "KL": [
                        0.06,
                        0.06,
                        0.06,
                        0.04,
                        0.04,
                        0.02,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "WheatSoil",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.261,
                        0.248,
                        0.28,
                        0.306,
                        0.36,
                        0.392,
                        0.446
                      ],
                      "KL": [
                        0.06,
                        0.06,
                        0.06,
                        0.04,
                        0.04,
                        0.02,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "MaizeSoil",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.WaterModel.WaterBalance, Models",
                  "SummerDate": "1-Nov",
                  "SummerU": 5.0,
                  "SummerCona": 5.0,
                  "WinterDate": "1-Apr",
                  "WinterU": 5.0,
                  "WinterCona": 5.0,
                  "DiffusConst": 40.0,
                  "DiffusSlope": 16.0,
                  "Salb": 0.12,
                  "CN2Bare": 73.0,
                  "CNRed": 20.0,
                  "CNCov": 0.8,
                  "DischargeWidth": "NaN",
                  "CatchmentArea": "NaN",
                  "PSIDul": -100.0,
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "SWCON": [
                    0.3,
                    0.3,
                    0.3,
                    0.3,
                    0.3,
                    0.3,
                    0.3
                  ],
                  "KLAT": null,
                  "Name": "SoilWater",
                  "ResourceName": "WaterBalance",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Nutrients.Nutrient, Models",
                  "Name": "Nutrient",
                  "ResourceName": "Nutrient",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Organic, Models",
                  "FOMCNRatio": 40.0,
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "Carbon": [
                    1.2,
                    0.96,
                    0.6,
                    0.3,
                    0.18,
                    0.12,
                    0.12
                  ],
                  "CarbonUnits": 0,
                  "SoilCNRatio": [
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0,
                    12.0
                  ],
                  "FBiom": [
                    0.04,
                    0.02,
                    0.02,
                    0.02,
                    0.01,
                    0.01,
                    0.01
                  ],
                  "FInert": [
                    0.4,
                    0.6,
                    0.8,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                  ],
                  "FOM": [
                    347.1290323127564,
                    270.3443621919937,
                    163.97214434990104,
                    99.45413288704063,
                    60.32198083112468,
                    36.58713082867487,
                    22.1912165985086
                  ],
                  "CarbonMetadata": null,
                  "FOMMetadata": null,
                  "Name": "Organic",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Chemical, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "PH": [
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0,
                    8.0
                  ],
                  "PHUnits": 0,
                  "EC": null,
                  "ESP": null,
                  "CEC": null,
                  "ECMetadata": null,
                  "CLMetadata": null,
                  "ESPMetadata": null,
                  "PHMetadata": null,
                  "Name": "Chemical",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Water, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.52100021807301,
                    0.496723476938497,
                    0.488437607673005,
                    0.480296969355493,
                    0.471583596524955,
                    0.457070570557793,
                    0.452331759845006
                  ],
                  "InitialPAWmm": 361.2454283127387,
                  "RelativeTo": "LL15",
                  "FilledFromTop": false,
                  "Name": "Water",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.CERESSoilTemperature, Models",
                  "Name": "Temperature",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                    1.0
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "Name": "NO3",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.1
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "Name": "NH4",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 1,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "Name": "Urea",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Surface.SurfaceOrganicMatter, Models",
              "SurfOM": [],
              "Canopies": [],
              "InitialResidueName": "wheat_stubble",
              "InitialResidueType": "wheat",
              "InitialResidueMass": 500.0,
              "InitialStandingFraction": 0.0,
              "InitialCPR": 0.0,
              "InitialCNR": 100.0,
              "Name": "SurfaceOrganicMatter",
              "ResourceName": "SurfaceOrganicMatter",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "Name": "Wheat",
              "ResourceName": "Wheat",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "Name": "Maize",
              "ResourceName": "Maize",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.MicroClimate, Models",
              "a_interception": 0.0,
              "b_interception": 1.0,
              "c_interception": 0.0,
              "d_interception": 0.0,
              "SoilHeatFluxFraction": 0.4,
              "MinimumHeightDiffForNewLayer": 0.0,
              "NightInterceptionFraction": 0.5,
              "ReferenceHeight": 2.0,
              "Name": "MicroClimate",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using Models.Soils;",
                "using System;",
                "using Models.Core;",
                "using Models.PMF;",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    public class Script : Model",
                "    {",
                "        [Link] Clock Clock;",
                "        [Link] Fertiliser Fertiliser;",
                "        [Link] Summary Summary;",
                "        ",
                "        ",
                "        [Description(\"Amount of fertiliser to be applied (kg/ha)\")]",
                "        public double Amount { get; set;}",
                "        ",
                "        [Description(\"Crop to be fertilised\")]",
                "        public string CropName { get; set;}",
                "        ",
                "        ",
                "        ",
                "",
                "        [EventSubscribe(\"Sowing\")]",
                "        private void OnSowing(object sender, EventArgs e)",
                "        {",
                "            Model crop = sender as Model;",
                "            if (crop.Name.ToLower()==CropName.ToLower())",
                "                Fertiliser.Apply(Amount: Amount, Type: Fertiliser.Types.NO3N);",
                "        }",
                "        ",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "Amount",
                  "Value": "160"
                },
                {
                  "Key": "CropName",
                  "Value": "wheat"
                }
              ],
              "Name": "SowingFertiliser",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Management.RotationManager, Models",
              "Nodes": [
                {
                  "$type": "Models.Management.StateNode, Models",
                  "Description": null,
                  "Name": "summer fallow",
                  "Location": "428, 190",
                  "Colour": "Yellow",
                  "OutlineColour": "Black",
                  "Transparent": false
                },
                {
                  "$type": "Models.Management.StateNode, Models",
                  "Description": null,
                  "Name": "Maize",
                  "Location": "256, 50",
                  "Colour": "Red",
                  "OutlineColour": "Black",
                  "Transparent": false
                },
                {
                  "$type": "Models.Management.StateNode, Models",
                  "Description": null,
                  "Name": "Wheat",
                  "Location": "250, 374",
                  "Colour": "96, 96, 217",
                  "OutlineColour": "Black",
                  "Transparent": false
                },
                {
                  "$type": "Models.Management.StateNode, Models",
                  "Description": null,
                  "Name": "initial",
                  "Location": "70, 200",
                  "Colour": "Lime",
                  "OutlineColour": "Black",
                  "Transparent": false
                }
              ],
              "Arcs": [
                {
                  "$type": "Models.Management.RuleAction, Models",
                  "Conditions": [
                    "[MaizeManager].Script.CanHarvest"
                  ],
                  "Actions": [
                    "[MaizeManager].Script.HarvestCrop();"
                  ],
                  "SourceName": "Maize",
                  "DestinationName": "summer fallow",
                  "Location": "439, 40",
                  "Colour": "Yellow",
                  "Name": "Arc 1"
                },
                {
                  "$type": "Models.Management.RuleAction, Models",
                  "Conditions": [
                    "[WheatManager].Script.CanSow"
                  ],
                  "Actions": [
                    "[WheatManager].Script.SowCrop()"
                  ],
                  "SourceName": "summer fallow",
                  "DestinationName": "Wheat",
                  "Location": "430, 384",
                  "Colour": "Yellow",
                  "Name": "Arc 2"
                },
                {
                  "$type": "Models.Management.RuleAction, Models",
                  "Conditions": [
                    "[WheatManager].Script.CanHarvest"
                  ],
                  "Actions": [
                    "[WheatManager].Script.HarvestCrop(\"glarble\")"
                  ],
                  "SourceName": "Wheat",
                  "DestinationName": "initial",
                  "Location": "50, 390",
                  "Colour": "Yellow",
                  "Name": "Arc 3"
                },
                {
                  "$type": "Models.Management.RuleAction, Models",
                  "Conditions": [
                    "[MaizeManager].Script.CanSow"
                  ],
                  "Actions": [
                    "[MaizeManager].Script.SowCrop()"
                  ],
                  "SourceName": "initial",
                  "DestinationName": "Maize",
                  "Location": "55, 29",
                  "Colour": "Yellow",
                  "Name": "Arc 4"
                }
              ],
              "InitialState": "initial",
              "Verbose": true,
              "Name": "RotationManager",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using Models.Interfaces;",
                "using APSIM.Shared.Utilities;",
                "using Models.Utilities;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.Core;",
                "using System;",
                "using Models.Climate;",
                "",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    public class Script : Model",
                "    {",
                "        [Link] private Clock Clock;",
                "        [Link] private Summary Summary;",
                "        [Link] private Soil Soil;",
                "        private Accumulator accumulatedRain;",
                "        [Link]",
                "        private ISoilWater waterBalance;",
                "",
                "        [Separator(\"Script Configuration\")]",
                "        [Description(\"Crop to manage\")]",
                "        public IPlant Crop { get; set; }",
                "        [Description(\"Run script in verbose mode?\")]",
                "        [Tooltip(\"If enabled, the script will print a large number of diagnostics to the summary file, to aid debugging\")]",
                "        public bool Verbose { get; set; }",
                "",
                "        [Separator(\"Sowing Conditions\")]",
                "        [Description(\"Start of sowing window (d-mmm)\")]",
                "        public string StartDate { get; set;}",
                "        [Description(\"End of sowing window (d-mmm)\")]",
                "        public string EndDate { get; set;}",
                "        [Description(\"Minimum extractable soil water for sowing (mm)\")]",
                "        public double MinESW { get; set;}",
                "        [Description(\"Accumulated rainfall required for sowing (mm)\")]",
                "        public double MinRain { get; set;}",
                "        [Description(\"Duration of rainfall accumulation (d)\")]",
                "        public int RainDays { get; set;}",
                "",
                "        [Tooltip(\"If enabled, and if sowing conditions are not met, the crop will be sown on the final day of the sowing window.\")]",
                "        [Description(\"Must sow (yes/no)\")]",
                "        public bool MustSow { get; set;}",
                "        [Separator(\"Sowing Properties\")]",
                "        [Description(\"Cultivar to be sown\")]",
                "        [Display(Type=DisplayType.CultivarName)]",
                "        public string CultivarName { get; set;}",
                "        [Description(\"Sowing depth (mm)\")]",
                "        public double SowingDepth { get; set;}        ",
                "        [Description(\"Row spacing (mm)\")]",
                "        public double RowSpacing { get; set;}    ",
                "        [Description(\"Plant population (/m2)\")]",
                "        public double Population { get; set;}    ",
                "",
                "        private bool afterInit = false;",
                "",
                "        [EventSubscribe(\"StartOfSimulation\")]",
                "        private void OnSimulationCommencing(object sender, EventArgs e)",
                "        {",
                "            if (Crop == null) { throw new Exception(\"Crop must not be null in rotations\"); }",
                "            accumulatedRain = new Accumulator(this, \"[Weather].Rain\", RainDays);",
                "            afterInit = true;",
                "            Summary.WriteMessage(this, this.FullPath + \" - Commence, crop=\" + (Crop as Model).Name, MessageType.Diagnostic);",
                "        }",
                "        ",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void DoManagement(object sender, EventArgs e)",
                "        {",
                "            accumulatedRain.Update();",
                "        }",
                "",
                "        // Test whether we can sow a crop today",
                "        // +ve number - yes",
                "        // 0          - no",
                "        // -ve number - no, out of scope (planting window)",
                "        [Units(\"0-1\")]",
                "        public bool CanSow",
                "        {",
                "            get",
                "            {",
                "                if (!afterInit)",
                "                    return false;",
                "                bool isPossibleToday = false;",
                "                bool inWindow = DateUtilities.WithinDates(StartDate, Clock.Today, EndDate);",
                "                bool endOfWindow = DateUtilities.DatesEqual(EndDate, Clock.Today);",
                "                if (! Crop.IsAlive && inWindow && accumulatedRain.Sum > MinRain && MathUtilities.Sum(waterBalance.ESW) > MinESW) ",
                "                    isPossibleToday = true;",
                "",
                "                   if (Verbose)",
                "                {",
                "                    if (isPossibleToday)",
                "                        Summary.WriteMessage(this, \"Sowing is possible today\", MessageType.Diagnostic);",
                "                    else if (!Crop.IsAlive && endOfWindow && MustSow)",
                "                        Summary.WriteMessage(this, \"Sowing is possible today, but conditions are not ideal. Only sowing because MustSow is set to yes\", MessageType.Diagnostic);",
                "                    else if (Crop.IsAlive)",
                "                        Summary.WriteMessage(this, \"Not sowing today because crop is already alive\", MessageType.Diagnostic);",
                "                    else if (!inWindow)",
                "                        Summary.WriteMessage(this, string.Format(\"Not sowing today because current date ({0}) is not in sowing window ({1} - {2}).\", Clock.Today.ToString(\"dd-MMM\"), StartDate, EndDate), MessageType.Diagnostic);",
                "                    else if (!(accumulatedRain.Sum > MinRain))",
                "                        Summary.WriteMessage(this, string.Format(\"Not sowing today because accumulated rain ({0}) is less than min rain required for sowing ({1})\", accumulatedRain.Sum, MinRain), MessageType.Diagnostic);",
                "                    else if (!(MathUtilities.Sum(waterBalance.ESW) > MinESW))",
                "                        Summary.WriteMessage(this, string.Format(\"Not sowing today because ESW ({0}) is less than min ESW required for sowing ({1})\", MathUtilities.Sum(waterBalance.ESW), MinESW), MessageType.Diagnostic);",
                "                }",
                "",
                "               if (isPossibleToday)",
                "                   return true;",
                "",
                "               if (! Crop.IsAlive && endOfWindow && MustSow) ",
                "                   return true;",
                "",
                "               if (! Crop.IsAlive && !inWindow)",
                "                   return false;",
                "",
                "               return false;",
                "            }",
                "        }",
                "",
                "        public void SowCrop()",
                "        {",
                "           Summary.WriteMessage(this, this.FullPath + \" -  sowing \" + (Crop as Model).Name, MessageType.Diagnostic);",
                "           Crop.Sow(population:Population, cultivar:CultivarName, depth:SowingDepth, rowSpacing:RowSpacing);    ",
                "        }",
                "",
                "        [Units(\"0-1\")]",
                "        public int CanHarvest",
                "        {",
                "           get",
                "           {",
                "             if (!afterInit)",
                "                 return 0;",
                "             return Crop.IsReadyForHarvesting ? 1 : 0;",
                "           }",
                "        }",
                "",
                "        public void HarvestCrop(string msg)",
                "        {",
                "           Summary.WriteMessage(this, \"Harvesting crop \" + (Crop as IModel).Name + \". Message: \" + msg, MessageType.Diagnostic);",
                "           Crop.Harvest();",
                "           Crop.EndCrop();",
                "        }",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "Crop",
                  "Value": "[Wheat]"
                },
                {
                  "Key": "Verbose",
                  "Value": "False"
                },
                {
                  "Key": "StartDate",
                  "Value": "1-may"
                },
                {
                  "Key": "EndDate",
                  "Value": "10-jul"
                },
                {
                  "Key": "MinESW",
                  "Value": "100"
                },
                {
                  "Key": "MinRain",
                  "Value": "25"
                },
                {
                  "Key": "RainDays",
                  "Value": "7"
                },
                {
                  "Key": "MustSow",
                  "Value": "False"
                },
                {
                  "Key": "CultivarName",
                  "Value": "Hartog"
                },
                {
                  "Key": "SowingDepth",
                  "Value": "30"
                },
                {
                  "Key": "RowSpacing",
                  "Value": "250"
                },
                {
                  "Key": "Population",
                  "Value": "120"
                }
              ],
              "Name": "WheatManager",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "CodeArray": [
                "using Models.Interfaces;",
                "using APSIM.Shared.Utilities;",
                "using Models.Utilities;",
                "using Models.Soils;",
                "using Models.PMF;",
                "using Models.Core;",
                "using System;",
                "using Models.Climate;",
                "",
                "namespace Models",
                "{",
                "    [Serializable]",
                "    public class Script : Model",
                "    {",
                "        [Link] private Clock Clock;",
                "        [Link] private Summary Summary;",
                "        [Link] private Soil Soil;",
                "        [Link]",
                "        private ISoilWater waterBalance;",
                "        //[Link] Simulation Simulation;",
                "",
                "        [Separator(\"Script Configuration\")]",
                "        [Description(\"Crop to manage\")]",
                "        public IPlant Crop { get; set; }",
                "",
                "        [Description(\"Run script in verbose mode?\")]",
                "        [Tooltip(\"If enabled, the script will print a large number of diagnostics to the summary file, to aid debugging\")]",
                "        public bool Verbose { get; set; }",
                "",
                "        [Separator(\"Sowing Conditions\")]",
                "        [Description(\"Start of sowing window (d-mmm)\")]",
                "        public string StartDate { get; set; }",
                "        [Description(\"End of sowing window (d-mmm)\")]",
                "        public string EndDate { get; set; }",
                "        [Description(\"Minimum extractable soil water for sowing (mm)\")]",
                "        public double MinESW { get; set; }",
                "        [Description(\"Accumulated rainfall required for sowing (mm)\")]",
                "        public double MinRain { get; set; }",
                "        [Description(\"Duration of rainfall accumulation (d)\")]",
                "        public int RainDays { get; set; }",
                "        [Tooltip(\"If enabled, and if sowing conditions are not met, the crop will be sown on the final day of the sowing window.\")]",
                "        [Description(\"Must sow (yes/no)\")]",
                "        public bool MustSow { get; set; }",
                "",
                "        [Separator(\"Sowing Properties\")]",
                "        [Description(\"Cultivar to be sown\")]",
                "        [Display(Type = DisplayType.CultivarName)]",
                "        public string CultivarName { get; set; }",
                "        [Description(\"Sowing depth (mm)\")]",
                "        public double SowingDepth { get; set; }",
                "        [Description(\"Row spacing (mm)\")]",
                "        public double RowSpacing { get; set; }",
                "        [Description(\"Plant population (/m2)\")]",
                "        public double Population { get; set; }",
                "",
                "        public Accumulator accumulatedRain { get; private set; }",
                "        private bool afterInit = false;",
                "                ",
                "        [EventSubscribe(\"StartOfSimulation\")]",
                "        private void OnSimulationCommencing(object sender, EventArgs e)",
                "        {",
                "            if (Crop == null)",
                "                throw new Exception(\"Crop must not be null in rotations\");",
                "            accumulatedRain = new Accumulator(this, \"[Weather].Rain\", RainDays);",
                "            Summary.WriteMessage(this, this.FullPath + \" - Commence, crop=\" + (Crop as Model).Name, MessageType.Diagnostic);",
                "            afterInit = true;",
                "        }",
                "        ",
                "        [EventSubscribe(\"DoManagement\")]",
                "        private void DoManagement(object sender, EventArgs e)",
                "        {",
                "            accumulatedRain.Update();",
                "        }",
                "",
                "        // Test whether we can sow a crop today",
                "        // +ve number - yes",
                "        // 0          - no",
                "        // -ve number - no, out of scope (planting window)",
                "        [Units(\"0-1\")]",
                "        public int CanSow",
                "        {",
                "            get",
                "            {",
                "                if (!afterInit)",
                "                    return 0;",
                "                bool isPossibleToday = false;",
                "                bool inWindow = DateUtilities.WithinDates(StartDate, Clock.Today, EndDate);",
                "                bool endOfWindow = DateUtilities.DatesEqual(EndDate, Clock.Today);",
                "                if (!Crop.IsAlive && inWindow && accumulatedRain.Sum > MinRain && MathUtilities.Sum(waterBalance.ESW) > MinESW)",
                "                    isPossibleToday = true;",
                "",
                "                if (isPossibleToday)",
                "                    return 1;",
                "         ",
                "                if (!Crop.IsAlive && endOfWindow && MustSow)",
                "                    return 1;",
                "",
                "                if (!Crop.IsAlive && !inWindow)",
                "                    return -1;",
                "                return 0;",
                "            }",
                "        }",
                "",
                "        public void SowCrop()",
                "        {",
                "            Summary.WriteMessage(this, this.FullPath + \" -  sowing \" + (Crop as Model).Name, MessageType.Diagnostic);",
                "            Crop.Sow(population: Population, cultivar: CultivarName, depth: SowingDepth, rowSpacing: RowSpacing);    ",
                "        }",
                "",
                "        [Units(\"0-1\")] ",
                "        public int CanHarvest",
                "        {",
                "            get",
                "            {",
                "                if (!afterInit)",
                "                    return (0);",
                "                //Summary.WriteMessage(this, \"canLeave:\" + Crop.IsReadyForHarvesting, MessageType.Diagnostic);",
                "                return Crop.IsReadyForHarvesting ? 1 : 0;",
                "            }",
                "        }",
                "",
                "        public void HarvestCrop()",
                "        {",
                "            Crop.Harvest();",
                "            Crop.EndCrop();",
                "        }",
                "    }",
                "}"
              ],
              "Parameters": [
                {
                  "Key": "Crop",
                  "Value": "[Maize]"
                },
                {
                  "Key": "Verbose",
                  "Value": "False"
                },
                {
                  "Key": "StartDate",
                  "Value": "10-oct"
                },
                {
                  "Key": "EndDate",
                  "Value": "10-nov"
                },
                {
                  "Key": "MinESW",
                  "Value": "100"
                },
                {
                  "Key": "MinRain",
                  "Value": "25"
                },
                {
                  "Key": "RainDays",
                  "Value": "7"
                },
                {
                  "Key": "MustSow",
                  "Value": "False"
                },
                {
                  "Key": "CultivarName",
                  "Value": "Katumani"
                },
                {
                  "Key": "SowingDepth",
                  "Value": "30"
                },
                {
                  "Key": "RowSpacing",
                  "Value": "500"
                },
                {
                  "Key": "Population",
                  "Value": "4"
                },
                {
                  "Key": "accumulatedRain",
                  "Value": ""
                }
              ],
              "Name": "MaizeManager",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Report, Models",
              "VariableNames": [
                "[Clock].Today",
                "[Clock].Today.DayOfYear",
                "[RotationManager].CurrentState"
              ],
              "EventNames": [
                "[RotationManager].Transition"
              ],
              "GroupByVariableName": null,
              "Name": "TransitionReport",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Date",
              "Position": 3,
              "Inverted": false,
              "CrossesAtZero": false,
              "Minimum": null,
              "Maximum": null,
              "Interval": null
            },
            {
              "$type": "APSIM.Shared.Graphing.Axis, APSIM.Shared",
              "Title": "Yield (kg/ha)",
              "Position": 0,
              "Inverted": false,
              "CrossesAtZero": false,
              "Minimum": null,
              "Maximum": null,
              "Interval": null
            }
          ],
          "LegendPosition": 0,
          "LegendOrientation": 0,
          "AnnotationLocation": 0,
          "DisabledSeries": [],
          "LegendOutsideGraph": false,
          "Name": "Yield Time Series",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -1663232,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "WheatYield",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Wheat Yield",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -11094807,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "MaizeYield",
              "X2FieldName": "",
              "Y2FieldName": "",
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": false,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Maize Yield",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Storage.DataStore, Models",
      "useFirebird": false,
      "CustomFileName": null,
      "Name": "DataStore",
      "ResourceName": null,
      "Children": [],
      "Enabled": true,
      "ReadOnly": false
    }
  ],
  "Enabled": true,
  "ReadOnly": false
}