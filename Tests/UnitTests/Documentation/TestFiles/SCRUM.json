[{"type": "APSIM.Shared.Documentation.Section", "text": "The APSIM SCRUM Model", "children": [{"type": "APSIM.Shared.Documentation.Paragraph", "text": "The model has been developed using the Plant Modelling Framework (PMF) of [brown_plant_2014]. Thisnew framework provides a library of plant organ and process submodels that can be coupled, at runtime, to construct amodel in much the same way that models can be coupled to construct a simulation.This means that dynamic compositionof lower level process and organ classes(e.g.photosynthesis, leaf) into larger constructions(e.g.maize, wheat,sorghum) can be achieved by the model developer without additional coding."},{"type": "APSIM.Shared.Documentation.Paragraph", "text": "# SCRUM: the Simple Crop Resource Uptake Model_Hamish Brown and Rob Zyskowski, Plant and Food Research, New Zealand_This model has been built using the Plant Modelling Framework (PMF) of [brown_plant_2014] to simulate a range of different crops in simulations where water and nitrogen balance are of interest but a fully mechanistic plant model is not needed or is not available. It is a daily time step implementation of the crop model that is used on the Overseer nutrient balance model [Cichota_etal_2010].  It uses simple sigmoidal functions for estimating daily cover and biomass deltas to give realistic water and nitrogen demands. It does not simulate potential yield, this is specified as an input. Yield will be reduced below the specified potential yield if N or water supplies from the soil are insufficient to meet demand. The model has been paramaterised for simulating water and nitrogen balances of cropping rotations in New Zealand (where over 50 different crop types are grown and it is not feasible to produce full crop models for each of these).  Because of this the model is not as generically applicable as full APSIM crop models.   It may be adapted for other purposes and other crop types may be added but the user will need to keep in mind that because it is a simple model the the parameters might need changing for crops in different locations or for crops sown at different times of the year.  Some sensibility testing or validation is recommended before application in different sutuations.   SCRUM has a simple phenology model which divides the crop growth into three main phases; a vegetative phase when the canopy is expanding, a reproductive phase when product is being formed and a senescing phase when the canopy is contracting.  SCRUM has 4 organ classes to represent different biomass components and the real biomass components that these classes represent changes from crop to crop:     1. A Simple leaf class called <b>Stover</b> which represents the unharvested parts of the plant.  Generally, this represents the leaf and stem components of the crop but for crops where stem and leaf are part of the harvested product (e.g forages and leafy vegetables) than stover is the residual fraction of leaf and stem that is not harvested.     2. A Generic organ class called <b>Product</b> which represents the plant parts that are harvested and removed from the field.  This could represent grain, fruits, tubers, leaf or stem depending on what sort of crop is being represented.     3. A Root organ which extracts water and nitrogen from the soil for plant growth and returns biomass to the soil on harvest     4. A Nodule organ which is only activated and fixes nitrogen for the legume crops.  An Arbitrator is also included which determines the allocation of drymatter and nitrogen biomass between each of these organs.#Inclusion in APSIM simulationsA scrum crop is included in a simulation the same as any other APSIM crop   * The SCRUM object needs to be dragged or copied from the Crop folder in the tool box into the field of your simulation.   * It is then planted with a sowing rule  ~~~SCRUM.Sow(cultivar: Wheat_Autumn, population: 1, depth: 10, rowSpacing: 150);  ~~~  * Note that SCRUM has no notion of population or rowSpacing but these parameters are required by the Sow method so filler values are provided    * To specify an expected Expected Yield that differs to the defalt value provided, included the following code in a manager script to be executed on the day of sowing.~~~ zone.Set([SCRUM].Product.ExpectedYield.Value(), ResetValue);  ~~~* SCRUM can be Harvested, Cut, Grazed and Pruned like other crops.  Defalt proportions of the biomass in each organ are removed from the sysem and/or added to the fields residue pools.  Note that defalt removal fraction for product on harvest is 0 (becaue it is represented with a generic organ) so more appropriate removal fractions should be sepcified in a manager script as follows:  ~~~[EventSubscribe(Commencing)]  private void OnSimulationCommencing(object sender, EventArgs e)  {    Remove = new RemovalFractions(SCRUM.Organs);  }  [EventSubscribe(DoManagement)]    private void OnDoManagement(object sender, EventArgs e)  {    if (Clock.Today.Date == HarvestDate2)    {      Remove.SetFractionLiveToRemove(Product, 1.0);    Remove.SetFractionLiveToRemove(Stover, 0.05);      Remove.SetFractionLiveToResidue(Stover,0.95)    SCRUM.Harvest(Remove);      SCRUM.EndCrop();    }  }  ~~~* A Remove class as shown above can be sent with Harvest, Cut, Graze and Prune events to specificy the proportions of removals. * Once a crop has been ended the field is open to plant another crop using another APSIM crop model or sowing another SCRUM crop.  "},{"type": "APSIM.Shared.Documentation.Paragraph", "text": "The model is constructed from the following list of software components. Details of the implementation and model parameterisation are provided in the following sections."},{"type": "APSIM.Shared.Documentation.Section", "text": "Plant Model Components", "children": [{"type": "APSIM.Shared.Documentation.Table", "text": "Table"}]},{"type": "APSIM.Shared.Documentation.Section", "text": "Composite Biomass", "children": [{"type": "APSIM.Shared.Documentation.Table", "text": "Table"}]},{"type": "APSIM.Shared.Documentation.Section", "text": "Cultivars", "children": [{"type": "APSIM.Shared.Documentation.Table", "text": "Table"}]},{"type": "APSIM.Shared.Documentation.Section", "text": "Child Components", "children": [{"type": "APSIM.Shared.Documentation.Section", "text": "Phenology", "children": [{"type": "APSIM.Shared.Documentation.Paragraph", "text": "The phenological development is simulated as the progression through a series of developmental phases, each bound by distinct growth stage."},{"type": "APSIM.Shared.Documentation.Paragraph", "text": "As ThermalTime accumulates the crop progresses through the following phases:"}]},{"type": "APSIM.Shared.Documentation.Section", "text": "Arbitrator", "children": [{"type": "APSIM.Shared.Documentation.Paragraph", "text": "The Arbitrator class determines the allocation of dry matter (DM) and Nitrogen between each of the organs in the crop model. Each organ can have up to three different pools of biomass:* **Structural biomass** which is essential for growth and remains within the organ once it is allocated there.* **Metabolic biomass** which generally remains within an organ but is able to be re allocated when the organ senesces and may be retranslocated when demand is high relative to supply.* **Storage biomass** which is partitioned to organs when supply is high relative to demand and is available for retranslocation to other organs whenever supply from uptake, fixation, or re allocation is lower than demand.The process followed for biomass arbitration is shown in the figure below. Arbitration calculations are triggered by a series of events (shown below) that are raised every day.  For these calculations, at each step the Arbitrator exchange information with each organ, so the basic computations of demand and supply are done at the organ level, using their specific parameters. 1. **doPotentialPlantGrowth**.  When this event occurs, each organ class executes code to determine their potential growth, biomass supplies and demands.  In addition to demands for structural, non structural and metabolic biomass (DM and N) each organ may have the following biomass supplies: * **Fixation supply**.  From photosynthesis (DM) or symbiotic fixation (N)* **Uptake supply**.  Typically uptake of N from the soil by the roots but could also be uptake by other organs (eg foliage application of N).* **Retranslocation supply**.  Storage biomass that may be moved from organs to meet demands of other organs.* **Reallocation supply**. Biomass that can be moved from senescing organs to meet the demands of other organs.2. **doPotentialPlantPartitioning.** On this event the Arbitrator first executes the DoDMSetup() method to gather the DM supplies and demands from each organ, these values are computed at the organ level.  It then executes the DoPotentialDMAllocation() method which works out how much biomass each organ would be allocated assuming N supply is not limiting and sends these allocations to the organs.  Each organ then uses their potential DM allocation to determine their N demand (how much N is needed to produce that much DM) and the arbitrator calls DoNSetup() to gather the N supplies and demands from each organ and begin N arbitration.  Firstly DoNReallocation() is called to redistribute N that the plant has available from senescing organs.  After this step any unmet N demand is considered as plant demand for N uptake from the soil (N Uptake Demand).3. **doNutrientArbitration.** When this event occurs, the soil arbitrator gets the N uptake demands from each plant (where multiple plants are growing in competition) and their potential uptake from the soil and determines how much of their demand that the soil is able to provide.  This value is then passed back to each plant instance as their Nuptake and doNUptakeAllocation() is called to distribute this N between organs.  4. **doActualPlantPartitioning.**  On this event the arbitrator call DoNRetranslocation() and DoNFixation() to satisfy any unmet N demands from these sources.  Finally, DoActualDMAllocation is called where DM allocations to each organ are reduced if the N allocation is insufficient to achieve the organs minimum N concentration and final allocations are sent to organs. ![Schematic showing the procedure for arbitration of biomass partitioning.  Pink boxes represent events that occur every day and their numbering shows the order of calculations. Blue boxes represent the methods that are called when these events occur.  Orange boxes contain properties that make up the organ/arbitrator interface.  Green boxes are organ specific properties.](ArbitratorSequenceDiagram.png)"}]},{"type": "APSIM.Shared.Documentation.Section", "text": "Product", "children": [{"type": "APSIM.Shared.Documentation.Paragraph", "text": "This organ is simulated using a GenericOrgan type.  It is parameterised to calculate the growth, senescence, and detachment of any organ that does not have specific functions."},{"type": "APSIM.Shared.Documentation.Paragraph", "text": "It is the biomass that is removed from the crop at harvest and may include grain, root, leaf, stem, pod or any other organ type depending on the type of crop and how it is harvested."}]},{"type": "APSIM.Shared.Documentation.Section", "text": "Stover", "children": [{"type": "APSIM.Shared.Documentation.Paragraph", "text": "This organ is simulated using a SimpleLeaf organ type.  It provides the core functions of intercepting radiation, producing biomassthrough photosynthesis, and determining the plant's transpiration demand.  The model also calculates the growth, senescence, anddetachment of leaves.  SimpleLeaf does not distinguish leaf cohorts by age or position in the canopy.Radiation interception and transpiration demand are computed by the MicroClimate model.  This model takes into accountcompetition between different plants when more than one is present in the simulation.  The values of canopy Cover, LAI, and plantHeight (as defined below) are passed daily by SimpleLeaf to the MicroClimate model.  MicroClimate uses an implementation of theBeer Lambert equation to compute light interception and the Penman Monteith equation to calculate potential evapotranspiration.  These values are then given back to SimpleLeaf which uses them to calculate photosynthesis and soil water demand."},{"type": "APSIM.Shared.Documentation.Paragraph", "text": "SimpleLeaf has two options to define the canopy: the user can either supply a function describing LAI or a function describing canopy cover directly.  From either of these functions SimpleLeaf can obtain the other property using the Beer Lambert equation with the specified value of extinction coefficient.The effect of growth rate on transpiration is captured by the Fractional Growth Rate (FRGR) function, which is passed to the MicroClimate model."},{"type": "APSIM.Shared.Documentation.Paragraph", "text": "Stover represents any part of the crop that is not removed at harvest (i.e not part of the product)."}]},{"type": "APSIM.Shared.Documentation.Section", "text": "Root", "children": [{"type": "APSIM.Shared.Documentation.Paragraph", "text": "The root model calculates root growth in terms of rooting depth, biomass accumulation and subsequent root length density in each soil layer."},{"type": "APSIM.Shared.Documentation.Paragraph", "text": "The root organ demands and is partitioned N and DM and its depth increases through time to provide a water uptake supply"}]},{"type": "APSIM.Shared.Documentation.Section", "text": "Nodule", "children": [{"type": "APSIM.Shared.Documentation.Paragraph", "text": "This organ simulates the root structure associate with symbiotic N fixing bacteria.  It provides the core functions of determining N fixation supply and related costs.  It also calculates the growth, senescence and detachment of nodules."},{"type": "APSIM.Shared.Documentation.Paragraph", "text": "The nodule organ is unparameterised and simply has a switch that is turned on for legume crops (so they can fix what ever N the crop demands) and switched off for non legume crops (which fix no N)"}]},{"type": "APSIM.Shared.Documentation.Section", "text": "MortalityRate", "children": [{"type": "APSIM.Shared.Documentation.Paragraph", "text": "A constant function (name=value)"}]},{"type": "APSIM.Shared.Documentation.Section", "text": "SeedMortalityRate", "children": [{"type": "APSIM.Shared.Documentation.Paragraph", "text": "A constant function (name=value)"}]}]}]},{"type": "APSIM.Shared.Documentation.Section", "text": "Interface", "children": [{"type": "APSIM.Shared.Documentation.Section", "text": "SCRUM", "children": [{"type": "APSIM.Shared.Documentation.Paragraph", "text": "**Properties (Outputs)**"},{"type": "APSIM.Shared.Documentation.Table", "text": "Table"},{"type": "APSIM.Shared.Documentation.Paragraph", "text": "**Links (Dependencies)**"},{"type": "APSIM.Shared.Documentation.Table", "text": "Table"},{"type": "APSIM.Shared.Documentation.Paragraph", "text": "**Events published**"},{"type": "APSIM.Shared.Documentation.Table", "text": "Table"},{"type": "APSIM.Shared.Documentation.Paragraph", "text": "**Methods (callable from manager)**"},{"type": "APSIM.Shared.Documentation.Table", "text": "Table"}]},{"type": "APSIM.Shared.Documentation.Section", "text": "SowingParameters", "children": [{"type": "APSIM.Shared.Documentation.Paragraph", "text": "Parameters which control how a plant is sown."},{"type": "APSIM.Shared.Documentation.Paragraph", "text": "**Properties (Outputs)**"},{"type": "APSIM.Shared.Documentation.Table", "text": "Table"}]},{"type": "APSIM.Shared.Documentation.Section", "text": "Phenology", "children": [{"type": "APSIM.Shared.Documentation.Paragraph", "text": "The phenological development is simulated as the progression through a series of developmental phases, each bound by distinct growth stage."},{"type": "APSIM.Shared.Documentation.Paragraph", "text": "**Properties (Outputs)**"},{"type": "APSIM.Shared.Documentation.Table", "text": "Table"},{"type": "APSIM.Shared.Documentation.Paragraph", "text": "**Links (Dependencies)**"},{"type": "APSIM.Shared.Documentation.Table", "text": "Table"},{"type": "APSIM.Shared.Documentation.Paragraph", "text": "**Events published**"},{"type": "APSIM.Shared.Documentation.Table", "text": "Table"},{"type": "APSIM.Shared.Documentation.Paragraph", "text": "**Methods (callable from manager)**"},{"type": "APSIM.Shared.Documentation.Table", "text": "Table"}]}]}]