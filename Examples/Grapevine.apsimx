{
  "$type": "Models.Core.Simulations, Models",
  "ExplorerWidth": 273,
  "Version": 163,
  "Name": "Simulations",
  "ResourceName": null,
  "Children": [
    {
      "$type": "Models.Memo, Models",
      "Text": "\n## Cautions for running the model \n- Vineyard conditions differ from one to the other due to differences in local climatic conditions, soil, rootstock, varieity, irrigtation, fertilization and canopy management practice. The current grapevine model rather provide a modelling framework to simulate phenology, canopy development, radiation interception, dry matter production and allocation, non-structural carbohydrate dynamics, yield components, soil water and nitrogen uptake in vineyard, than a universal model that can be applied anywhere without adjustments. \n- The current grapevine model was developed based on a rich phenology and yield dataset of Sauvignon blanc in New Zealand in five regions, mainly in the Marlborough region. The dataset were collected in irrigated and fertilized vineyards where water and nutrient stress were minimized. This was reflected in the simulation through irrigation and fertilization management script as well. For conditions with water and nutrient stress, further calibration based on local dataset would be needed. \n- Parameters for potential bunch number, berry number and berry mass determination were derived based on the long-term Sauvignon blanc trial in Marlborough. The general framework would hold for other varieties as well, but actual parameters needed to be refitted based on robust dataset for other varieties. \n- The current model can allocate vine roots to the alley and allocate the root of the alley crop to the vine row. However, the water and nitrogen competition between the vine and alley crop is based on the value of KL of each species, not based on the amount of root and root density presented in the soil zone. One option is change the KL as a function of root density or directly use root density in the source code. A good dataset of root distribution in different layor would be required. Further calibration of soil water, nitrogen and organic matter dynamics are needed.\n- Currently alley crop was represented by a generic plant model â€˜Slurpâ€™. The â€˜Slurpâ€™ model can take up water and nitrogen, but does not predict crop growth or yields. We forced its leaf area index to follow a reasonable growth pattern under the vineyard management in Marlborough New Zealand with periodic mowing events. Four different types were provided for the Slurp model: static crop, static tree, pasture, lurcern. see details in the Slurp node by right click and expanding the model structure. \n- The row crop light interception method assume the canopy shape is like a cube. So it is more suitable to use for verticle shoot prunned canopy. \n- Water stress was turned on for leaf expansion and photosynthesis, but nitrogen stress was turned off in the current model. However, nitrogen uptake and availability will still affect the organ development as the arbitrator is conducting biomass and nitrogen allocation automatically in the background.\n",
      "Name": "Cautions for new users",
      "ResourceName": null,
      "Children": [],
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Core.Folder, Models",
      "ShowInDocs": false,
      "GraphsPerPage": 6,
      "Name": "Replacements",
      "ResourceName": null,
      "Children": [
        {
          "$type": "Models.Report, Models",
          "VariableNames": [
            "[Clock].Today",
            "[Clock].Today.Year",
            "[Clock].Today.DayOfYear",
            "[Weather].DaysSinceWinterSolstice   as DAWS",
            "[PlantVariables].Script.Height \t\tas height",
            "[PlantVariables].Script.LAI         as LAIStrip",
            "[PlantVariables].Script.FRadInt     as f.rad.int",
            "[PlantVariables].Script.ET          as transpiration",
            "[PlantVariables].Script.ES          as Es",
            "[PlantVariables].Script.PET         as PET",
            "[PlantVariables].Script.RootDepth   as rootDepth",
            "",
            "[Soil].OutputLayers.SW",
            "sum([Soil].OutputLayers.SWmm)       as psw",
            "[Weather].Rain",
            "[Irrigation].IrrigationApplied",
            "[Soil].SoilWater.Drainage",
            "",
            "[Grapevine].Phenology.CurrentSeason as CurrentSeason",
            "[Grapevine].Phenology.Stage",
            "[Grapevine].Phenology.AccumulatedEmergedTT",
            "[Grapevine].Phenology.BudBurstDOY      as BudBurstDAWS",
            "[Grapevine].Phenology.FloweringDOY     as FloweringDAWS",
            "[Grapevine].Phenology.VeraisonDOY      as VeraisonDAWS",
            "[Grapevine].Phenology.CurrentStageName as CurrentStageName",
            "[Grapevine].Phenology.AccumulatedChillingUnitBeforeWinterPruning",
            "",
            "[Grapevine].Structure.PrimaryBudNo",
            "[Grapevine].Structure.MainStemPopn",
            "[Grapevine].Structure.LeafTipsAppeared",
            "",
            "[Grapevine].Structure.TotalLeavesPerShoot as leaf.no.shoot",
            "[Grapevine].Leaf.InitialisedCohortNo",
            "[Grapevine].Leaf.DeadCohortNo",
            "[Grapevine].Leaf.AppearedCohortNo as leaf.no.shoot.main",
            "[Grapevine].Leaf.CohortSize",
            "[Grapevine].Leaf.Live.NConc",
            "[Grapevine].Leaf.Transpiration",
            "",
            "[Grapevine].Population",
            "[Grapevine].Leaf.LAI/[Grapevine].Population             as leaf.area.vine",
            "[Grapevine].Leaf.LAI/[Grapevine].Structure.MainStemPopn as leaf.area.shoot",
            "[Grapevine].Leaf.LAIMainStem/[Grapevine].Structure.MainStemPopn as leaf.area.shoot.main",
            "[Grapevine].Leaf.LAIBranch/[Grapevine].Structure.MainStemPopn as leaf.area.shoot.lateral",
            "",
            "",
            "[Grapevine].Leaf.Fn",
            "[Grapevine].Leaf.Fw",
            "[Grapevine].Leaf.Live.Wt",
            "[Grapevine].Leaf.Live.Wt/[Grapevine].Population as leaf.dw.vine",
            "[Grapevine].Leaf.Live.Wt/[Grapevine].Structure.MainStemPopn as leaf.dw.shoot",
            "",
            "[Grapevine].Shoot.Live.Wt",
            "[Grapevine].Shoot.Live.Wt/[Grapevine].Structure.MainStemPopn as shoot.dw.mean",
            "[Grapevine].Shoot.Live.StructuralWt",
            "[Grapevine].Shoot.Live.StorageWt",
            "",
            "[Grapevine].Cane.Live.Wt",
            "[Grapevine].Cane.Live.StructuralWt",
            "[Grapevine].Cane.Live.StorageWt",
            "[Grapevine].Trunk.Live.Wt",
            "[Grapevine].Trunk.Live.StructuralWt",
            "[Grapevine].Trunk.Live.StorageWt",
            "[Grapevine].Trunk.Live.StorageWt/[Grapevine].Trunk.Live.Wt as total.NSC.concentration.trunk",
            "[Grapevine].Root.Live.Wt",
            "[Grapevine].StructuralRoot.Live.Wt",
            "[Grapevine].StructuralRoot.Live.StructuralWt",
            "[Grapevine].StructuralRoot.Live.StorageWt",
            "[Grapevine].StructuralRoot.Live.StorageWt/[Grapevine].StructuralRoot.Live.Wt as total.NSC.concentration.root",
            "[Grapevine].Root.NTakenUp",
            "[Grapevine].StructuralRoot.N",
            "[Grapevine].Arbitrator.FDM",
            "[Grapevine].Arbitrator.DM.TotalFixationSupply",
            "",
            "[Grapevine].Berry.Live.Wt",
            "[Grapevine].Berry.Live.Wt/[Grapevine].Population as TotalBerryDW",
            "[Grapevine].Berry.SingleBerryDW",
            "[Grapevine].Berry.SingleBerryFW     as berry.fw.mean",
            "[Grapevine].Berry.TotalBerryFW/[Grapevine].Population as TotalBerryFW",
            "[Grapevine].Berry.NumberFunction",
            "[Grapevine].Berry.ThermalTimeAfterFlowering",
            "[Grapevine].Berry.WaterContent",
            "[Grapevine].Berry.N",
            "[Grapevine].Berry.NFillingRate",
            "[Grapevine].Berry.Brix \t\t\t\tas brix",
            "[Grapevine].Berry.TitratableAcid \tas ta",
            "",
            "[Grapevine].Berry.MetFactors.BUN_TmaxIni_Record    as BUN_TmaxIni",
            "[Grapevine].Berry.MetFactors.BUN_RadIni_Record     as BUN_RadIni",
            "[Grapevine].Berry.MetFactors.BEN_RainTotFlow as BEN_RainTotFlow",
            "[Grapevine].Berry.MetFactors.BEN_TmaxIni_Record    as BEN_TmaxIni_Record",
            "[Grapevine].Berry.MetFactors.BEN_TmaxFlow   as BEN_TmaxFlow",
            "[Grapevine].Berry.MetFactors.BEN_TminFlow   as BEN_TminFlow",
            "[Grapevine].Berry.MetFactors.BM_RadFlow      as BM_RadFlow",
            "[Grapevine].Berry.MetFactors.BM_RainTotFlow  as BM_RainTotFlow",
            "[Grapevine].Berry.MetFactors.BM_RainTotVer   as BM_RainTotVer",
            "[Grapevine].Berry.MetFactors.BM_TmaxFlow    as BM_TmaxFlow",
            "",
            "[Grapevine].Berry.YieldComponent.BunchesPerShoot as bunch.no.shoot",
            "[Grapevine].Berry.YieldComponent.BunchesPerVine  as bunch.no.vine",
            "[Grapevine].Berry.YieldComponent.BerryNum    as BerryNum",
            "[Grapevine].Berry.YieldComponent.BerryMass   as berry.fw.est",
            "[Grapevine].Berry.YieldPerVine               as yield.per.vine",
            "",
            "",
            "",
            "// Note: for converting into field scale, need the strip area, this could be done by multiplying all by Ai/At = Ai/(A1+A2)",
            "[Row].Area",
            "[Alley].Area",
            "[Row].Area/([Alley].Area+[Row].Area) as Row.FractionArea",
            "[Alley].Area/([Alley].Area+[Row].Area) as Alley.FractionArea",
            "",
            "[Weather].Radn as TotalRadiation",
            "[Row].Grapevine.Leaf.RadiationIntercepted",
            "[Alley].Slurp.Leaf.RadiationIntercepted",
            "",
            "// Carbon balance (basic)",
            "[Row].Grapevine.AboveGround.Wt",
            "[Row].Grapevine.BelowGround.Wt",
            "([Row].Grapevine.Leaf.Removed.Wt+[Row].Grapevine.Shoot.Removed.Wt+[Row].Grapevine.Cane.Removed.Wt+[Row].Grapevine.Trunk.Removed.Wt+[Row].Grapevine.Berry.Removed.Wt+[Row].Grapevine.StructuralRoot.Removed.Wt+[Row].Grapevine.Root.Removed.Wt) as Row.Grapevine.Removed.Wt",
            "([Row].Grapevine.Leaf.Detached.Wt+[Row].Grapevine.Shoot.Detached.Wt+[Row].Grapevine.Cane.Detached.Wt+[Row].Grapevine.Trunk.Detached.Wt+[Row].Grapevine.Berry.Detached.Wt+[Row].Grapevine.StructuralRoot.Detached.Wt+[Row].Grapevine.Root.Detached.Wt) as Row.Grapevine.Detached.Wt",
            "[Row].SurfaceOrganicMatter.C as Row.SurfaceOM.C",
            "sum([Row].Soil.Nutrient.FOM.C) as Row.SoilFOM.C",
            "sum([Row].Soil.Nutrient.Microbial.C)+sum([Row].Soil.Nutrient.Humic.C) as Row.SoilOM.C",
            "",
            "// Water balance (basic)",
            "[Weather].Rain as Rainfall",
            "[Row].Irrigation.IrrigationApplied as Row.Irrigation",
            "[Row].Soil.SoilWater.Runoff as Row.Runoff",
            "[Row].Soil.SoilWater.Es as Row.Evaporation",
            "[Row].Grapevine.Leaf.Transpiration as Row.Transpiration",
            "[Row].Soil.SoilWater.Drainage as Row.Drainage",
            "sum([Row].Soil.SoilWater.SWmm) as Row.TotalSWC",
            "[Alley].Irrigation.IrrigationApplied as Alley.Irrigation",
            "[Alley].Soil.SoilWater.Runoff as Alley.Runoff",
            "[Alley].Soil.SoilWater.Es as Alley.Evaporation",
            "[Alley].Slurp.Leaf.Transpiration as Alley.Transpiration",
            "[Alley].Soil.SoilWater.Drainage as Alley.Drainage",
            "sum([Alley].Soil.SoilWater.SWmm) as Alley.TotalSWC",
            "sum([Row].Soil.Physical.SATmm) as TotalSAT",
            "sum([Row].Soil.Physical.DULmm) as TotalDUL",
            "sum([Row].Soil.Physical.LL15mm) as TotalLL15",
            "",
            "// Nitrogen balance (basic)",
            "[Row].SurfaceOrganicMatter.N as Row.SurfaceOM.N",
            "sum([Row].Soil.Nutrient.FOM.N) as Row.SoilFOM.N",
            "sum([Row].Soil.Nutrient.Microbial.N)+sum([Row].Soil.Nutrient.Humic.C) as Row.SoilOM.N",
            "[Row].Fertiliser.NitrogenApplied as Row.FertiliserN",
            "sum([Row].Soil.SoilWater.LeachUrea)+sum([Row].Soil.SoilWater.LeachNO3) as Row.LeachedN",
            "sum([Row].Soil.Nutrient.DenitrifiedN) as Row.DenitrifiedN",
            "[Row].Grapevine.Root.NTakenUp*10.0 as Row.UptakeN",
            "sum([Row].Soil.Nutrient.MineralN) as Row.Mineral_N",
            "",
            "",
            "sum([Alley].Soil.Nutrient.MineralN) as Alley.Mineral_N",
            "[Alley].SurfaceOrganicMatter.N as Alley.SurfaceOM.N",
            "sum([Alley].Soil.Nutrient.FOM.N) as Alley.SoilFOM.N",
            "sum([Alley].Soil.Nutrient.Microbial.N)+sum([Alley].Soil.Nutrient.Humic.C) as Alley.SoilOM.N",
            "[Alley].Fertiliser.NitrogenApplied as Alley.FertiliserN",
            "sum([Alley].Soil.SoilWater.LeachUrea)+sum([Alley].Soil.SoilWater.LeachNO3) as Alley.LeachedN",
            "sum([Alley].Soil.Nutrient.DenitrifiedN) as Alley.DenitrifiedN",
            "[Alley].Slurp.Root.NTakenUp*10.0 as Alley.UptakeN",
            "sum([Alley].Slurp.Arbitrator.N.Fixation)*10.0 as Alley.FixedN"
          ],
          "EventNames": [
            "[Clock].DoReport"
          ],
          "GroupByVariableName": null,
          "Name": "Report",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Report, Models",
          "VariableNames": [
            "[Clock].Today",
            "[Clock].Today.Year",
            "[Clock].Today.DayOfYear",
            "[Weather].DaysSinceWinterSolstice   as DAWS",
            "[PlantVariables].Script.Height \t\tas height",
            "[PlantVariables].Script.LAI         as LAIStrip",
            "[PlantVariables].Script.FRadInt     as f.rad.int",
            "[PlantVariables].Script.ET          as transpiration",
            "[PlantVariables].Script.ES          as Es",
            "[PlantVariables].Script.PET         as PET",
            "[PlantVariables].Script.RootDepth   as rootDepth",
            "",
            "[Soil].OutputLayers.SW",
            "sum([Soil].OutputLayers.SWmm)       as psw",
            "[Weather].Rain",
            "[Irrigation].IrrigationApplied",
            "[Soil].SoilWater.Drainage",
            "[Alley].Slurp.Leaf.Live.N",
            "[Alley].Slurp.Root.NUptake",
            "[Alley].Slurp.Root.NTakenUp"
          ],
          "EventNames": [
            "[Clock].DoReport"
          ],
          "GroupByVariableName": null,
          "Name": "ReportAlley",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Manager, Models",
          "Code": "using Models.Climate;\r\nusing System;\r\nusing Models.Core;\r\nusing Models.PMF;\r\nusing System.Collections.Generic;\r\nusing Models.Soils;\r\nusing APSIM.Shared.Utilities;\r\nusing Models.Zones;\r\nusing Models.PMF.Organs;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        [Link] private Weather weather;\r\n        private RectangularZone AlleyZone {get; set; }\r\n        private RectangularZone RowZone {get; set;}\r\n        private RectangularZone ThisZone {get; set;}\r\n        private double AreaWidth {get; set;}\r\n\r\n        public double FRadInt {get; set;}\r\n        public double ET {get; set;}\r\n        public double ES {get; set;}\r\n        public double PET {get; set;}\r\n        public double LAI {get; set;}\r\n        public double Height {get; set;}\r\n        public double RootDepth {get; set;}\r\n        public double PlantWidth {get; set;}\r\n\r\n        [EventSubscribe(\"StartOfSimulation\")]\r\n        private void DoStartOfSimulation(object sender, EventArgs e)\r\n        {\r\n               \r\n               ThisZone = this.Parent.Parent as RectangularZone;\r\n               RowZone = this.Parent.Parent.Parent.FindInScope(\"Row\") as RectangularZone;\r\n               AlleyZone = (RectangularZone)this.Parent.Parent.Parent.FindInScope(\"Alley\") as RectangularZone;\r\n               AreaWidth = AlleyZone.Width + RowZone.Width;\r\n               PlantWidth = 0;\r\n        }\r\n        \r\n        [EventSubscribe(\"DoReportCalculations\")]\r\n        private void OnDoReportCalculations(object sender, EventArgs e)\r\n        {\r\n            if (ThisZone.Name == \"Row\")\r\n                {\r\n                FRadInt = ((double)RowZone.Get(\"Grapevine.Leaf.RadiationIntercepted\") * RowZone.Width)/(weather.Radn * AreaWidth);\r\n                ET = (double)RowZone.Get(\"Grapevine.Leaf.Transpiration\") * RowZone.Width/AreaWidth;\r\n                LAI = (double)RowZone.Get(\"Grapevine.Leaf.LAI\");\r\n                //LAIPerVine =  LAI*RowZone.Width*1.8;\r\n                //TreeInitialisation.Script.VineDistance;\r\n                //(double)RowZone.Get(\"Grapevine.Leaf.LAI\");\r\n                Height = (double)RowZone.Get(\"Grapevine.Leaf.Height\");\r\n                RootDepth = (double)RowZone.Get(\"Grapevine.Root.Depth\");\r\n                PlantWidth = (double)RowZone.Get(\"Grapevine.Leaf.Width\");\r\n                }\r\n            else\r\n                {\r\n                FRadInt = ((double)AlleyZone.Get(\"Slurp.Leaf.RadiationIntercepted\") * ThisZone.Width)/ (weather.Radn * AreaWidth);\r\n                ET = (double)AlleyZone.Get(\"Slurp.Leaf.Transpiration\") * ThisZone.Width/AreaWidth;\r\n                LAI = (double)AlleyZone.Get(\"Slurp.Leaf.LAI\");\r\n                Height = (double)AlleyZone.Get(\"Slurp.Leaf.Height\");\r\n                RootDepth = (double)AlleyZone.Get(\"Slurp.Root.Depth\");\r\n                }\r\n\r\n            ES = (double)ThisZone.Get(\"Soil.SoilWater.Es\") * ThisZone.Width/AreaWidth;\r\n            double PETWidth = Math.Min(Math.Max(PlantWidth,ThisZone.Width),AreaWidth);\r\n            PET = (double)ThisZone.Get(\"Soil.SoilWater.Eo\") * PETWidth/AreaWidth;\r\n        }\r\n    }\r\n}\r\n",
          "Parameters": [
            {
              "Key": "FRadInt",
              "Value": "0"
            },
            {
              "Key": "ET",
              "Value": "0"
            },
            {
              "Key": "ES",
              "Value": "0"
            },
            {
              "Key": "PET",
              "Value": "0"
            },
            {
              "Key": "LAI",
              "Value": "0"
            },
            {
              "Key": "Height",
              "Value": "0"
            },
            {
              "Key": "RootDepth",
              "Value": "0"
            },
            {
              "Key": "PlantWidth",
              "Value": "0"
            }
          ],
          "Name": "PlantVariables",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Manager, Models",
          "Code": "using Models.Interfaces;\r\nusing System;\r\nusing Models.Core;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\nusing Models.Soils;\r\nusing Models.PMF;\r\nusing Models;\r\nusing System.Xml.Serialization;\r\nusing APSIM.Shared.Utilities;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    public class Script : Model\r\n    {\r\n        [Link] private Zone zone;\r\n        [Link] private Irrigation irrigation;\r\n        [Link] private Soil soil;\r\n        [Link] private Clock clock;\r\n        [Link]\r\n        private IPhysical soilPhysical;\r\n        [Link]\r\n        private ISoilWater waterBalance;\r\n        public double FASW { get; set; }\r\n        public double WaterDeficit  { get; set; } \r\n        \r\n        [Description(\"Irrigation start window (d-mmm)\")]\r\n        public string StartDate { get; set; }\r\n        [Description(\"Irrigation end window (d-mmm)\")]\r\n        public string EndDate { get; set; }\r\n\r\n        [Description(\"Threshold fraction available water (0-1)\")]\r\n        public double FASWThreshold { get; set; }\r\n\r\n        [Description(\"Soil depth (mm) to which fraction available water is calculated\")]\r\n        public double FASWDepth { get; set; }\r\n\r\n        [Description(\"Amount of water (mm) applied each irrigation\")]\r\n        public double Amount { get; set; }\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            CalculateFASW();\r\n            if (DateUtilities.WithinDates(StartDate, clock.Today, EndDate))\r\n            {\r\n                if (FASW < FASWThreshold)\r\n                {\r\n                    irrigation.Apply(Amount, depth: 0);\r\n                }\r\n            }\r\n        }\r\n        \r\n        private void CalculateFASW()\r\n        {\r\n            double[] LL15 = MathUtilities.Multiply(soilPhysical.LL15, soilPhysical.Thickness);\r\n            double[] DUL = MathUtilities.Multiply(soilPhysical.DUL, soilPhysical.Thickness);\r\n        \r\n            int nlayr = GetLayerIndex();\r\n            double cumdep = MathUtilities.Sum(soilPhysical.Thickness, 0, nlayr, 0.0);\r\n\r\n            double excess_fr = MathUtilities.Divide((cumdep - FASWDepth), soilPhysical.Thickness[nlayr], 0.0);\r\n\r\n            // note that results may be strange if swdep < ll15\r\n            double avail_sw = (MathUtilities.Sum(waterBalance.SWmm, 0, nlayr, 0.0)\r\n                              - excess_fr * waterBalance.SWmm[nlayr])\r\n                              - (MathUtilities.Sum(LL15, 0, nlayr, 0.0)\r\n                              - excess_fr * LL15[nlayr]);\r\n\r\n\r\n            double pot_avail_sw = (MathUtilities.Sum(DUL, 0, nlayr, 0.0)\r\n                                  - excess_fr * DUL[nlayr])\r\n                                  - (MathUtilities.Sum(LL15, 0, nlayr, 0.0)\r\n                                  - excess_fr * LL15[nlayr]);\r\n\r\n            FASW = MathUtilities.Divide(avail_sw, pot_avail_sw, 0.0);\r\n            WaterDeficit = MathUtilities.Constrain(pot_avail_sw - avail_sw, 0.0, 100000);\r\n        }\r\n\r\n        private int GetLayerIndex()\r\n        {\r\n            double[] cumThickness = soilPhysical.ThicknessCumulative;\r\n            for (int i = 1; i < cumThickness.Length; i++)\r\n            {\r\n                if (FASWDepth < cumThickness[i])\r\n                    return i - 1;\r\n            }\r\n            \r\n            return cumThickness.Length - 1;\r\n        }\r\n\r\n    }\r\n}\r\n       \r\n",
          "Parameters": [
            {
              "Key": "FASW",
              "Value": "0"
            },
            {
              "Key": "WaterDeficit",
              "Value": "0"
            },
            {
              "Key": "StartDate",
              "Value": "1-nov"
            },
            {
              "Key": "EndDate",
              "Value": "1-mar"
            },
            {
              "Key": "FASWThreshold",
              "Value": "0.8"
            },
            {
              "Key": "FASWDepth",
              "Value": "2000"
            },
            {
              "Key": "Amount",
              "Value": "20"
            }
          ],
          "Name": "AutoIrrigationBasedOnWaterDeficit",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Manager, Models",
          "Code": "using Models.Soils;\r\nusing System;\r\nusing Models.Core;\r\nusing Models.PMF;\r\nusing APSIM.Shared.Utilities;\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        [Link] Clock Clock;\r\n        [Link] Fertiliser Fertiliser;\r\n        \r\n        [Separator(\"A component to apply fertiliser on one or more dates on every year of the simulation\")]\r\n\r\n        [Description(\"Type of fertiliser to apply? \")] \r\n        public Fertiliser.Types FertiliserType { get; set; }\r\n\r\n        [Description(\"Enter the fertilisation dates as dd-mmm with comma separation (any year information entered will be ignored): \")] \r\n        public string[] FertiliserDates { get; set; } \r\n\r\n        [Description(\"Amount of fertiliser to be applied (kg /ha)\")] \r\n        public double Amount { get; set; }\r\n\r\n        [Description(\"Is the above amount to be applied each time? (yes/ticked)? Or is it the total annual amount across all dates (no/unticked)\")] \r\n        public bool AmountType { get; set; }\r\n        \r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            foreach (string ddMMM in FertiliserDates)\r\n            {\r\n                if (DateUtilities.DatesEqual(ddMMM, Clock.Today))\r\n                {\r\n                    if (AmountType)\r\n                        Fertiliser.Apply(Amount: Amount, Type: FertiliserType);\r\n                    else\r\n                        Fertiliser.Apply(Amount: Amount / FertiliserDates.Length, Type: FertiliserType);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
          "Parameters": [
            {
              "Key": "FertiliserType",
              "Value": "NH4NO3N"
            },
            {
              "Key": "FertiliserDates",
              "Value": "10-Nov, 10-Jan"
            },
            {
              "Key": "Amount",
              "Value": "30"
            },
            {
              "Key": "AmountType",
              "Value": "True"
            }
          ],
          "Name": "Fertilise on fixed dates",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Surface.SurfaceOrganicMatter, Models",
          "SurfOM": [],
          "Canopies": [],
          "InitialResidueName": "wheat_stubble",
          "InitialResidueType": "wheat",
          "InitialResidueMass": 0.0,
          "InitialStandingFraction": 0.0,
          "InitialCPR": 0.0,
          "InitialCNR": 100.0,
          "Name": "SurfaceOrganicMatter",
          "ResourceName": "SurfaceOrganicMatter",
          "Children": [
            {
              "$type": "Models.Surface.ResidueTypes, Models",
              "ResidueType": [
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "base_type",
                  "derived_from": null,
                  "fraction_C": 0.4,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 1,
                  "pot_decomp_rate": 0.1,
                  "fr_c": [
                    0.2,
                    0.7,
                    0.1
                  ],
                  "fr_n": [
                    0.2,
                    0.7,
                    0.1
                  ],
                  "fr_p": [
                    0.2,
                    0.7,
                    0.1
                  ]
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "inert",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "manure",
                  "derived_from": "base_type",
                  "fraction_C": 0.08,
                  "po4ppm": 10.0,
                  "nh4ppm": 10.0,
                  "no3ppm": 10.0,
                  "specific_area": 0.0001,
                  "cf_contrib": 1,
                  "pot_decomp_rate": 0.1,
                  "fr_c": [
                    0.3,
                    0.3,
                    0.4
                  ],
                  "fr_n": [
                    0.3,
                    0.3,
                    0.4
                  ],
                  "fr_p": [
                    0.3,
                    0.3,
                    0.4
                  ]
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "RuminantDung_PastureFed",
                  "derived_from": "base_type",
                  "fraction_C": 0.4,
                  "po4ppm": 5.0,
                  "nh4ppm": 1250.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0001,
                  "cf_contrib": 1,
                  "pot_decomp_rate": 0.1,
                  "fr_c": [
                    0.3,
                    0.5,
                    0.2
                  ],
                  "fr_n": [
                    0.3,
                    0.5,
                    0.2
                  ],
                  "fr_p": [
                    0.3,
                    0.5,
                    0.2
                  ]
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "algae",
                  "derived_from": "base_type",
                  "fraction_C": 0.4,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 1,
                  "pot_decomp_rate": 0.1,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "fym",
                  "derived_from": "base_type",
                  "fraction_C": 0.08,
                  "po4ppm": 40.0,
                  "nh4ppm": 10.0,
                  "no3ppm": 10.0,
                  "specific_area": 0.0001,
                  "cf_contrib": 1,
                  "pot_decomp_rate": 0.1,
                  "fr_c": [
                    0.3,
                    0.3,
                    0.4
                  ],
                  "fr_n": [
                    0.3,
                    0.3,
                    0.4
                  ],
                  "fr_p": [
                    0.3,
                    0.3,
                    0.4
                  ]
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "goatmanure",
                  "derived_from": "base_type",
                  "fraction_C": 0.08,
                  "po4ppm": 5.0,
                  "nh4ppm": 1307.0,
                  "no3ppm": 481.0,
                  "specific_area": 0.0001,
                  "cf_contrib": 1,
                  "pot_decomp_rate": 0.1,
                  "fr_c": [
                    0.3,
                    0.6,
                    0.3
                  ],
                  "fr_n": [
                    0.3,
                    0.6,
                    0.3
                  ],
                  "fr_p": [
                    0.3,
                    0.6,
                    0.34
                  ]
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "chickenmanure_base",
                  "derived_from": "base_type",
                  "fraction_C": 0.374,
                  "po4ppm": 5.0,
                  "nh4ppm": 1307.0,
                  "no3ppm": 481.0,
                  "specific_area": 0.0001,
                  "cf_contrib": 1,
                  "pot_decomp_rate": 0.1,
                  "fr_c": [
                    0.0,
                    0.5,
                    0.5
                  ],
                  "fr_n": [
                    0.0,
                    0.5,
                    0.5
                  ],
                  "fr_p": [
                    0.0,
                    0.5,
                    0.5
                  ]
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "cm",
                  "derived_from": "chickenmanure_base",
                  "fraction_C": 0.277,
                  "po4ppm": 0.0,
                  "nh4ppm": 2558.0,
                  "no3ppm": 873.0,
                  "specific_area": 0.0,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "cmA",
                  "derived_from": "chickenmanure_base",
                  "fraction_C": 0.374,
                  "po4ppm": 0.0,
                  "nh4ppm": 1307.0,
                  "no3ppm": 481.0,
                  "specific_area": 0.0,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "cmB",
                  "derived_from": "chickenmanure_base",
                  "fraction_C": 0.24,
                  "po4ppm": 0.0,
                  "nh4ppm": 3009.0,
                  "no3ppm": 36.0,
                  "specific_area": 0.0,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "manB",
                  "derived_from": "base_type",
                  "fraction_C": 0.08,
                  "po4ppm": 5.0,
                  "nh4ppm": 1307.0,
                  "no3ppm": 481.0,
                  "specific_area": 0.0001,
                  "cf_contrib": 1,
                  "pot_decomp_rate": 0.1,
                  "fr_c": [
                    0.1,
                    0.01,
                    0.89
                  ],
                  "fr_n": [
                    0.1,
                    0.01,
                    0.89
                  ],
                  "fr_p": [
                    0.1,
                    0.01,
                    0.89
                  ]
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "tithonia",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "TropicalPasture",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "Bambatsi",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "barley",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "broccoli",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0004,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "butterflypea",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0004,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "camaldulensis",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "canola",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "centro",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0004,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "chickpea",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "chicory",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0003,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "plantainForage",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0003,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "whiteclover",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0003,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "redclover",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0003,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "cowpea",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "danthonia",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "nativepasture",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "pasture",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "gliricidia",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "globulus",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "Eucalyptus",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "fababean",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "fieldpea",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "soybean",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "grass",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0004,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "lablab",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "lentil",
                  "derived_from": "chickpea",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "lucerne",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "lucerne2",
                  "derived_from": "lucerne",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "lupin",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "maize",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0004,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "medic",
                  "derived_from": "lucerne",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "millet",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0004,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "mucuna",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "mungbean",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "horsegram",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "navybean",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "cotton",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "oats",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "orobanche",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "peanut",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "pigeonpea",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "poppies",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "potato",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "fodderbeet",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "kale",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "rice",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "soybean",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "sorghum",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0004,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "stylo",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "sugarcane",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0007,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "sunflower",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "sweetcorn",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0004,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "sweetsorghum",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0004,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "vetch",
                  "derived_from": "fieldpea",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "weed",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0004,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "WF_Millet",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0004,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "wheat",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "wheatsprayed",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0003,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "Grapevine",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "teff",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "oilmallee",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "lolium_rigidum",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "frenchbean",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "oilpalmunderstory",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "raphanus_raphanistrum",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "scrum",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "slurp",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "SimpleFruitTree",
                  "derived_from": "base_type",
                  "fraction_C": 0.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0005,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "oilpalm",
                  "derived_from": "base_type",
                  "fraction_C": 0.44,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0002,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.05,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "oilpalmstem",
                  "derived_from": "base_type",
                  "fraction_C": 0.44,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 5E-06,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": null,
                  "fr_n": null,
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "all_carb",
                  "derived_from": "base_type",
                  "fraction_C": 1.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": [
                    1.0,
                    0.0,
                    0.0
                  ],
                  "fr_n": [
                    1.0,
                    0.0,
                    0.0
                  ],
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "all_cell",
                  "derived_from": "base_type",
                  "fraction_C": 1.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": [
                    0.0,
                    1.0,
                    0.0
                  ],
                  "fr_n": [
                    0.0,
                    1.0,
                    0.0
                  ],
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "all_lign",
                  "derived_from": "base_type",
                  "fraction_C": 1.0,
                  "po4ppm": 0.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0,
                  "cf_contrib": 0,
                  "pot_decomp_rate": 0.0,
                  "fr_c": [
                    0.0,
                    0.0,
                    1.0
                  ],
                  "fr_n": [
                    0.0,
                    0.0,
                    1.0
                  ],
                  "fr_p": null
                },
                {
                  "$type": "Models.Surface.ResidueType, Models",
                  "fom_type": "fyn",
                  "derived_from": "base_type",
                  "fraction_C": 0.08,
                  "po4ppm": 40.0,
                  "nh4ppm": 0.0,
                  "no3ppm": 0.0,
                  "specific_area": 0.0001,
                  "cf_contrib": 1,
                  "pot_decomp_rate": 0.1,
                  "fr_c": [
                    0.3,
                    0.3,
                    0.4
                  ],
                  "fr_n": [
                    0.3,
                    0.3,
                    0.4
                  ],
                  "fr_p": [
                    0.3,
                    0.3,
                    0.4
                  ]
                }
              ],
              "Name": "ResidueTypes",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Manager, Models",
          "Code": "using APSIM.Shared.Utilities;\r\nusing Models.Surface;\r\nusing Models.Utilities;\r\nusing Models.Soils.Nutrients;\r\nusing Models.Soils;\r\nusing Models.PMF;\r\nusing Models.Core;\r\nusing System;\r\nusing Models.Interfaces;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        [Link] private Clock Clock;\r\n        [Link] private Plant Wheat;\r\n        [Link] private ISoilWater SoilWater;\r\n        [Link] private Nutrient nitrogen;\r\n        [Link] private SurfaceOrganicMatter SOM;\r\n        [Link] private Summary Summary;\r\n\r\n        [Description(\"Date to reset on:\")]\r\n        public string ResetDate {get;set;}\r\n\r\n        [Description(\"Reset Water? (Yes or No)\")]\r\n        public string ResetWater {get;set;}\r\n\r\n        [Description(\"Reset Soil Nutrients ? (Yes or No)\")]\r\n        public string ResetNutrients {get;set;}\r\n\r\n        [Description(\"Reset Surface Organic Matter? (Yes or No)\")]\r\n        public string ResetSOM {get;set;}\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            if (DateUtilities.WithinDates(ResetDate, Clock.Today, ResetDate))\r\n            {\r\n                if (ResetWater == \"Yes\")\r\n                {\r\n                    Summary.WriteMessage(this, \"Reset Water\", MessageType.Diagnostic);\r\n                    SoilWater.Reset();\r\n                }\r\n               \r\n                 if (ResetNutrients == \"Yes\")\r\n                {\r\n                    Summary.WriteMessage(this, \"Reset Nitrogen\", MessageType.Diagnostic);\r\n                    nitrogen.Reset();\r\n                }\r\n\r\n                if (ResetSOM == \"Yes\")\r\n                {\r\n                    Summary.WriteMessage(this, \"Reset Surface OM\", MessageType.Diagnostic);\r\n                    SOM.Reset();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
          "Parameters": [
            {
              "Key": "ResetDate",
              "Value": "10-Jul"
            },
            {
              "Key": "ResetWater",
              "Value": "Yes"
            },
            {
              "Key": "ResetNutrients",
              "Value": "Yes"
            },
            {
              "Key": "ResetSOM",
              "Value": "Yes"
            }
          ],
          "Name": "Reset on date",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Manager, Models",
          "Code": "using Models.Soils;\r\nusing System;\r\nusing Models.Core;\r\nusing Models.PMF;\r\nusing Models.Soils.Nutrients;\r\nusing APSIM.Shared.Utilities;\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        [Link] Clock Clock;\r\n        [Link] Fertiliser Fertiliser;\r\n        [Link] private SoilNitrogenNO3 SoilNitrogenNO3;\r\n\r\n        [Description(\"Type of fertiliser to apply? \")] \r\n        public Fertiliser.Types FertiliserType { get; set; }\r\n    \r\n        [Description(\"Threshold amount of NO3 to topup to (kg/ha)\")]\r\n        public double Threshold { get; set;}\r\n        \r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            double Amount = Threshold - MathUtilities.Sum(SoilNitrogenNO3.kgha);\r\n            Fertiliser.Apply(Amount: Amount, Type: FertiliserType);\r\n        }\r\n    }\r\n}\r\n",
          "Parameters": [
            {
              "Key": "FertiliserType",
              "Value": "NH4NO3N"
            },
            {
              "Key": "Threshold",
              "Value": "50"
            }
          ],
          "Name": "Fertilise topup",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Storage.DataStore, Models",
      "useFirebird": false,
      "CustomFileName": null,
      "Name": "DataStore",
      "ResourceName": null,
      "Children": [],
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Core.Simulation, Models",
      "Descriptors": null,
      "Name": "Vineyard",
      "ResourceName": null,
      "Children": [
        {
          "$type": "Models.Climate.Weather, Models",
          "ConstantsFile": null,
          "FileName": "%root%/Examples/WeatherFiles/Site1003_SEA.met",
          "ExcelWorkSheetName": "",
          "Name": "Weather",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Clock, Models",
          "Start": "2005-02-25T00:00:00",
          "End": "2020-05-01T00:00:00",
          "Name": "Clock",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Summary, Models",
          "Verbosity": 100,
          "Name": "Summary",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
          "Name": "Soil Arbitrator",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.MicroClimate, Models",
          "a_interception": 0.0,
          "b_interception": 1.0,
          "c_interception": 0.0,
          "d_interception": 0.0,
          "SoilHeatFluxFraction": 0.4,
          "MinimumHeightDiffForNewLayer": 0.0,
          "NightInterceptionFraction": 0.5,
          "ReferenceHeight": 2.0,
          "Name": "MicroClimate",
          "ResourceName": null,
          "Children": [],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Zones.RectangularZone, Models",
          "Length": 100.0,
          "Width": 0.9,
          "Slope": 0.0,
          "AspectAngle": 0.0,
          "Altitude": 50.0,
          "Name": "Row",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Memo, Models",
              "Text": "Double GuyÃ´t-trained vines, pruned each year to retain 24 nodes were monitored. Vines were trained using vertical shoot positioning (VSP), with an exposed leaf area height of 1.2 m, and trimmed to maintain a compact canopy. Vines were planted 1.8 m apart within the row, and 2.4 m apart between rows. Average flowering date was determined by monitoring all the inflorescences on one cane on a vine in each plot on a regular basis throughout flowering. Likewise, regular berry samples (at least weekly) were taken from before the date of vÃ©raison until harvest at a soluble solids concentration value of 21.5 oBrix. ",
              "Name": "Memo",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "Name": "Grapevine",
              "ResourceName": "Grapevine",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Fertiliser, Models",
              "Name": "Fertiliser",
              "ResourceName": "Fertiliser",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Surface.SurfaceOrganicMatter, Models",
              "SurfOM": [],
              "Canopies": [],
              "InitialResidueName": "wheat_stubble",
              "InitialResidueType": "wheat",
              "InitialResidueMass": 10.0,
              "InitialStandingFraction": 0.0,
              "InitialCPR": 0.0,
              "InitialCNR": 30.0,
              "Name": "SurfaceOrganicMatter",
              "ResourceName": "SurfaceOrganicMatter",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Irrigation, Models",
              "Name": "Irrigation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Soils.Soil, Models",
              "RecordNumber": 0,
              "ASCOrder": null,
              "ASCSubOrder": null,
              "SoilType": null,
              "LocalName": null,
              "Site": null,
              "NearestTown": null,
              "Region": null,
              "State": null,
              "Country": null,
              "NaturalVegetation": null,
              "ApsoilNumber": null,
              "Latitude": 0.0,
              "Longitude": 0.0,
              "LocationAccuracy": null,
              "YearOfSampling": null,
              "DataSource": null,
              "Comments": null,
              "Name": "Soil",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Soils.LayerStructure, Models",
                  "Thickness": [
                    200.0,
                    200.0,
                    200.0,
                    200.0,
                    200.0,
                    200.0,
                    400.0,
                    400.0,
                    400.0,
                    600.0
                  ],
                  "Name": "LayerStructure",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Physical, Models",
                  "Thickness": [
                    200.0,
                    250.0,
                    300.0,
                    150.0,
                    150.0,
                    1950.0
                  ],
                  "ParticleSizeClay": null,
                  "ParticleSizeSand": null,
                  "ParticleSizeSilt": null,
                  "Rocks": null,
                  "Texture": null,
                  "BD": [
                    1.35,
                    1.35,
                    1.4,
                    1.4,
                    1.4,
                    1.59
                  ],
                  "AirDry": [
                    0.1,
                    0.1,
                    0.15,
                    0.13,
                    0.1,
                    0.06
                  ],
                  "LL15": [
                    0.2,
                    0.2,
                    0.15,
                    0.13,
                    0.1,
                    0.06
                  ],
                  "DUL": [
                    0.35,
                    0.35,
                    0.35,
                    0.33,
                    0.28,
                    0.1
                  ],
                  "SAT": [
                    0.45,
                    0.45,
                    0.4,
                    0.35,
                    0.35,
                    0.3
                  ],
                  "KS": null,
                  "BDMetadata": null,
                  "AirDryMetadata": null,
                  "LL15Metadata": null,
                  "DULMetadata": null,
                  "SATMetadata": null,
                  "KSMetadata": null,
                  "RocksMetadata": null,
                  "TextureMetadata": null,
                  "ParticleSizeSandMetadata": null,
                  "ParticleSizeSiltMetadata": null,
                  "ParticleSizeClayMetadata": null,
                  "Name": "Physical",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.2,
                        0.2,
                        0.15,
                        0.13,
                        0.1,
                        0.06
                      ],
                      "KL": [
                        0.25,
                        0.1,
                        0.08,
                        0.05,
                        0.05,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "GrapevineSoil",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.2,
                        0.2,
                        0.15,
                        0.13,
                        0.1,
                        0.06
                      ],
                      "KL": [
                        0.11,
                        0.11,
                        0.02,
                        0.0,
                        0.0,
                        0.0
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "SlurpSoil",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.WaterModel.WaterBalance, Models",
                  "SummerDate": "1-Nov",
                  "SummerU": 4.0,
                  "SummerCona": 1.0,
                  "WinterDate": "1-Apr",
                  "WinterU": 4.0,
                  "WinterCona": 1.0,
                  "DiffusConst": 88.0,
                  "DiffusSlope": 35.4,
                  "Salb": 0.18,
                  "CN2Bare": 68.0,
                  "CNRed": 20.0,
                  "CNCov": 0.8,
                  "DischargeWidth": 0.0,
                  "CatchmentArea": 0.0,
                  "PSIDul": -100.0,
                  "Thickness": [
                    150.0,
                    150.0,
                    100.0,
                    200.0,
                    200.0,
                    200.0,
                    200.0,
                    200.0,
                    200.0,
                    200.0,
                    200.0,
                    200.0,
                    400.0,
                    400.0
                  ],
                  "SWCON": [
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55
                  ],
                  "KLAT": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "Name": "SoilWater",
                  "ResourceName": "WaterBalance",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Organic, Models",
                  "FOMCNRatio": 30.0,
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "Carbon": [
                    1.82,
                    1.47,
                    1.2,
                    1.03,
                    0.47,
                    0.47
                  ],
                  "CarbonUnits": 0,
                  "SoilCNRatio": [
                    11.5,
                    11.5,
                    11.5,
                    11.5,
                    11.5,
                    11.5
                  ],
                  "FBiom": [
                    0.025,
                    0.025,
                    0.015,
                    0.01,
                    0.01,
                    0.01
                  ],
                  "FInert": [
                    0.3,
                    0.4,
                    0.75,
                    0.9,
                    0.96,
                    0.96
                  ],
                  "FOM": [
                    1243.9310541346904,
                    833.8319214727269,
                    457.61666105087295,
                    251.1453484552152,
                    137.83148958311097,
                    75.64352530338392
                  ],
                  "CarbonMetadata": null,
                  "FOMMetadata": null,
                  "Name": "Organic",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Chemical, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "PH": [
                    6.6,
                    6.2,
                    5.7,
                    5.5,
                    5.5,
                    5.5
                  ],
                  "PHUnits": 0,
                  "EC": null,
                  "ESP": null,
                  "CEC": null,
                  "ECMetadata": null,
                  "CLMetadata": null,
                  "ESPMetadata": null,
                  "PHMetadata": null,
                  "Name": "Chemical",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.CERESSoilTemperature, Models",
                  "Name": "Temperature",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Water, Models",
                  "Thickness": [
                    200.0,
                    250.0,
                    300.0,
                    150.0,
                    150.0,
                    1950.0
                  ],
                  "InitialValues": [
                    0.35,
                    0.35,
                    0.35,
                    0.33,
                    0.28,
                    0.1
                  ],
                  "InitialPAWmm": 262.5,
                  "RelativeTo": "LL15",
                  "FilledFromTop": true,
                  "Name": "Water",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.OutputLayers, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    150.0,
                    150.0,
                    150.0,
                    150.0,
                    150.0
                  ],
                  "Name": "OutputLayers",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Nutrients.Nutrient, Models",
                  "Name": "Nutrient",
                  "ResourceName": "Nutrient",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    3.0,
                    2.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "Name": "NO3",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    3.0,
                    1.5,
                    1.2,
                    1.1,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "Name": "NH4",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 1,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "Name": "Urea",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using Models.Soils;\r\nusing Models.Functions;\r\nusing APSIM.Shared.Utilities;\r\nusing System.Xml.Serialization;\r\nusing Models;\r\nusing Models.PMF;\r\nusing System.Text;\r\nusing System.Collections.Generic;\r\nusing Models.Core;\r\nusing System;\r\nusing Models.PMF.Organs;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    public class Script : Model\r\n    {\r\n        [Link] private Plant Grapevine;\r\n        [Link] private Clock Clock;\r\n        [Link] private Zone zone;\r\n        [Link(Type = LinkType.Path, Path = \"[Grapevine].Root\")]\r\n        private Root root;\r\n\r\n        [Description(\"Use extra root zone\")]\r\n        public bool UseExtraZone { get; set; }\r\n\r\n        \r\n        [EventSubscribe(\"StartOfSimulation\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\r\n            if (UseExtraZone)\r\n            {\r\n            root.ZoneNamesToGrowRootsIn.Add(\"Alley\");\r\n            root.ZoneRootDepths.Add(2600);\r\n            NutrientPoolFunctions InitialDM = new NutrientPoolFunctions();\r\n            Constant InitStruct = new Constant();\r\n            InitStruct.FixedValue = 10;\r\n            InitialDM.Structural = InitStruct;\r\n            Constant InitMetab = new Constant();\r\n            InitMetab.FixedValue = 0;\r\n            InitialDM.Metabolic = InitMetab;\r\n            Constant InitStor = new Constant();\r\n            InitStor.FixedValue = 0;\r\n            InitialDM.Storage = InitStor;\r\n            root.ZoneInitialDM.Add(InitialDM);\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n       \r\n\r\n",
              "Parameters": [
                {
                  "Key": "UseExtraZone",
                  "Value": "True"
                }
              ],
              "Name": "SetupTreeRootZones",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using Models.Climate;\r\nusing System;\r\nusing Models.Core;\r\nusing Models.PMF;\r\nusing System.Collections.Generic;\r\nusing Models.Soils;\r\nusing APSIM.Shared.Utilities;\r\nusing Models.Zones;\r\nusing Models.PMF.Organs;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        [Link] private Weather weather;\r\n        [Link(Type = LinkType.Path, Path = \"[Grapevine].Root\")]\r\n        private Root root;\r\n        private RectangularZone AlleyZone {get; set; }\r\n        private RectangularZone RowZone {get; set;}\r\n        private RectangularZone ThisZone {get; set;}\r\n        private double AreaWidth {get; set;}\r\n\r\n        public double FRadInt {get; set;}\r\n        public double ET {get; set;}\r\n        public double ES {get; set;}\r\n        public double PET {get; set;}\r\n        public double LAI {get; set;}\r\n        public double Height {get; set;}\r\n        public double RootDepth {get; set;}\r\n        public double PlantWidth {get; set;}\r\n\r\n        [EventSubscribe(\"StartOfSimulation\")]\r\n        private void DoStartOfSimulation(object sender, EventArgs e)\r\n        {\r\n               \r\n               ThisZone = this.Parent.Parent as RectangularZone;\r\n               RowZone = this.Parent.Parent.Parent.FindInScope(\"Row\") as RectangularZone;\r\n               AlleyZone = (RectangularZone)this.Parent.Parent.Parent.FindInScope(\"Alley\") as RectangularZone;\r\n               AreaWidth = AlleyZone.Width + RowZone.Width;\r\n               PlantWidth = 0;\r\n        }\r\n        \r\n        [EventSubscribe(\"DoReportCalculations\")]\r\n        private void OnDoReportCalculations(object sender, EventArgs e)\r\n        {\r\n            if (ThisZone.Name == \"Row\")\r\n                {\r\n                FRadInt = ((double)RowZone.Get(\"Grapevine.Leaf.RadiationIntercepted\") * RowZone.Width)/(weather.Radn * AreaWidth);\r\n                ET = (double)RowZone.Get(\"Grapevine.Leaf.Transpiration\") * RowZone.Width/AreaWidth;\r\n                LAI = (double)RowZone.Get(\"Grapevine.Leaf.LAI\");\r\n                //LAIPerVine =  LAI*RowZone.Width*1.8;\r\n                //TreeInitialisation.Script.VineDistance;\r\n                //(double)RowZone.Get(\"Grapevine.Leaf.LAI\");\r\n                Height = (double)RowZone.Get(\"Grapevine.Leaf.Height\");\r\n                RootDepth = (double)RowZone.Get(\"Grapevine.Root.Depth\");\r\n                PlantWidth = (double)RowZone.Get(\"Grapevine.Leaf.Width\");\r\n                }\r\n            else\r\n                {\r\n                FRadInt = ((double)AlleyZone.Get(\"Slurp.Leaf.RadiationIntercepted\") * ThisZone.Width)/ (weather.Radn * AreaWidth);\r\n                ET = (double)AlleyZone.Get(\"Slurp.Leaf.Transpiration\") * ThisZone.Width/AreaWidth;\r\n                LAI = (double)AlleyZone.Get(\"Slurp.Leaf.LAI\");\r\n                Height = (double)AlleyZone.Get(\"Slurp.Leaf.Height\");\r\n                RootDepth = (double)AlleyZone.Get(\"Slurp.Root.Depth\");\r\n                }\r\n\r\n            ES = (double)ThisZone.Get(\"Soil.SoilWater.Es\") * ThisZone.Width/AreaWidth;\r\n            double PETWidth = Math.Min(Math.Max(PlantWidth,ThisZone.Width),AreaWidth);\r\n            PET = (double)ThisZone.Get(\"Soil.SoilWater.Eo\") * PETWidth/AreaWidth;\r\n        }\r\n    }\r\n}\r\n",
              "Parameters": [],
              "Name": "PlantVariables",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using Models.Climate;\r\nusing System;\r\nusing Models.Core;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\nusing Models.Soils;\r\nusing Models.PMF;\r\nusing Models;\r\nusing System.Xml.Serialization;\r\nusing APSIM.Shared.Utilities;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    public class Script : Model\r\n    {\r\n       [Link] Irrigation irrigation;\r\n       [Link] Clock Clock;\r\n       [Link] Fertiliser Fertiliser;\r\n       [Link] Summary Summary;\r\n       [Link] Weather weather;\r\n\r\n        [Description(\"Fertilize_DAWS\")]\r\n         public int FertilizeDAWS { get; set; }\r\n        [Description(\"Amount of fertiliser to be applied\")]\r\n        public double Amount { get; set; }\r\n\r\n       [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n          if (weather.DaysSinceWinterSolstice == FertilizeDAWS)\r\n           Fertiliser.Apply(Amount: Amount, Type: Fertiliser.Types.NO3N);\r\n        }\r\n\r\n\r\n       public void applyDripIrri(double amount)\r\n        {\r\n            double layerAmount = amount/4;\r\n            irrigation.Apply(layerAmount, 0);\r\n            irrigation.Apply(layerAmount*2, 220);\r\n            irrigation.Apply(layerAmount, 420);\r\n\r\n        }\r\n        public double totalIrrigation {get; set;}\r\n        [EventSubscribe(\"Irrigated\")]\r\n        private void OnIrrigated(object sender, \r\n        IrrigationApplicationType irrigData)\r\n        {\r\n            totalIrrigation += irrigData.Amount;\r\n         }\r\n    }\r\n}\r\n       \r\n",
              "Parameters": [
                {
                  "Key": "FertilizeDAWS",
                  "Value": "100"
                },
                {
                  "Key": "Amount",
                  "Value": "30"
                }
              ],
              "Name": "DripIrrigator",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using Models.PMF.Interfaces;\r\nusing Newtonsoft.Json;\r\nusing Models.PMF.Struct;\r\nusing Models.Climate;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing Models.Core;\r\nusing Models.PMF;\r\nusing Models.PMF.Interfaces;\r\nusing System.Xml.Serialization;\r\nusing Models.PMF.Organs;\r\nusing Models.PMF.Phen;\r\nusing Models.Soils;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    [System.Xml.Serialization.XmlInclude(typeof(Model))]\r\n    public class Script : Model\r\n    {\r\n        [Link] private Plant Grapevine;\r\n        [Link] private Clock Clock;\r\n        [Link] private Zone zone;\r\n        [Link] private Weather weather;\r\n        [Link]\r\n        private Root root;\r\n        [Link(Type = LinkType.Path, Path = \"[Grapevine].Structure\")]\r\n        private Structure structure;\r\n        [Link(Type = LinkType.Path, Path = \"[Grapevine].Phenology\")]\r\n        private Phenology phenology;\r\n       \n       \tpublic event EventHandler LeafPlucking;\n       \tpublic event EventHandler Pruning;\n       \r\n        [Description(\"SummerPruning_DAWS\")]         \r\n        public int LeafPluckingDAWS { get; set; }  //day\r\n\r\n        [Description(\"Harvest_DAWS\")]\r\n        public int HarvestDAWS { get; set; }\r\n\r\n        [Description(\"Pruning_DAWS\")]         \r\n        public int PruningDAWS { get; set; }  //day\r\n\r\n        [Description(\"Frost Date 1\")]\r\n        public DateTime FrostDate1 { get; set; }\r\n        [Description(\"Frost Date 2\")]\r\n        public DateTime FrostDate2 { get; set; }\r\n\r\n\r\n        [EventSubscribe(\"StartOfSimulation\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\n        }\r\n        \r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n             var Leaf = Grapevine.FindChild<IHasDamageableBiomass>(\"Leaf\");\r\n             var Shoot = Grapevine.FindChild<IHasDamageableBiomass>(\"Shoot\");\r\n             var Cane = Grapevine.FindChild<IHasDamageableBiomass>(\"Cane\");\r\n             var Trunk = Grapevine.FindChild<IHasDamageableBiomass>(\"Trunk\");\r\n             var Root = Grapevine.FindChild<IHasDamageableBiomass>(\"Root\");\r\n             var StructuralRoot = Grapevine.FindChild<IHasDamageableBiomass>(\"StructuralRoot\");\r\n             var Berry = Grapevine.FindChild<IHasDamageableBiomass>(\"Berry\");\r\n             \n             //Set up  array of remove fractions to send with Cut method.  Each member in the array corresponds to an organ in the same order they are set up in.\r\n             //PruneDate = DateTime.Parse(PruneDateString);\r\n             if (weather.DaysSinceWinterSolstice == LeafPluckingDAWS && phenology.Stage >= 3)\r\n             {\r\n                    \r\n                //int LeafTipsAppeared = (int)structure.LeafTipsAppeared;\r\n                //int NodesToRemove = (int)Math.Max(LeafTipsAppeared - TargetLeafRank, 1); \r\n                double FractionToRemove = 0.3; //1- TargetLeafRank/LeafTipsAppeared;\r\n            \r\n               // Remove_1.NodesToRemove = NodesToRemove;\r\n                LeafPlucking?.Invoke(this, EventArgs.Empty);\r\n        \t\tLeaf.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: FractionToRemove, deadToResidue: 0.0);\r\n                Shoot.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: FractionToRemove, deadToResidue: 0.0);\r\n                Cane.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 0, deadToResidue: 0.0);\r\n                Trunk.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 0, deadToResidue: 0.0);\r\n                Root.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 0, deadToResidue: 0.0);\r\n                StructuralRoot.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 0.0, deadToResidue: 0.0);\r\n                Berry.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 0, deadToResidue: 0.0);\r\n\t\t\t\t\r\n             }\r\n\r\n           if (weather.DaysSinceWinterSolstice == HarvestDAWS && phenology.Stage >= 3)\r\n           {\r\n               LeafPlucking?.Invoke(this, EventArgs.Empty);\r\n        \t   Leaf.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 0.2, deadToResidue: 0.0);\r\n               Shoot.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 0, deadToResidue: 0.0);\r\n               Cane.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 0, deadToResidue: 0.0);\r\n               Trunk.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 0, deadToResidue: 0.0);\r\n               Root.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 0, deadToResidue: 0.0);\r\n               StructuralRoot.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 0.0, deadToResidue: 0.0);\r\n               Berry.RemoveBiomass(liveToRemove: 1, deadToRemove: 0.0, liveToResidue: 0, deadToResidue: 0.0);\n           }\r\n                                   \r\n           if (weather.DaysSinceWinterSolstice == PruningDAWS&& phenology.Stage >= 3)\r\n           {\r\n               Grapevine.Phenology?.SetToStage(1);\r\n               Pruning?.Invoke(this, EventArgs.Empty);\n               Leaf.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 1.0, deadToResidue: 0.0);\r\n               Shoot.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 1.0, deadToResidue: 0.0);\r\n               Cane.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 1.0, deadToResidue: 0.0);\r\n               Trunk.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 0, deadToResidue: 0.0);\r\n               Root.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 0, deadToResidue: 0.0);\r\n               StructuralRoot.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 0.0, deadToResidue: 0.0);\r\n               Berry.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 1.0, deadToResidue: 0.0);\r\n\r\n               double caneBiomass = 96.9; //g/m2 reset the cane biomass to the original value \r\n               double caneNSC = caneBiomass * 0.18;\r\n\r\n               zone.Set(\"[Grapevine].Cane.Live.StorageWt\", caneNSC);                \r\n               zone.Set(\"[Grapevine].Cane.Live.StructuralWt\", caneBiomass - caneNSC); \r\n\r\n                //zone.Set(\"[Grapevine].Trunk.Live.StructuralWt\", 280);     \r\n               // zone.Set(\"[Grapevine].Trunk.Live.StorageWt\", 70);     \r\n\r\n               // zone.Set(\"[Grapevine].Root.Live.StructuralWt\", 1531);     \r\n               // zone.Set(\"[Grapevine].Root.Live.StorageWt\",  349);     \r\n\r\n            }\r\n           if (Clock.Today.Date == FrostDate1)      \r\n           {\n              LeafPlucking?.Invoke(this, EventArgs.Empty);\r\n        \t  Leaf.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 0.2, deadToResidue: 0.0);\r\n              zone.Set(\"[Grapevine].Structure.FinalLeafNumber.FixedValue\", 28); \r\n           }  \r\n\r\n           if (Clock.Today.Date == FrostDate2)      \r\n           {\r\n              LeafPlucking?.Invoke(this, EventArgs.Empty);\r\n        \t  Leaf.RemoveBiomass(liveToRemove: 0, deadToRemove: 0.0, liveToResidue: 0.2, deadToResidue: 0.0);\r\n           }  \r\n\r\n        }\r\n    }\r\n}\r\n            \r\n                \r\n",
              "Parameters": [
                {
                  "Key": "LeafPluckingDAWS",
                  "Value": "205"
                },
                {
                  "Key": "HarvestDAWS",
                  "Value": "290"
                },
                {
                  "Key": "PruningDAWS",
                  "Value": "314"
                },
                {
                  "Key": "FrostDate1",
                  "Value": "10/03/2002 00:00:00"
                },
                {
                  "Key": "FrostDate2",
                  "Value": "11/18/2002 00:00:00"
                }
              ],
              "Name": "HarvestNPruning",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using Models.Interfaces;\r\nusing System;\r\nusing Models.Core;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\nusing Models.Soils;\r\nusing Models.PMF;\r\nusing Models;\r\nusing System.Xml.Serialization;\r\nusing APSIM.Shared.Utilities;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    public class Script : Model\r\n    {\r\n        [Link] private Zone zone;\r\n        [Link] private Irrigation irrigation;\r\n        [Link] private Soil soil;\r\n        [Link] private Clock clock;\r\n        [Link]\r\n        private IPhysical soilPhysical;\r\n        [Link]\r\n        private ISoilWater waterBalance;\r\n        public double FASW { get; set; }\r\n        public double WaterDeficit  { get; set; } \r\n        \r\n        [Description(\"Irrigation start window (d-mmm)\")]\r\n        public string StartDate { get; set; }\r\n        [Description(\"Irrigation end window (d-mmm)\")]\r\n        public string EndDate { get; set; }\r\n\r\n        [Description(\"Threshold fraction available water (0-1)\")]\r\n        public double FASWThreshold { get; set; }\r\n\r\n        [Description(\"Soil depth (mm) to which fraction available water is calculated\")]\r\n        public double FASWDepth { get; set; }\r\n\r\n        [Description(\"Amount of water (mm) applied each irrigation\")]\r\n        public double Amount { get; set; }\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            CalculateFASW();\r\n            if (DateUtilities.WithinDates(StartDate, clock.Today, EndDate))\r\n            {\r\n                if (FASW < FASWThreshold)\r\n                {\r\n                    irrigation.Apply(Amount, depth: 0);\r\n                }\r\n            }\r\n        }\r\n        \r\n        private void CalculateFASW()\r\n        {\r\n            double[] LL15 = MathUtilities.Multiply(soilPhysical.LL15, soilPhysical.Thickness);\r\n            double[] DUL = MathUtilities.Multiply(soilPhysical.DUL, soilPhysical.Thickness);\r\n        \r\n            int nlayr = GetLayerIndex();\r\n            double cumdep = MathUtilities.Sum(soilPhysical.Thickness, 0, nlayr, 0.0);\r\n\r\n            double excess_fr = MathUtilities.Divide((cumdep - FASWDepth), soilPhysical.Thickness[nlayr], 0.0);\r\n\r\n            // note that results may be strange if swdep < ll15\r\n            double avail_sw = (MathUtilities.Sum(waterBalance.SWmm, 0, nlayr, 0.0)\r\n                              - excess_fr * waterBalance.SWmm[nlayr])\r\n                              - (MathUtilities.Sum(LL15, 0, nlayr, 0.0)\r\n                              - excess_fr * LL15[nlayr]);\r\n\r\n\r\n            double pot_avail_sw = (MathUtilities.Sum(DUL, 0, nlayr, 0.0)\r\n                                  - excess_fr * DUL[nlayr])\r\n                                  - (MathUtilities.Sum(LL15, 0, nlayr, 0.0)\r\n                                  - excess_fr * LL15[nlayr]);\r\n\r\n            FASW = MathUtilities.Divide(avail_sw, pot_avail_sw, 0.0);\r\n            WaterDeficit = MathUtilities.Constrain(pot_avail_sw - avail_sw, 0.0, 100000);\r\n        }\r\n\r\n        private int GetLayerIndex()\r\n        {\r\n            double[] cumThickness = soilPhysical.ThicknessCumulative;\r\n            for (int i = 1; i < cumThickness.Length; i++)\r\n            {\r\n                if (FASWDepth < cumThickness[i])\r\n                    return i - 1;\r\n            }\r\n            \r\n            return cumThickness.Length - 1;\r\n        }\r\n\r\n    }\r\n}\r\n       \r\n",
              "Parameters": [
                {
                  "Key": "StartDate",
                  "Value": "1-nov"
                },
                {
                  "Key": "EndDate",
                  "Value": "1-mar"
                },
                {
                  "Key": "FASWThreshold",
                  "Value": "0.6"
                },
                {
                  "Key": "FASWDepth",
                  "Value": "1500"
                },
                {
                  "Key": "Amount",
                  "Value": "20"
                }
              ],
              "Name": "AutoIrrigationBasedOnWaterDeficit",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using Models.Soils;\r\nusing System;\r\nusing Models.Core;\r\nusing Models.PMF;\r\nusing APSIM.Shared.Utilities;\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        [Link] Clock Clock;\r\n        [Link] Fertiliser Fertiliser;\r\n        \r\n        [Separator(\"A component to apply fertiliser on one or more dates on every year of the simulation\")]\r\n\r\n        [Description(\"Type of fertiliser to apply? \")] \r\n        public Fertiliser.Types FertiliserType { get; set; }\r\n\r\n        [Description(\"Enter the fertilisation dates as dd-mmm with comma separation (any year information entered will be ignored): \")] \r\n        public string[] FertiliserDates { get; set; } \r\n\r\n        [Description(\"Amount of fertiliser to be applied (kg /ha)\")] \r\n        public double Amount { get; set; }\r\n\r\n        [Description(\"Is the above amount to be applied each time? (yes/ticked)? Or is it the total annual amount across all dates (no/unticked)\")] \r\n        public bool AmountType { get; set; }\r\n        \r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            foreach (string ddMMM in FertiliserDates)\r\n            {\r\n                if (DateUtilities.DatesEqual(ddMMM, Clock.Today))\r\n                {\r\n                    if (AmountType)\r\n                        Fertiliser.Apply(Amount: Amount, Type: FertiliserType);\r\n                    else\r\n                        Fertiliser.Apply(Amount: Amount / FertiliserDates.Length, Type: FertiliserType);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
              "Parameters": [
                {
                  "Key": "FertiliserType",
                  "Value": "NH4NO3N"
                },
                {
                  "Key": "FertiliserDates",
                  "Value": "1-Nov, 1-Feb"
                },
                {
                  "Key": "Amount",
                  "Value": "15"
                },
                {
                  "Key": "AmountType",
                  "Value": "True"
                }
              ],
              "Name": "Fertilise on fixed dates",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using APSIM.Shared.Utilities;\r\nusing Models.Surface;\r\nusing Models.Utilities;\r\nusing Models.Soils.Nutrients;\r\nusing Models.Soils;\r\nusing Models.PMF;\r\nusing Models.Core;\r\nusing System;\r\nusing Models.Interfaces;\nusing System.Diagnostics;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        [Link] private Clock Clock;\r\n        [Link] private Plant Wheat;\r\n        [Link] private ISoilWater SoilWater;\r\n        [Link] private Nutrient nitrogen;\r\n        [Link] private SurfaceOrganicMatter SOM;\r\n        [Link] private Summary Summary;\r\n\r\n        [Description(\"Date to reset on:\")]\r\n        public string ResetDate {get;set;}\r\n\r\n        [Description(\"Reset Water? (Yes or No)\")]\r\n        public string ResetWater {get;set;}\r\n\r\n        [Description(\"Reset Soil Nutrients ? (Yes or No)\")]\r\n        public string ResetNutrients {get;set;}\r\n\r\n        [Description(\"Reset Surface Organic Matter? (Yes or No)\")]\r\n        public string ResetSOM {get;set;}\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\n        \tDebugger.Break();\r\n            if (DateUtilities.WithinDates(ResetDate, Clock.Today, ResetDate))\r\n            {\r\n                if (ResetWater == \"Yes\")\r\n                {\r\n                    Summary.WriteMessage(this, \"Reset Water\", MessageType.Diagnostic);\r\n                    SoilWater.Reset();\r\n                }\r\n               \r\n                 if (ResetNutrients == \"Yes\")\r\n                {\r\n                    Summary.WriteMessage(this, \"Reset Nitrogen\", MessageType.Diagnostic);\r\n                    nitrogen.Reset();\r\n                }\r\n\r\n                if (ResetSOM == \"Yes\")\r\n                {\r\n                    Summary.WriteMessage(this, \"Reset Surface OM\", MessageType.Diagnostic);\r\n                    SOM.Reset();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
              "Parameters": [
                {
                  "Key": "ResetDate",
                  "Value": "10-Jul"
                },
                {
                  "Key": "ResetWater",
                  "Value": "Yes"
                },
                {
                  "Key": "ResetNutrients",
                  "Value": "Yes"
                },
                {
                  "Key": "ResetSOM",
                  "Value": "Yes"
                }
              ],
              "Name": "Reset on date",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Report, Models",
              "VariableNames": [
                "[Clock].Today",
                "[Clock].Today.Year",
                "[Clock].Today.DayOfYear",
                "[Weather].DaysSinceWinterSolstice   as DAWS",
                "[PlantVariables].Script.Height \t\tas height",
                "[PlantVariables].Script.LAI         as lai",
                "[PlantVariables].Script.FRadInt     as f.rad.int",
                "[PlantVariables].Script.ET          as transpiration",
                "[PlantVariables].Script.ES          as Es",
                "[PlantVariables].Script.PET         as PET",
                "[PlantVariables].Script.RootDepth   as rootDepth",
                "",
                "[Soil].OutputLayers.SW",
                "sum([Soil].OutputLayers.SWmm)       as psw",
                "[Weather].Rain",
                "[Irrigation].IrrigationApplied",
                "[Soil].SoilWater.Drainage",
                "",
                "[Grapevine].Phenology.CurrentSeason as CurrentSeason",
                "[Grapevine].Phenology.Stage",
                "[Grapevine].Phenology.AccumulatedEmergedTT",
                "[Grapevine].Phenology.BudBurstDOY      as BudBurstDAWS",
                "[Grapevine].Phenology.FloweringDOY     as FloweringDAWS",
                "[Grapevine].Phenology.VeraisonDOY      as VeraisonDAWS",
                "[Grapevine].Phenology.CurrentStageName as CurrentStageName",
                "[Grapevine].Phenology.AccumulatedChillingUnitBeforeWinterPruning",
                "",
                "[Grapevine].Structure.PrimaryBudNo",
                "[Grapevine].Structure.MainStemPopn",
                "[Grapevine].Structure.LeafTipsAppeared",
                "",
                "[Grapevine].Structure.TotalLeavesPerShoot as leaf.no.shoot",
                "[Grapevine].Leaf.InitialisedCohortNo",
                "[Grapevine].Leaf.DeadCohortNo",
                "[Grapevine].Leaf.AppearedCohortNo",
                "[Grapevine].Leaf.CohortSize",
                "",
                "[Grapevine].Leaf.LAI as LAI",
                "[Grapevine].Leaf.LAI/[Grapevine].Population             as leaf.area.vine",
                "[Grapevine].Leaf.LAI/[Grapevine].Structure.MainStemPopn as leaf.area.shoot",
                "[Grapevine].Leaf.LAIMainStem/[Grapevine].Structure.MainStemPopn as leaf.area.shoot.main",
                "[Grapevine].Leaf.LAIBranch/[Grapevine].Structure.MainStemPopn as leaf.area.shoot.lateral",
                "",
                "",
                "[Grapevine].Leaf.Fn",
                "[Grapevine].Leaf.Fw",
                "[Grapevine].Leaf.Live.Wt",
                "[Grapevine].Leaf.Live.Wt/[Grapevine].Structure.MainStemPopn as leaf.dw.shoot",
                "",
                "[Grapevine].Shoot.Live.Wt",
                "[Grapevine].Shoot.Live.Wt/[Grapevine].Structure.MainStemPopn as shoot.dw",
                "[Grapevine].Shoot.Live.StructuralWt",
                "[Grapevine].Shoot.Live.StorageWt",
                "",
                "[Grapevine].Cane.Live.Wt",
                "[Grapevine].Cane.Live.StructuralWt",
                "[Grapevine].Cane.Live.StorageWt",
                "[Grapevine].Trunk.Live.Wt",
                "[Grapevine].Trunk.Live.StructuralWt",
                "[Grapevine].Trunk.Live.StorageWt",
                "[Grapevine].Trunk.Live.StorageWt/[Grapevine].Trunk.Live.Wt as total.NSC.concentration.trunk",
                "[Grapevine].Root.Live.Wt",
                "[Grapevine].StructuralRoot.Live.Wt",
                "[Grapevine].StructuralRoot.Live.StructuralWt",
                "[Grapevine].StructuralRoot.Live.StorageWt",
                "[Grapevine].StructuralRoot.Live.StorageWt/[Grapevine].StructuralRoot.Live.Wt as total.NSC.concentration.root",
                " ",
                "",
                "[Grapevine].Arbitrator.FDM",
                "[Grapevine].Arbitrator.DM.TotalFixationSupply",
                "",
                "[Grapevine].Berry.Live.Wt",
                "[Grapevine].Berry.SingleBerryDW",
                "[Grapevine].Berry.SingleBerryFW     as berry.fw.mean",
                "[Grapevine].Berry.TotalBerryFW  ",
                "[Grapevine].Berry.NumberFunction",
                "[Grapevine].Berry.ThermalTimeAfterFlowering",
                "[Grapevine].Berry.WaterContent",
                "[Grapevine].Berry.Brix \t\t\t\tas brix",
                "[Grapevine].Berry.TitratableAcid \tas ta",
                "",
                "[Grapevine].Berry.MetFactors.BUN_TmaxIni_Record    as BUN_TmaxIni",
                "[Grapevine].Berry.MetFactors.BUN_RadIni_Record     as BUN_RadIni",
                "[Grapevine].Berry.MetFactors.BEN_RainTotFlow as BEN_RainTotFlow",
                "[Grapevine].Berry.MetFactors.BEN_TmaxIni_Record    as BEN_TmaxIni_Record",
                "[Grapevine].Berry.MetFactors.BEN_TmeanFlow   as BEN_TmeanFlow",
                "[Grapevine].Berry.MetFactors.BM_RadFlow      as BM_RadFlow",
                "[Grapevine].Berry.MetFactors.BM_RainTotFlow  as BM_RainTotFlow",
                "[Grapevine].Berry.MetFactors.BM_RainTotVer   as BM_RainTotVer",
                "[Grapevine].Berry.MetFactors.BM_TmeanFlow    as BM_TmeanFlow",
                "",
                "[Grapevine].Berry.YieldComponent.BunchesPerShoot as bunch.no.shoot",
                "[Grapevine].Berry.YieldComponent.BunchesPerVine  as bunch.no.vine",
                "[Grapevine].Berry.YieldComponent.BerryNum    as BerryNum",
                "[Grapevine].Berry.YieldComponent.BerryMass   as berry.fw.est",
                "[Grapevine].Berry.YieldPerVine               as yield.per.vine"
              ],
              "EventNames": [
                "[Clock].DoReport"
              ],
              "GroupByVariableName": null,
              "Name": "Report",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using Models.PMF.Phen;\r\nusing Models.Zones;\r\nusing Models.Soils;\r\nusing APSIM.Shared.Utilities;\r\nusing Models.PMF;\r\nusing Models.Core;\r\nusing System;\r\nusing Models.PMF.Struct;\r\n        \r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    [System.Xml.Serialization.XmlInclude(typeof(Model))]\r\n    public class Script : Model\r\n    {\r\n        [Link] private Plant Grapevine;\r\n        [Link] private Clock Clock;\r\n        [Link] private Soil Soil;\r\n        [Link] private Zone zone;\r\n        [Link]\r\n        private Structure structure;\r\n        [Link]\r\n        private Phenology phenology;\r\n\r\n        [Display(Type = DisplayType.CultivarName)]\r\n        [Description(\"Plant Type\")]\r\n        public string CultivarName { get; set; }\r\n\r\n        [Description(\"Initialisation Date\")]\r\n        public DateTime SowingDate { get; set; }\r\n\r\n        [Description(\"Vine distance(m)\")]\r\n        public double VineDistance { get; set; }\r\n        //number of buds lay down in cane and spur. there is a function inside to calculate the number of buds per vine based on bud burst and from cane head\r\n        [Description(\"Bud number(#)\")]\r\n        public double BudNumber { get; set; }\r\n        //cane or spur biomass\r\n        [Description(\"Cane number(#)\")]\r\n        public double CaneNumber { get; set; }\r\n      \r\n        [Description(\"Cane diameter(mm)\")]\r\n        public double CaneDiameter { get; set; }\r\n\r\n        [Description(\"Cane length(m)\")]\r\n        public double CaneLength { get; set; }\r\n        //trunk information\r\n        [Description(\"Trunk diameter(mm)\")]\r\n        public double TrunkDiameter { get; set; }\r\n\r\n        [Description(\"Trunk length(m)\")]\r\n        public double TrunkLength { get; set; }\r\n        //root dry matter\r\n        [Description(\"Fibrous root trunk ratio\")]\r\n        public double RootTrunkRatio { get; set; }\r\n             \r\n        //total nonstructural fraction in dry matter \r\n        [Description(\"Fibrous root nonstructural carbon fraction\")]\r\n        public double RootNSC { get; set; }\r\n\r\n        [Description(\"Trunk nonstructural carbon fraction\")]\r\n        public double TrunkNSC { get; set; }\r\n\r\n        [Description(\"Cane nonstructural carbon fraction\")]\r\n        public double CaneNSC { get; set; }\r\n\r\n        [Description(\"Age of trees (in Years) at start of simulation)\")]\r\n        public int StartAge {get;set;}\r\n\r\n        private RectangularZone RowZone {get; set;}\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            if (Clock.Today.Date == SowingDate)\r\n            {\r\n                RowZone = this.Parent.Parent.Parent.FindInScope(\"Row\") as RectangularZone;\r\n                double pop = 1/RowZone.Width/VineDistance;  \r\n                //sowing method\r\n                Grapevine.Sow(cultivar: CultivarName,population: pop, \r\n                depth: 2000, rowSpacing: RowZone.Width, budNumber:BudNumber);\r\n                double budsPerMeterRow = BudNumber/VineDistance; \r\n                zone.Set(\"[Grapevine].Structure.BudsPerMeterRow.FixedValue\", budsPerMeterRow); \r\n                //cane biomass\r\n                //calculate the biomass by length 1 meter time number of canes time wood density (0.5 g/mm2/m) * pop to covert the biomass into g/m2\r\n                double woodDensity = 0.4; //g/mm2/m\r\n                double CaneNumber = BudNumber/12; //recalculating cane number as we \r\n                double caneBiomass = 3.1415926*(CaneDiameter/2)*(CaneDiameter/2)*CaneLength*CaneNumber *woodDensity * pop; \r\n                double caneNSC = caneBiomass * CaneNSC;\r\n                zone.Set(\"[Grapevine].Cane.CaneDiameter.FixedValue\", CaneDiameter);\r\n                zone.Set(\"[Grapevine].Cane.CaneLength.FixedValue\", CaneLength);\r\n                zone.Set(\"[Grapevine].Cane.CaneNumber.FixedValue\", CaneNumber);\r\n\r\n                zone.Set(\"[Grapevine].Cane.Live.StorageWt\", caneNSC);                \r\n                zone.Set(\"[Grapevine].Cane.Live.StructuralWt\", caneBiomass - caneNSC);                \r\n\r\n                //trunk biomass\r\n                double trunkDensity = 0.5; //g/mm2/m\r\n                double trunkBiomass = 3.1415926*(TrunkDiameter/2)*(TrunkDiameter/2)*TrunkLength *trunkDensity * pop; \r\n                double trunkNSC = trunkBiomass * TrunkNSC;\r\n\r\n                zone.Set(\"[Grapevine].Trunk.TrunkDiameter.FixedValue\", TrunkDiameter);\r\n                zone.Set(\"[Grapevine].Trunk.TrunkLength.FixedValue\", TrunkLength);\r\n\r\n                zone.Set(\"[Grapevine].Trunk.Live.StorageWt\", trunkNSC); \r\n                zone.Set(\"[Grapevine].Trunk.Live.StructuralWt\", trunkBiomass - trunkNSC);              \r\n                \r\n\r\n                //Fibrous Root biomass is  per plant\r\n                double rootBiomass = RootTrunkRatio * trunkBiomass; \r\n                double rootNSC = rootBiomass * RootNSC; \r\n                // zone.Set(\"[Grapevine].StructuralRoot.DMDemands.Structural.RootTrunkRatio\",  RootTrunkRatio); \r\n                \r\n                 zone.Set(\"[Grapevine].StructuralRoot.Live.StorageWt\",    rootNSC ); //rootNSC*pop\r\n                 zone.Set(\"[Grapevine].StructuralRoot.Live.StructuralWt\", rootBiomass - rootNSC); \r\n\r\n                object StartAgeValue = StartAge;\r\n                zone.Set(\"[Grapevine].Phenology.Age.Years\",StartAgeValue);\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n}            \r\n",
              "Parameters": [
                {
                  "Key": "CultivarName",
                  "Value": "SauvignonBlanc"
                },
                {
                  "Key": "SowingDate",
                  "Value": "02/25/2005 00:00:00"
                },
                {
                  "Key": "VineDistance",
                  "Value": "1.8"
                },
                {
                  "Key": "BudNumber",
                  "Value": "48"
                },
                {
                  "Key": "CaneNumber",
                  "Value": "4"
                },
                {
                  "Key": "CaneDiameter",
                  "Value": "10"
                },
                {
                  "Key": "CaneLength",
                  "Value": "0.9"
                },
                {
                  "Key": "TrunkDiameter",
                  "Value": "40"
                },
                {
                  "Key": "TrunkLength",
                  "Value": "0.8"
                },
                {
                  "Key": "RootTrunkRatio",
                  "Value": "1"
                },
                {
                  "Key": "RootNSC",
                  "Value": "0.2"
                },
                {
                  "Key": "TrunkNSC",
                  "Value": "0.2"
                },
                {
                  "Key": "CaneNSC",
                  "Value": "0.2"
                },
                {
                  "Key": "StartAge",
                  "Value": "3"
                }
              ],
              "Name": "TreeInitialisation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Zones.RectangularZone, Models",
          "Length": 100.0,
          "Width": 1.5,
          "Slope": 0.0,
          "AspectAngle": 0.0,
          "Altitude": 50.0,
          "Name": "Alley",
          "ResourceName": null,
          "Children": [
            {
              "$type": "Models.Report, Models",
              "VariableNames": [
                "[Clock].Today",
                "[Clock].Today.Year",
                "[Clock].Today.DayOfYear",
                "[Weather].DaysSinceWinterSolstice   as DAWS",
                "[PlantVariables].Script.Height \t\tas height",
                "[PlantVariables].Script.LAI         as lai",
                "[PlantVariables].Script.FRadInt     as f.rad.int",
                "[PlantVariables].Script.ET          as transpiration",
                "[PlantVariables].Script.ES          as Es",
                "[PlantVariables].Script.PET         as PET",
                "[PlantVariables].Script.RootDepth   as rootDepth",
                "",
                "[Soil].OutputLayers.SW",
                "sum([Soil].OutputLayers.SWmm)       as psw",
                "[Weather].Rain",
                "[Irrigation].IrrigationApplied",
                "[Soil].SoilWater.Drainage"
              ],
              "EventNames": [
                "[Clock].DoReport"
              ],
              "GroupByVariableName": null,
              "Name": "ReportAlley",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Surface.SurfaceOrganicMatter, Models",
              "SurfOM": [],
              "Canopies": [],
              "InitialResidueName": "wheat_stubble",
              "InitialResidueType": "wheat",
              "InitialResidueMass": 10.0,
              "InitialStandingFraction": 0.0,
              "InitialCPR": 0.0,
              "InitialCNR": 30.0,
              "Name": "SurfaceOrganicMatter",
              "ResourceName": "SurfaceOrganicMatter",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "Name": "Slurp",
              "ResourceName": "Slurp",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Fertiliser, Models",
              "Name": "Fertiliser",
              "ResourceName": "Fertiliser",
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Irrigation, Models",
              "Name": "Irrigation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "\r\nusing Models.Interfaces;\r\nusing Models.PMF.Organs;\r\nusing System;\r\nusing Models.Core;\r\nusing Models.PMF;\r\nusing APSIM.Shared.Utilities;\r\nusing Models.Soils;\r\n        \r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    [System.Xml.Serialization.XmlInclude(typeof(Model))]\r\n    public class Script : Model\r\n    {\r\n        [Link] private Plant Slurp;\r\n        [Link] private Clock Clock;\r\n        [Link] private Soil Soil;\r\n        [Link] private Zone zone;\r\n        [Link(Type = LinkType.Path, Path = \"[Slurp].Root\")]\r\n        private Root root;\r\n        [Link]\r\n        private IPhysical soilPhysical;\r\n\r\n        [Display(Type = DisplayType.CultivarName)]\r\n        [Description(\"Plant Type\")]\r\n        public string CultivarName { get; set; }\r\n        [Description(\"Initial Root Depth\")]\r\n        public double InitialRootDepth { get; set; }\r\n        [Description(\"Initialisation Date\")]\r\n        public DateTime SowingDate { get; set; }\r\n        [Description(\"Maximum Root Depth\")]\r\n        public double RootDepth { get; set; }\r\n        [Description(\"Roof Front Velocity\")]\r\n        public double RFV { get; set; }\r\n        [Description(\"Factor to change Kl modifier with Depth\")]\r\n        public double KLReductionFactor { get; set; }\r\n        [Description(\"Depth that KL starts to decline\")]\r\n        public double KLReductionDepth { get; set; }\r\n        \r\n        public double[] YKLModifiers { get; set; }\r\n        public double[] XDepth { get; set; }\r\n        private double Depth { get; set; }\r\n        \r\n        [Description(\"Maximum Stomatal Conductance\")]\r\n        public double MaxG { get; set; }\r\n        [Description(\"Stomatal Radn response\")]\r\n        public double R50 { get; set; }\r\n        \r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            if (Clock.Today.Date == SowingDate)\r\n            {\r\n                Slurp.Sow(cultivar: CultivarName, population: 1, depth: InitialRootDepth, rowSpacing: 150);\r\n                \r\n                YKLModifiers = new double[soilPhysical.Thickness.Length];\r\n                XDepth = new double[soilPhysical.Thickness.Length];\r\n                Depth = 0;\r\n                for (int layer = 0; layer < soilPhysical.Thickness.Length; layer++)\r\n                {\r\n                    Depth += soilPhysical.Thickness[layer] / 2;  //Add half of the thickness of the current layer so depth is the mid depth of that layer\r\n                    if (Depth <= KLReductionDepth)\r\n                    {\r\n                        YKLModifiers[layer] = 1;\r\n                        XDepth[layer] = Depth;\r\n                    }\r\n                    else\r\n                    {\r\n                        double KLMod = 1 * Math.Exp(-KLReductionFactor * (Depth - KLReductionDepth));\r\n                        YKLModifiers[layer] = KLMod;\r\n                        XDepth[layer] = Depth;\r\n                    }\r\n                    Depth += soilPhysical.Thickness[layer] / 2;  //Add the other half of the current layer so depth is the top of the next layer\r\n                }\r\n                object KLMods = YKLModifiers;\r\n                zone.Set(\"Slurp.Root.KLModifier.XYPairs.Y\", KLMods);\r\n                object Depths = XDepth;\r\n                zone.Set(\"Slurp.Root.KLModifier.XYPairs.X\", Depths);\r\n                object RD = RootDepth;\r\n                zone.Set(\"Slurp.Root.MaximumRootDepth.FixedValue\", RD);\r\n                object RV = RFV;\r\n                zone.Set(\"Slurp.Root.RootFrontVelocity.Potential.FixedValue\", RV);\r\n                object GMaxValue = MaxG;\r\n                zone.Set(\"Slurp.Leaf.Gsmax350\", GMaxValue); \r\n                object R50Value = R50; \r\n                zone.Set(\"Slurp.Leaf.R50\", R50Value); \r\n                \r\n            }\r\n        }\r\n    }\r\n}\r\n                \r\n",
              "Parameters": [
                {
                  "Key": "CultivarName",
                  "Value": "StaticCrop"
                },
                {
                  "Key": "InitialRootDepth",
                  "Value": "2000"
                },
                {
                  "Key": "SowingDate",
                  "Value": "02/25/2005 00:00:00"
                },
                {
                  "Key": "RootDepth",
                  "Value": "2000"
                },
                {
                  "Key": "RFV",
                  "Value": "10"
                },
                {
                  "Key": "KLReductionFactor",
                  "Value": "-0.001"
                },
                {
                  "Key": "KLReductionDepth",
                  "Value": "150"
                },
                {
                  "Key": "MaxG",
                  "Value": "0.004"
                },
                {
                  "Key": "R50",
                  "Value": "150"
                }
              ],
              "Name": "PastureInitialisation",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using Models.Soils;\r\nusing System.Data;\r\nusing APSIM.Shared.Utilities;\r\nusing System.Xml.Serialization;\r\nusing Models;\r\nusing Models.PMF;\r\nusing System.Text;\r\nusing System.Collections.Generic;\r\nusing Models.Core;\r\nusing System;\r\nusing Models.Climate;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    //[System.Xml.Serialization.XmlInclude(typeof(Model))]\r\n    public class Script : Model\r\n    {\r\n        [Link] Plant Slurp;\r\n        [Link] Clock Clock;\r\n        [Link] Zone zone;\r\n        [Link] Weather weather;\r\n\r\n        \r\n        [Description(\"Extinction coefficient\")]\r\n        public  double Ext_coef { get; set; }\r\n        [Description(\"Maximum height of leaves\")]\r\n        public double MaximumHeight { get; set; }\r\n        [Description(\"Minimum height of leaves\")]\r\n        public double MinimumHeight { get; set; }\r\n        \r\n        public double Cover {get; private set;}\r\n        public double LAI { get; private set; }\r\n                \r\n        [EventSubscribe(\"StartOfSimulation\")]\r\n        private void OnStartOfSimulation(object sender, EventArgs e)\r\n        {\r\n            Cover = 0.5;\r\n        }\r\n        \r\n        [EventSubscribe(\"StartOfDay\")]\r\n        private void OnStartOfDay(object sender, EventArgs e)\r\n        {\r\n            Cover += weather.MeanT * 0.001;\r\n\r\n            if (Cover >= 1.0)\r\n            {\r\n                Cover = 0.5;        \r\n            }\r\n\r\n              LAI = Math.Log(1 - Cover) / -Ext_coef;\r\n\r\n            object LAIResetValue = LAI;\r\n            zone.Set(\"Slurp.Leaf.Area.FixedValue\", LAIResetValue);  \r\n            object HeightResetValue = MinimumHeight + Cover * (MaximumHeight-MinimumHeight);\r\n            zone.Set(\"Slurp.Leaf.HeightFunction.FixedValue\", HeightResetValue);  \r\n        }\r\n    }\r\n}\r\n                \r\n",
              "Parameters": [
                {
                  "Key": "Ext_coef",
                  "Value": "0.6"
                },
                {
                  "Key": "MaximumHeight",
                  "Value": "300"
                },
                {
                  "Key": "MinimumHeight",
                  "Value": "100"
                }
              ],
              "Name": "SetPastureVariables",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using Models.Soils;\r\nusing Models.Functions;\r\nusing APSIM.Shared.Utilities;\r\nusing System.Xml.Serialization;\r\nusing Models;\r\nusing Models.PMF;\r\nusing System.Text;\r\nusing System.Collections.Generic;\r\nusing Models.Core;\r\nusing System;\r\nusing Models.PMF.Organs;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    public class Script : Model\r\n    {\r\n        [Link] private Plant Slurp;\r\n        [Link] private Clock Clock;\r\n        [Link] private Zone zone;\r\n        [Link(Type = LinkType.Path, Path = \"[Slurp].Root\")]\r\n        private Root root;\r\n\r\n        [Description(\"Use extra root zone\")]\r\n        public bool UseExtraZone { get; set; }\r\n\r\n        \r\n        [EventSubscribe(\"StartOfSimulation\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\r\n            if (UseExtraZone)\r\n            {\r\n            root.ZoneNamesToGrowRootsIn.Add(\"Row\");\r\n            root.ZoneRootDepths.Add(600);\r\nNutrientPoolFunctions InitialDM = new NutrientPoolFunctions();\r\nConstant InitStruct = new Constant();\r\nInitStruct.FixedValue = 10;\r\nInitialDM.Structural = InitStruct;\r\nConstant InitMetab = new Constant();\r\nInitMetab.FixedValue = 0;\r\nInitialDM.Metabolic = InitMetab;\r\nConstant InitStor = new Constant();\r\nInitStor.FixedValue = 0;\r\nInitialDM.Storage = InitStor;\r\n            root.ZoneInitialDM.Add(InitialDM);\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n       \r\n\r\n",
              "Parameters": [
                {
                  "Key": "UseExtraZone",
                  "Value": "True"
                }
              ],
              "Name": "SetupPastureRootZones",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Operations, Models",
              "Operation": [
                {
                  "$type": "Models.Operation, Models",
                  "Date": "2002-05-28",
                  "Action": "[Irrigation].Apply(200);",
                  "Enabled": true
                }
              ],
              "Name": "WinterRainfall",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using Models.Soils;\r\nusing System;\r\nusing Models.Core;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        \r\n    }\r\n}\r\n",
              "Parameters": [],
              "Name": "PlantVariables",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Manager, Models",
              "Code": "using APSIM.Shared.Utilities;\r\nusing Models.Surface;\r\nusing Models.Utilities;\r\nusing Models.Soils.Nutrients;\r\nusing Models.Soils;\r\nusing Models.PMF;\r\nusing Models.Core;\r\nusing System;\r\nusing Models.Interfaces;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        [Link] private Clock Clock;\r\n        [Link] private Plant Wheat;\r\n        [Link] private ISoilWater SoilWater;\r\n        [Link] private Nutrient nitrogen;\r\n        [Link] private SurfaceOrganicMatter SOM;\r\n        [Link] private Summary Summary;\r\n\r\n        [Description(\"Date to reset on:\")]\r\n        public string ResetDate {get;set;}\r\n\r\n        [Description(\"Reset Water? (Yes or No)\")]\r\n        public string ResetWater {get;set;}\r\n\r\n        [Description(\"Reset Soil Nutrients ? (Yes or No)\")]\r\n        public string ResetNutrients {get;set;}\r\n\r\n        [Description(\"Reset Surface Organic Matter? (Yes or No)\")]\r\n        public string ResetSOM {get;set;}\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            if (DateUtilities.WithinDates(ResetDate, Clock.Today, ResetDate))\r\n            {\r\n                if (ResetWater == \"Yes\")\r\n                {\r\n                    Summary.WriteMessage(this, \"Reset Water\", MessageType.Diagnostic);\r\n                    SoilWater.Reset();\r\n                }\r\n               \r\n                 if (ResetNutrients == \"Yes\")\r\n                {\r\n                    Summary.WriteMessage(this, \"Reset Nitrogen\", MessageType.Diagnostic);\r\n                    nitrogen.Reset();\r\n                }\r\n\r\n                if (ResetSOM == \"Yes\")\r\n                {\r\n                    Summary.WriteMessage(this, \"Reset Surface OM\", MessageType.Diagnostic);\r\n                    SOM.Reset();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
              "Parameters": [
                {
                  "Key": "ResetDate",
                  "Value": "10-Jul"
                },
                {
                  "Key": "ResetWater",
                  "Value": "Yes"
                },
                {
                  "Key": "ResetNutrients",
                  "Value": "Yes"
                },
                {
                  "Key": "ResetSOM",
                  "Value": "Yes"
                }
              ],
              "Name": "Reset on date",
              "ResourceName": null,
              "Children": [],
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Soils.Soil, Models",
              "RecordNumber": 0,
              "ASCOrder": null,
              "ASCSubOrder": null,
              "SoilType": null,
              "LocalName": null,
              "Site": null,
              "NearestTown": null,
              "Region": null,
              "State": null,
              "Country": null,
              "NaturalVegetation": null,
              "ApsoilNumber": null,
              "Latitude": 0.0,
              "Longitude": 0.0,
              "LocationAccuracy": null,
              "YearOfSampling": null,
              "DataSource": null,
              "Comments": null,
              "Name": "Soil",
              "ResourceName": null,
              "Children": [
                {
                  "$type": "Models.Soils.LayerStructure, Models",
                  "Thickness": [
                    200.0,
                    200.0,
                    200.0,
                    200.0,
                    200.0,
                    200.0,
                    400.0,
                    400.0,
                    400.0,
                    600.0
                  ],
                  "Name": "LayerStructure",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Physical, Models",
                  "Thickness": [
                    200.0,
                    250.0,
                    300.0,
                    150.0,
                    150.0,
                    1950.0
                  ],
                  "ParticleSizeClay": null,
                  "ParticleSizeSand": null,
                  "ParticleSizeSilt": null,
                  "Rocks": null,
                  "Texture": null,
                  "BD": [
                    1.35,
                    1.35,
                    1.4,
                    1.4,
                    1.4,
                    1.59
                  ],
                  "AirDry": [
                    0.1,
                    0.1,
                    0.15,
                    0.13,
                    0.1,
                    0.06
                  ],
                  "LL15": [
                    0.2,
                    0.2,
                    0.15,
                    0.13,
                    0.1,
                    0.06
                  ],
                  "DUL": [
                    0.35,
                    0.35,
                    0.35,
                    0.33,
                    0.28,
                    0.1
                  ],
                  "SAT": [
                    0.45,
                    0.45,
                    0.4,
                    0.35,
                    0.35,
                    0.3
                  ],
                  "KS": null,
                  "BDMetadata": null,
                  "AirDryMetadata": null,
                  "LL15Metadata": null,
                  "DULMetadata": null,
                  "SATMetadata": null,
                  "KSMetadata": null,
                  "RocksMetadata": null,
                  "TextureMetadata": null,
                  "ParticleSizeSandMetadata": null,
                  "ParticleSizeSiltMetadata": null,
                  "ParticleSizeClayMetadata": null,
                  "Name": "Physical",
                  "ResourceName": null,
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.2,
                        0.2,
                        0.15,
                        0.13,
                        0.1,
                        0.06
                      ],
                      "KL": [
                        0.25,
                        0.1,
                        0.08,
                        0.05,
                        0.05,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "GrapevineSoil",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.2,
                        0.2,
                        0.15,
                        0.13,
                        0.1,
                        0.06
                      ],
                      "KL": [
                        0.11,
                        0.11,
                        0.02,
                        0.0,
                        0.0,
                        0.0
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "SlurpSoil",
                      "ResourceName": null,
                      "Children": [],
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.WaterModel.WaterBalance, Models",
                  "SummerDate": "1-Nov",
                  "SummerU": 4.0,
                  "SummerCona": 1.0,
                  "WinterDate": "1-Apr",
                  "WinterU": 4.0,
                  "WinterCona": 1.0,
                  "DiffusConst": 88.0,
                  "DiffusSlope": 35.4,
                  "Salb": 0.18,
                  "CN2Bare": 68.0,
                  "CNRed": 20.0,
                  "CNCov": 0.8,
                  "DischargeWidth": 0.0,
                  "CatchmentArea": 0.0,
                  "PSIDul": -100.0,
                  "Thickness": [
                    150.0,
                    150.0,
                    100.0,
                    200.0,
                    200.0,
                    200.0,
                    200.0,
                    200.0,
                    200.0,
                    200.0,
                    200.0,
                    200.0,
                    400.0,
                    400.0
                  ],
                  "SWCON": [
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55,
                    0.55
                  ],
                  "KLAT": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "Name": "SoilWater",
                  "ResourceName": "WaterBalance",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Organic, Models",
                  "FOMCNRatio": 30.0,
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "Carbon": [
                    1.82,
                    1.47,
                    1.2,
                    1.03,
                    0.47,
                    0.47
                  ],
                  "CarbonUnits": 0,
                  "SoilCNRatio": [
                    11.5,
                    11.5,
                    11.5,
                    11.5,
                    11.5,
                    11.5
                  ],
                  "FBiom": [
                    0.025,
                    0.025,
                    0.015,
                    0.01,
                    0.01,
                    0.01
                  ],
                  "FInert": [
                    0.3,
                    0.4,
                    0.75,
                    0.9,
                    0.96,
                    0.96
                  ],
                  "FOM": [
                    1243.9310541346904,
                    833.8319214727269,
                    457.61666105087295,
                    251.1453484552152,
                    137.83148958311097,
                    75.64352530338392
                  ],
                  "CarbonMetadata": null,
                  "FOMMetadata": null,
                  "Name": "Organic",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Chemical, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "PH": [
                    6.6,
                    6.2,
                    5.7,
                    5.5,
                    5.5,
                    5.5
                  ],
                  "PHUnits": 0,
                  "EC": null,
                  "ESP": null,
                  "CEC": null,
                  "ECMetadata": null,
                  "CLMetadata": null,
                  "ESPMetadata": null,
                  "PHMetadata": null,
                  "Name": "Chemical",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.CERESSoilTemperature, Models",
                  "Name": "Temperature",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Water, Models",
                  "Thickness": [
                    200.0,
                    250.0,
                    300.0,
                    150.0,
                    150.0,
                    1950.0
                  ],
                  "InitialValues": [
                    0.35,
                    0.35,
                    0.35,
                    0.33,
                    0.28,
                    0.1
                  ],
                  "InitialPAWmm": 262.5,
                  "RelativeTo": "LL15",
                  "FilledFromTop": true,
                  "Name": "Water",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.OutputLayers, Models",
                  "Thickness": [
                    150.0,
                    150.0,
                    150.0,
                    150.0,
                    150.0,
                    150.0,
                    150.0
                  ],
                  "Name": "OutputLayers",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Nutrients.Nutrient, Models",
                  "Name": "Nutrient",
                  "ResourceName": "Nutrient",
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    3.0,
                    2.0,
                    1.0,
                    1.0,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "Name": "NO3",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    3.0,
                    1.5,
                    1.2,
                    1.1,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 0,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "Name": "NH4",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Solute, Models",
                  "Thickness": [
                    100.0,
                    200.0,
                    300.0,
                    300.0,
                    300.0,
                    300.0
                  ],
                  "InitialValues": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "InitialValuesUnits": 1,
                  "WaterTableConcentration": 0.0,
                  "D0": 0.0,
                  "Exco": null,
                  "FIP": null,
                  "DepthConstant": 0.0,
                  "MaxDepthSoluteAccessible": 0.0,
                  "RunoffEffectivenessAtMovingSolute": 0.0,
                  "MaxEffectiveRunoff": 0.0,
                  "Name": "Urea",
                  "ResourceName": null,
                  "Children": [],
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "Enabled": true,
      "ReadOnly": false
    }
  ],
  "Enabled": true,
  "ReadOnly": false
}